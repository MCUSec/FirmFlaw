FStar_UInt128___proj__Mkuint128__item__high	3rdparty/everest/library/kremlib/FStar_UInt128_extracted.c	/^uint64_t FStar_UInt128___proj__Mkuint128__item__high(FStar_UInt128_uint128 projectee)$/;"	f	typeref:typename:uint64_t
FStar_UInt128___proj__Mkuint128__item__low	3rdparty/everest/library/kremlib/FStar_UInt128_extracted.c	/^uint64_t FStar_UInt128___proj__Mkuint128__item__low(FStar_UInt128_uint128 projectee)$/;"	f	typeref:typename:uint64_t
FStar_UInt128_add	3rdparty/everest/library/kremlib/FStar_UInt128_extracted.c	/^FStar_UInt128_uint128 FStar_UInt128_add(FStar_UInt128_uint128 a, FStar_UInt128_uint128 b)$/;"	f	typeref:typename:FStar_UInt128_uint128
FStar_UInt128_add_mod	3rdparty/everest/library/kremlib/FStar_UInt128_extracted.c	/^FStar_UInt128_uint128 FStar_UInt128_add_mod(FStar_UInt128_uint128 a, FStar_UInt128_uint128 b)$/;"	f	typeref:typename:FStar_UInt128_uint128
FStar_UInt128_add_u64_shift_left	3rdparty/everest/library/kremlib/FStar_UInt128_extracted.c	/^static uint64_t FStar_UInt128_add_u64_shift_left(uint64_t hi, uint64_t lo, uint32_t s)$/;"	f	typeref:typename:uint64_t	file:
FStar_UInt128_add_u64_shift_left_respec	3rdparty/everest/library/kremlib/FStar_UInt128_extracted.c	/^static uint64_t FStar_UInt128_add_u64_shift_left_respec(uint64_t hi, uint64_t lo, uint32_t s)$/;"	f	typeref:typename:uint64_t	file:
FStar_UInt128_add_u64_shift_right	3rdparty/everest/library/kremlib/FStar_UInt128_extracted.c	/^static uint64_t FStar_UInt128_add_u64_shift_right(uint64_t hi, uint64_t lo, uint32_t s)$/;"	f	typeref:typename:uint64_t	file:
FStar_UInt128_add_u64_shift_right_respec	3rdparty/everest/library/kremlib/FStar_UInt128_extracted.c	/^static uint64_t FStar_UInt128_add_u64_shift_right_respec(uint64_t hi, uint64_t lo, uint32_t s)$/;"	f	typeref:typename:uint64_t	file:
FStar_UInt128_add_underspec	3rdparty/everest/library/kremlib/FStar_UInt128_extracted.c	/^FStar_UInt128_add_underspec(FStar_UInt128_uint128 a, FStar_UInt128_uint128 b)$/;"	f	typeref:typename:FStar_UInt128_uint128
FStar_UInt128_carry	3rdparty/everest/library/kremlib/FStar_UInt128_extracted.c	/^static uint64_t FStar_UInt128_carry(uint64_t a, uint64_t b)$/;"	f	typeref:typename:uint64_t	file:
FStar_UInt128_constant_time_carry	3rdparty/everest/library/kremlib/FStar_UInt128_extracted.c	/^static uint64_t FStar_UInt128_constant_time_carry(uint64_t a, uint64_t b)$/;"	f	typeref:typename:uint64_t	file:
FStar_UInt128_eq	3rdparty/everest/library/kremlib/FStar_UInt128_extracted.c	/^bool FStar_UInt128_eq(FStar_UInt128_uint128 a, FStar_UInt128_uint128 b)$/;"	f	typeref:typename:bool
FStar_UInt128_eq_mask	3rdparty/everest/library/kremlib/FStar_UInt128_extracted.c	/^FStar_UInt128_uint128 FStar_UInt128_eq_mask(FStar_UInt128_uint128 a, FStar_UInt128_uint128 b)$/;"	f	typeref:typename:FStar_UInt128_uint128
FStar_UInt128_gt	3rdparty/everest/library/kremlib/FStar_UInt128_extracted.c	/^bool FStar_UInt128_gt(FStar_UInt128_uint128 a, FStar_UInt128_uint128 b)$/;"	f	typeref:typename:bool
FStar_UInt128_gte	3rdparty/everest/library/kremlib/FStar_UInt128_extracted.c	/^bool FStar_UInt128_gte(FStar_UInt128_uint128 a, FStar_UInt128_uint128 b)$/;"	f	typeref:typename:bool
FStar_UInt128_gte_mask	3rdparty/everest/library/kremlib/FStar_UInt128_extracted.c	/^FStar_UInt128_uint128 FStar_UInt128_gte_mask(FStar_UInt128_uint128 a, FStar_UInt128_uint128 b)$/;"	f	typeref:typename:FStar_UInt128_uint128
FStar_UInt128_logand	3rdparty/everest/library/kremlib/FStar_UInt128_extracted.c	/^FStar_UInt128_uint128 FStar_UInt128_logand(FStar_UInt128_uint128 a, FStar_UInt128_uint128 b)$/;"	f	typeref:typename:FStar_UInt128_uint128
FStar_UInt128_lognot	3rdparty/everest/library/kremlib/FStar_UInt128_extracted.c	/^FStar_UInt128_uint128 FStar_UInt128_lognot(FStar_UInt128_uint128 a)$/;"	f	typeref:typename:FStar_UInt128_uint128
FStar_UInt128_logor	3rdparty/everest/library/kremlib/FStar_UInt128_extracted.c	/^FStar_UInt128_uint128 FStar_UInt128_logor(FStar_UInt128_uint128 a, FStar_UInt128_uint128 b)$/;"	f	typeref:typename:FStar_UInt128_uint128
FStar_UInt128_logxor	3rdparty/everest/library/kremlib/FStar_UInt128_extracted.c	/^FStar_UInt128_uint128 FStar_UInt128_logxor(FStar_UInt128_uint128 a, FStar_UInt128_uint128 b)$/;"	f	typeref:typename:FStar_UInt128_uint128
FStar_UInt128_lt	3rdparty/everest/library/kremlib/FStar_UInt128_extracted.c	/^bool FStar_UInt128_lt(FStar_UInt128_uint128 a, FStar_UInt128_uint128 b)$/;"	f	typeref:typename:bool
FStar_UInt128_lte	3rdparty/everest/library/kremlib/FStar_UInt128_extracted.c	/^bool FStar_UInt128_lte(FStar_UInt128_uint128 a, FStar_UInt128_uint128 b)$/;"	f	typeref:typename:bool
FStar_UInt128_mul32	3rdparty/everest/library/kremlib/FStar_UInt128_extracted.c	/^FStar_UInt128_uint128 FStar_UInt128_mul32(uint64_t x, uint32_t y)$/;"	f	typeref:typename:FStar_UInt128_uint128
FStar_UInt128_mul_wide	3rdparty/everest/library/kremlib/FStar_UInt128_extracted.c	/^FStar_UInt128_uint128 FStar_UInt128_mul_wide(uint64_t x, uint64_t y)$/;"	f	typeref:typename:FStar_UInt128_uint128
FStar_UInt128_mul_wide_impl	3rdparty/everest/library/kremlib/FStar_UInt128_extracted.c	/^static FStar_UInt128_uint128 FStar_UInt128_mul_wide_impl(uint64_t x, uint64_t y)$/;"	f	typeref:typename:FStar_UInt128_uint128	file:
FStar_UInt128_mul_wide_impl_t_	3rdparty/everest/library/kremlib/FStar_UInt128_extracted.c	/^FStar_UInt128_mul_wide_impl_t_(uint64_t x, uint64_t y)$/;"	f	typeref:typename:K___uint64_t_uint64_t_uint64_t_uint64_t	file:
FStar_UInt128_shift_left	3rdparty/everest/library/kremlib/FStar_UInt128_extracted.c	/^FStar_UInt128_uint128 FStar_UInt128_shift_left(FStar_UInt128_uint128 a, uint32_t s)$/;"	f	typeref:typename:FStar_UInt128_uint128
FStar_UInt128_shift_left_large	3rdparty/everest/library/kremlib/FStar_UInt128_extracted.c	/^FStar_UInt128_shift_left_large(FStar_UInt128_uint128 a, uint32_t s)$/;"	f	typeref:typename:FStar_UInt128_uint128	file:
FStar_UInt128_shift_left_small	3rdparty/everest/library/kremlib/FStar_UInt128_extracted.c	/^FStar_UInt128_shift_left_small(FStar_UInt128_uint128 a, uint32_t s)$/;"	f	typeref:typename:FStar_UInt128_uint128	file:
FStar_UInt128_shift_right	3rdparty/everest/library/kremlib/FStar_UInt128_extracted.c	/^FStar_UInt128_uint128 FStar_UInt128_shift_right(FStar_UInt128_uint128 a, uint32_t s)$/;"	f	typeref:typename:FStar_UInt128_uint128
FStar_UInt128_shift_right_large	3rdparty/everest/library/kremlib/FStar_UInt128_extracted.c	/^FStar_UInt128_shift_right_large(FStar_UInt128_uint128 a, uint32_t s)$/;"	f	typeref:typename:FStar_UInt128_uint128	file:
FStar_UInt128_shift_right_small	3rdparty/everest/library/kremlib/FStar_UInt128_extracted.c	/^FStar_UInt128_shift_right_small(FStar_UInt128_uint128 a, uint32_t s)$/;"	f	typeref:typename:FStar_UInt128_uint128	file:
FStar_UInt128_sub	3rdparty/everest/library/kremlib/FStar_UInt128_extracted.c	/^FStar_UInt128_uint128 FStar_UInt128_sub(FStar_UInt128_uint128 a, FStar_UInt128_uint128 b)$/;"	f	typeref:typename:FStar_UInt128_uint128
FStar_UInt128_sub_mod	3rdparty/everest/library/kremlib/FStar_UInt128_extracted.c	/^FStar_UInt128_uint128 FStar_UInt128_sub_mod(FStar_UInt128_uint128 a, FStar_UInt128_uint128 b)$/;"	f	typeref:typename:FStar_UInt128_uint128
FStar_UInt128_sub_mod_impl	3rdparty/everest/library/kremlib/FStar_UInt128_extracted.c	/^FStar_UInt128_sub_mod_impl(FStar_UInt128_uint128 a, FStar_UInt128_uint128 b)$/;"	f	typeref:typename:FStar_UInt128_uint128	file:
FStar_UInt128_sub_underspec	3rdparty/everest/library/kremlib/FStar_UInt128_extracted.c	/^FStar_UInt128_sub_underspec(FStar_UInt128_uint128 a, FStar_UInt128_uint128 b)$/;"	f	typeref:typename:FStar_UInt128_uint128
FStar_UInt128_u32_combine	3rdparty/everest/library/kremlib/FStar_UInt128_extracted.c	/^static uint64_t FStar_UInt128_u32_combine(uint64_t hi, uint64_t lo)$/;"	f	typeref:typename:uint64_t	file:
FStar_UInt128_u32_combine_	3rdparty/everest/library/kremlib/FStar_UInt128_extracted.c	/^static uint64_t FStar_UInt128_u32_combine_(uint64_t hi, uint64_t lo)$/;"	f	typeref:typename:uint64_t	file:
FStar_UInt128_u64_mod_32	3rdparty/everest/library/kremlib/FStar_UInt128_extracted.c	/^static uint64_t FStar_UInt128_u64_mod_32(uint64_t a)$/;"	f	typeref:typename:uint64_t	file:
FStar_UInt128_uint128_to_uint64	3rdparty/everest/library/kremlib/FStar_UInt128_extracted.c	/^uint64_t FStar_UInt128_uint128_to_uint64(FStar_UInt128_uint128 a)$/;"	f	typeref:typename:uint64_t
FStar_UInt128_uint64_to_uint128	3rdparty/everest/library/kremlib/FStar_UInt128_extracted.c	/^FStar_UInt128_uint128 FStar_UInt128_uint64_to_uint128(uint64_t a)$/;"	f	typeref:typename:FStar_UInt128_uint128
FStar_UInt16_eq_mask	3rdparty/everest/library/kremlib/FStar_UInt64_FStar_UInt32_FStar_UInt16_FStar_UInt8.c	/^uint16_t FStar_UInt16_eq_mask(uint16_t a, uint16_t b)$/;"	f	typeref:typename:uint16_t
FStar_UInt16_gte_mask	3rdparty/everest/library/kremlib/FStar_UInt64_FStar_UInt32_FStar_UInt16_FStar_UInt8.c	/^uint16_t FStar_UInt16_gte_mask(uint16_t a, uint16_t b)$/;"	f	typeref:typename:uint16_t
FStar_UInt32_eq_mask	3rdparty/everest/library/kremlib/FStar_UInt64_FStar_UInt32_FStar_UInt16_FStar_UInt8.c	/^uint32_t FStar_UInt32_eq_mask(uint32_t a, uint32_t b)$/;"	f	typeref:typename:uint32_t
FStar_UInt32_gte_mask	3rdparty/everest/library/kremlib/FStar_UInt64_FStar_UInt32_FStar_UInt16_FStar_UInt8.c	/^uint32_t FStar_UInt32_gte_mask(uint32_t a, uint32_t b)$/;"	f	typeref:typename:uint32_t
FStar_UInt64_eq_mask	3rdparty/everest/library/kremlib/FStar_UInt64_FStar_UInt32_FStar_UInt16_FStar_UInt8.c	/^uint64_t FStar_UInt64_eq_mask(uint64_t a, uint64_t b)$/;"	f	typeref:typename:uint64_t
FStar_UInt64_gte_mask	3rdparty/everest/library/kremlib/FStar_UInt64_FStar_UInt32_FStar_UInt16_FStar_UInt8.c	/^uint64_t FStar_UInt64_gte_mask(uint64_t a, uint64_t b)$/;"	f	typeref:typename:uint64_t
FStar_UInt8_eq_mask	3rdparty/everest/library/kremlib/FStar_UInt64_FStar_UInt32_FStar_UInt16_FStar_UInt8.c	/^uint8_t FStar_UInt8_eq_mask(uint8_t a, uint8_t b)$/;"	f	typeref:typename:uint8_t
FStar_UInt8_gte_mask	3rdparty/everest/library/kremlib/FStar_UInt64_FStar_UInt32_FStar_UInt16_FStar_UInt8.c	/^uint8_t FStar_UInt8_gte_mask(uint8_t a, uint8_t b)$/;"	f	typeref:typename:uint8_t
Hacl_Bignum_Crecip_crecip	3rdparty/everest/library/Hacl_Curve25519.c	/^inline static void Hacl_Bignum_Crecip_crecip(uint64_t *out, uint64_t *z)$/;"	f	typeref:typename:void	file:
Hacl_Bignum_Crecip_crecip	3rdparty/everest/library/legacy/Hacl_Curve25519.c	/^inline static void Hacl_Bignum_Crecip_crecip(uint64_t *out, uint64_t *z)$/;"	f	typeref:typename:void	file:
Hacl_Bignum_Fmul_fmul	3rdparty/everest/library/Hacl_Curve25519.c	/^inline static void Hacl_Bignum_Fmul_fmul(uint64_t *output, uint64_t *input, uint64_t *input2)$/;"	f	typeref:typename:void	file:
Hacl_Bignum_Fmul_fmul	3rdparty/everest/library/legacy/Hacl_Curve25519.c	/^inline static void Hacl_Bignum_Fmul_fmul(uint64_t *output, uint64_t *input, uint64_t *input2)$/;"	f	typeref:typename:void	file:
Hacl_Bignum_Fmul_mul_shift_reduce_	3rdparty/everest/library/Hacl_Curve25519.c	/^Hacl_Bignum_Fmul_mul_shift_reduce_(uint128_t *output, uint64_t *input, uint64_t *input2)$/;"	f	typeref:typename:void	file:
Hacl_Bignum_Fmul_mul_shift_reduce_	3rdparty/everest/library/legacy/Hacl_Curve25519.c	/^Hacl_Bignum_Fmul_mul_shift_reduce_($/;"	f	typeref:typename:void	file:
Hacl_Bignum_Fmul_shift_reduce	3rdparty/everest/library/Hacl_Curve25519.c	/^inline static void Hacl_Bignum_Fmul_shift_reduce(uint64_t *output)$/;"	f	typeref:typename:void	file:
Hacl_Bignum_Fmul_shift_reduce	3rdparty/everest/library/legacy/Hacl_Curve25519.c	/^inline static void Hacl_Bignum_Fmul_shift_reduce(uint64_t *output)$/;"	f	typeref:typename:void	file:
Hacl_Bignum_Fproduct_carry_wide_	3rdparty/everest/library/Hacl_Curve25519.c	/^inline static void Hacl_Bignum_Fproduct_carry_wide_(uint128_t *tmp)$/;"	f	typeref:typename:void	file:
Hacl_Bignum_Fproduct_carry_wide_	3rdparty/everest/library/legacy/Hacl_Curve25519.c	/^inline static void Hacl_Bignum_Fproduct_carry_wide_(FStar_UInt128_uint128 *tmp)$/;"	f	typeref:typename:void	file:
Hacl_Bignum_Fproduct_copy_from_wide_	3rdparty/everest/library/Hacl_Curve25519.c	/^inline static void Hacl_Bignum_Fproduct_copy_from_wide_(uint64_t *output, uint128_t *input)$/;"	f	typeref:typename:void	file:
Hacl_Bignum_Fproduct_copy_from_wide_	3rdparty/everest/library/legacy/Hacl_Curve25519.c	/^Hacl_Bignum_Fproduct_copy_from_wide_(uint64_t *output, FStar_UInt128_uint128 *input)$/;"	f	typeref:typename:void	file:
Hacl_Bignum_Fproduct_sum_scalar_multiplication_	3rdparty/everest/library/Hacl_Curve25519.c	/^Hacl_Bignum_Fproduct_sum_scalar_multiplication_(uint128_t *output, uint64_t *input, uint64_t s)$/;"	f	typeref:typename:void	file:
Hacl_Bignum_Fproduct_sum_scalar_multiplication_	3rdparty/everest/library/legacy/Hacl_Curve25519.c	/^Hacl_Bignum_Fproduct_sum_scalar_multiplication_($/;"	f	typeref:typename:void	file:
Hacl_Bignum_Fsquare_fsquare_	3rdparty/everest/library/Hacl_Curve25519.c	/^inline static void Hacl_Bignum_Fsquare_fsquare_(uint128_t *tmp, uint64_t *output)$/;"	f	typeref:typename:void	file:
Hacl_Bignum_Fsquare_fsquare_	3rdparty/everest/library/legacy/Hacl_Curve25519.c	/^inline static void Hacl_Bignum_Fsquare_fsquare_(FStar_UInt128_uint128 *tmp, uint64_t *output)$/;"	f	typeref:typename:void	file:
Hacl_Bignum_Fsquare_fsquare__	3rdparty/everest/library/Hacl_Curve25519.c	/^inline static void Hacl_Bignum_Fsquare_fsquare__(uint128_t *tmp, uint64_t *output)$/;"	f	typeref:typename:void	file:
Hacl_Bignum_Fsquare_fsquare__	3rdparty/everest/library/legacy/Hacl_Curve25519.c	/^inline static void Hacl_Bignum_Fsquare_fsquare__(FStar_UInt128_uint128 *tmp, uint64_t *output)$/;"	f	typeref:typename:void	file:
Hacl_Bignum_Fsquare_fsquare_times	3rdparty/everest/library/Hacl_Curve25519.c	/^Hacl_Bignum_Fsquare_fsquare_times(uint64_t *output, uint64_t *input, uint32_t count1)$/;"	f	typeref:typename:void	file:
Hacl_Bignum_Fsquare_fsquare_times	3rdparty/everest/library/legacy/Hacl_Curve25519.c	/^Hacl_Bignum_Fsquare_fsquare_times(uint64_t *output, uint64_t *input, uint32_t count1)$/;"	f	typeref:typename:void	file:
Hacl_Bignum_Fsquare_fsquare_times_	3rdparty/everest/library/Hacl_Curve25519.c	/^Hacl_Bignum_Fsquare_fsquare_times_(uint64_t *input, uint128_t *tmp, uint32_t count1)$/;"	f	typeref:typename:void	file:
Hacl_Bignum_Fsquare_fsquare_times_	3rdparty/everest/library/legacy/Hacl_Curve25519.c	/^Hacl_Bignum_Fsquare_fsquare_times_($/;"	f	typeref:typename:void	file:
Hacl_Bignum_Fsquare_fsquare_times_inplace	3rdparty/everest/library/Hacl_Curve25519.c	/^inline static void Hacl_Bignum_Fsquare_fsquare_times_inplace(uint64_t *output, uint32_t count1)$/;"	f	typeref:typename:void	file:
Hacl_Bignum_Fsquare_fsquare_times_inplace	3rdparty/everest/library/legacy/Hacl_Curve25519.c	/^inline static void Hacl_Bignum_Fsquare_fsquare_times_inplace(uint64_t *output, uint32_t count1)$/;"	f	typeref:typename:void	file:
Hacl_Bignum_Modulo_carry_top	3rdparty/everest/library/Hacl_Curve25519.c	/^static void Hacl_Bignum_Modulo_carry_top(uint64_t *b)$/;"	f	typeref:typename:void	file:
Hacl_Bignum_Modulo_carry_top	3rdparty/everest/library/legacy/Hacl_Curve25519.c	/^static void Hacl_Bignum_Modulo_carry_top(uint64_t *b)$/;"	f	typeref:typename:void	file:
Hacl_Bignum_crecip	3rdparty/everest/library/Hacl_Curve25519.c	/^inline static void Hacl_Bignum_crecip(uint64_t *output, uint64_t *input)$/;"	f	typeref:typename:void	file:
Hacl_Bignum_crecip	3rdparty/everest/library/legacy/Hacl_Curve25519.c	/^inline static void Hacl_Bignum_crecip(uint64_t *output, uint64_t *input)$/;"	f	typeref:typename:void	file:
Hacl_Bignum_fdifference	3rdparty/everest/library/Hacl_Curve25519.c	/^inline static void Hacl_Bignum_fdifference(uint64_t *a, uint64_t *b)$/;"	f	typeref:typename:void	file:
Hacl_Bignum_fdifference	3rdparty/everest/library/legacy/Hacl_Curve25519.c	/^inline static void Hacl_Bignum_fdifference(uint64_t *a, uint64_t *b)$/;"	f	typeref:typename:void	file:
Hacl_Bignum_fmul	3rdparty/everest/library/Hacl_Curve25519.c	/^inline static void Hacl_Bignum_fmul(uint64_t *output, uint64_t *a, uint64_t *b)$/;"	f	typeref:typename:void	file:
Hacl_Bignum_fmul	3rdparty/everest/library/legacy/Hacl_Curve25519.c	/^inline static void Hacl_Bignum_fmul(uint64_t *output, uint64_t *a, uint64_t *b)$/;"	f	typeref:typename:void	file:
Hacl_Bignum_fscalar	3rdparty/everest/library/Hacl_Curve25519.c	/^inline static void Hacl_Bignum_fscalar(uint64_t *output, uint64_t *b, uint64_t s)$/;"	f	typeref:typename:void	file:
Hacl_Bignum_fscalar	3rdparty/everest/library/legacy/Hacl_Curve25519.c	/^inline static void Hacl_Bignum_fscalar(uint64_t *output, uint64_t *b, uint64_t s)$/;"	f	typeref:typename:void	file:
Hacl_Bignum_fsum	3rdparty/everest/library/Hacl_Curve25519.c	/^inline static void Hacl_Bignum_fsum(uint64_t *a, uint64_t *b)$/;"	f	typeref:typename:void	file:
Hacl_Bignum_fsum	3rdparty/everest/library/legacy/Hacl_Curve25519.c	/^inline static void Hacl_Bignum_fsum(uint64_t *a, uint64_t *b)$/;"	f	typeref:typename:void	file:
Hacl_Curve25519_crypto_scalarmult	3rdparty/everest/library/Hacl_Curve25519.c	/^void Hacl_Curve25519_crypto_scalarmult(uint8_t *mypublic, uint8_t *secret, uint8_t *basepoint)$/;"	f	typeref:typename:void
Hacl_Curve25519_crypto_scalarmult	3rdparty/everest/library/legacy/Hacl_Curve25519.c	/^void Hacl_Curve25519_crypto_scalarmult(uint8_t *mypublic, uint8_t *secret, uint8_t *basepoint)$/;"	f	typeref:typename:void
Hacl_EC_AddAndDouble_fmonty	3rdparty/everest/library/Hacl_Curve25519.c	/^Hacl_EC_AddAndDouble_fmonty($/;"	f	typeref:typename:void	file:
Hacl_EC_AddAndDouble_fmonty	3rdparty/everest/library/legacy/Hacl_Curve25519.c	/^Hacl_EC_AddAndDouble_fmonty($/;"	f	typeref:typename:void	file:
Hacl_EC_Format_fcontract	3rdparty/everest/library/Hacl_Curve25519.c	/^static void Hacl_EC_Format_fcontract(uint8_t *output, uint64_t *input)$/;"	f	typeref:typename:void	file:
Hacl_EC_Format_fcontract	3rdparty/everest/library/legacy/Hacl_Curve25519.c	/^static void Hacl_EC_Format_fcontract(uint8_t *output, uint64_t *input)$/;"	f	typeref:typename:void	file:
Hacl_EC_Format_fcontract_first_carry_full	3rdparty/everest/library/Hacl_Curve25519.c	/^static void Hacl_EC_Format_fcontract_first_carry_full(uint64_t *input)$/;"	f	typeref:typename:void	file:
Hacl_EC_Format_fcontract_first_carry_full	3rdparty/everest/library/legacy/Hacl_Curve25519.c	/^static void Hacl_EC_Format_fcontract_first_carry_full(uint64_t *input)$/;"	f	typeref:typename:void	file:
Hacl_EC_Format_fcontract_first_carry_pass	3rdparty/everest/library/Hacl_Curve25519.c	/^static void Hacl_EC_Format_fcontract_first_carry_pass(uint64_t *input)$/;"	f	typeref:typename:void	file:
Hacl_EC_Format_fcontract_first_carry_pass	3rdparty/everest/library/legacy/Hacl_Curve25519.c	/^static void Hacl_EC_Format_fcontract_first_carry_pass(uint64_t *input)$/;"	f	typeref:typename:void	file:
Hacl_EC_Format_fcontract_second_carry_full	3rdparty/everest/library/Hacl_Curve25519.c	/^static void Hacl_EC_Format_fcontract_second_carry_full(uint64_t *input)$/;"	f	typeref:typename:void	file:
Hacl_EC_Format_fcontract_second_carry_full	3rdparty/everest/library/legacy/Hacl_Curve25519.c	/^static void Hacl_EC_Format_fcontract_second_carry_full(uint64_t *input)$/;"	f	typeref:typename:void	file:
Hacl_EC_Format_fcontract_second_carry_pass	3rdparty/everest/library/Hacl_Curve25519.c	/^static void Hacl_EC_Format_fcontract_second_carry_pass(uint64_t *input)$/;"	f	typeref:typename:void	file:
Hacl_EC_Format_fcontract_second_carry_pass	3rdparty/everest/library/legacy/Hacl_Curve25519.c	/^static void Hacl_EC_Format_fcontract_second_carry_pass(uint64_t *input)$/;"	f	typeref:typename:void	file:
Hacl_EC_Format_fcontract_store	3rdparty/everest/library/Hacl_Curve25519.c	/^static void Hacl_EC_Format_fcontract_store(uint8_t *output, uint64_t *input)$/;"	f	typeref:typename:void	file:
Hacl_EC_Format_fcontract_store	3rdparty/everest/library/legacy/Hacl_Curve25519.c	/^static void Hacl_EC_Format_fcontract_store(uint8_t *output, uint64_t *input)$/;"	f	typeref:typename:void	file:
Hacl_EC_Format_fcontract_trim	3rdparty/everest/library/Hacl_Curve25519.c	/^static void Hacl_EC_Format_fcontract_trim(uint64_t *input)$/;"	f	typeref:typename:void	file:
Hacl_EC_Format_fcontract_trim	3rdparty/everest/library/legacy/Hacl_Curve25519.c	/^static void Hacl_EC_Format_fcontract_trim(uint64_t *input)$/;"	f	typeref:typename:void	file:
Hacl_EC_Format_fexpand	3rdparty/everest/library/Hacl_Curve25519.c	/^static void Hacl_EC_Format_fexpand(uint64_t *output, uint8_t *input)$/;"	f	typeref:typename:void	file:
Hacl_EC_Format_fexpand	3rdparty/everest/library/legacy/Hacl_Curve25519.c	/^static void Hacl_EC_Format_fexpand(uint64_t *output, uint8_t *input)$/;"	f	typeref:typename:void	file:
Hacl_EC_Format_scalar_of_point	3rdparty/everest/library/Hacl_Curve25519.c	/^static void Hacl_EC_Format_scalar_of_point(uint8_t *scalar, uint64_t *point)$/;"	f	typeref:typename:void	file:
Hacl_EC_Format_scalar_of_point	3rdparty/everest/library/legacy/Hacl_Curve25519.c	/^static void Hacl_EC_Format_scalar_of_point(uint8_t *scalar, uint64_t *point)$/;"	f	typeref:typename:void	file:
Hacl_EC_Ladder_BigLoop_cmult_big_loop	3rdparty/everest/library/Hacl_Curve25519.c	/^Hacl_EC_Ladder_BigLoop_cmult_big_loop($/;"	f	typeref:typename:void	file:
Hacl_EC_Ladder_BigLoop_cmult_big_loop	3rdparty/everest/library/legacy/Hacl_Curve25519.c	/^Hacl_EC_Ladder_BigLoop_cmult_big_loop($/;"	f	typeref:typename:void	file:
Hacl_EC_Ladder_SmallLoop_cmult_small_loop	3rdparty/everest/library/Hacl_Curve25519.c	/^Hacl_EC_Ladder_SmallLoop_cmult_small_loop($/;"	f	typeref:typename:void	file:
Hacl_EC_Ladder_SmallLoop_cmult_small_loop	3rdparty/everest/library/legacy/Hacl_Curve25519.c	/^Hacl_EC_Ladder_SmallLoop_cmult_small_loop($/;"	f	typeref:typename:void	file:
Hacl_EC_Ladder_SmallLoop_cmult_small_loop_double_step	3rdparty/everest/library/Hacl_Curve25519.c	/^Hacl_EC_Ladder_SmallLoop_cmult_small_loop_double_step($/;"	f	typeref:typename:void	file:
Hacl_EC_Ladder_SmallLoop_cmult_small_loop_double_step	3rdparty/everest/library/legacy/Hacl_Curve25519.c	/^Hacl_EC_Ladder_SmallLoop_cmult_small_loop_double_step($/;"	f	typeref:typename:void	file:
Hacl_EC_Ladder_SmallLoop_cmult_small_loop_step	3rdparty/everest/library/Hacl_Curve25519.c	/^Hacl_EC_Ladder_SmallLoop_cmult_small_loop_step($/;"	f	typeref:typename:void	file:
Hacl_EC_Ladder_SmallLoop_cmult_small_loop_step	3rdparty/everest/library/legacy/Hacl_Curve25519.c	/^Hacl_EC_Ladder_SmallLoop_cmult_small_loop_step($/;"	f	typeref:typename:void	file:
Hacl_EC_Ladder_cmult	3rdparty/everest/library/Hacl_Curve25519.c	/^static void Hacl_EC_Ladder_cmult(uint64_t *result, uint8_t *n1, uint64_t *q)$/;"	f	typeref:typename:void	file:
Hacl_EC_Ladder_cmult	3rdparty/everest/library/legacy/Hacl_Curve25519.c	/^static void Hacl_EC_Ladder_cmult(uint64_t *result, uint8_t *n1, uint64_t *q)$/;"	f	typeref:typename:void	file:
Hacl_EC_Point_copy	3rdparty/everest/library/Hacl_Curve25519.c	/^static void Hacl_EC_Point_copy(uint64_t *output, uint64_t *input)$/;"	f	typeref:typename:void	file:
Hacl_EC_Point_copy	3rdparty/everest/library/legacy/Hacl_Curve25519.c	/^static void Hacl_EC_Point_copy(uint64_t *output, uint64_t *input)$/;"	f	typeref:typename:void	file:
Hacl_EC_Point_swap_conditional	3rdparty/everest/library/Hacl_Curve25519.c	/^static void Hacl_EC_Point_swap_conditional(uint64_t *a, uint64_t *b, uint64_t iswap)$/;"	f	typeref:typename:void	file:
Hacl_EC_Point_swap_conditional	3rdparty/everest/library/legacy/Hacl_Curve25519.c	/^static void Hacl_EC_Point_swap_conditional(uint64_t *a, uint64_t *b, uint64_t iswap)$/;"	f	typeref:typename:void	file:
Hacl_EC_Point_swap_conditional_	3rdparty/everest/library/Hacl_Curve25519.c	/^Hacl_EC_Point_swap_conditional_(uint64_t *a, uint64_t *b, uint64_t swap1, uint32_t ctr)$/;"	f	typeref:typename:void	file:
Hacl_EC_Point_swap_conditional_	3rdparty/everest/library/legacy/Hacl_Curve25519.c	/^Hacl_EC_Point_swap_conditional_(uint64_t *a, uint64_t *b, uint64_t swap1, uint32_t ctr)$/;"	f	typeref:typename:void	file:
Hacl_EC_Point_swap_conditional_step	3rdparty/everest/library/Hacl_Curve25519.c	/^Hacl_EC_Point_swap_conditional_step(uint64_t *a, uint64_t *b, uint64_t swap1, uint32_t ctr)$/;"	f	typeref:typename:void	file:
Hacl_EC_Point_swap_conditional_step	3rdparty/everest/library/legacy/Hacl_Curve25519.c	/^Hacl_EC_Point_swap_conditional_step(uint64_t *a, uint64_t *b, uint64_t swap1, uint32_t ctr)$/;"	f	typeref:typename:void	file:
LLVMFuzzerTestOneInput	programs/fuzz/fuzz_client.c	/^int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size)$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	programs/fuzz/fuzz_dtlsclient.c	/^int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size)$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	programs/fuzz/fuzz_dtlsserver.c	/^int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size)$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	programs/fuzz/fuzz_pkcs7.c	/^int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size)$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	programs/fuzz/fuzz_privkey.c	/^int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size)$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	programs/fuzz/fuzz_pubkey.c	/^int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size)$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	programs/fuzz/fuzz_server.c	/^int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size)$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	programs/fuzz/fuzz_x509crl.c	/^int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size)$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	programs/fuzz/fuzz_x509crt.c	/^int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size)$/;"	f	typeref:typename:int
LLVMFuzzerTestOneInput	programs/fuzz/fuzz_x509csr.c	/^int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size)$/;"	f	typeref:typename:int
TimerProc	programs/test/benchmark.c	/^static void TimerProc(void *TimerContext)$/;"	f	typeref:typename:void	file:
_tmain	programs/wince_main.c	/^int _tmain(int argc, _TCHAR *targv[])$/;"	f	typeref:typename:int
_yield_objects	scripts/generate_ssl_debug_helpers.py	/^    def _yield_objects(s, d, p, st, end):$/;"	f	function:preprocess_c_source_code	file:
add32	library/ecp_curves.c	/^static inline void add32(uint32_t *dst, uint32_t src, signed char *carry)$/;"	f	typeref:typename:void	file:
add64	library/ecp_curves.c	/^static inline void add64(mbedtls_mpi_uint *dst, mbedtls_mpi_uint *src, mbedtls_mpi_uint *carry)$/;"	f	typeref:typename:void	file:
add64	library/ecp_curves_new.c	/^static inline void add64(mbedtls_mpi_uint *dst, mbedtls_mpi_uint *src, mbedtls_mpi_uint *carry)$/;"	f	typeref:typename:void	file:
add_adapter	scripts/config.py	/^        def add_adapter(name, function, description):$/;"	f	function:main	file:
add_one_and_zeros_padding	library/cipher.c	/^static void add_one_and_zeros_padding(unsigned char *output,$/;"	f	typeref:typename:void	file:
add_pkcs_padding	library/cipher.c	/^static void add_pkcs_padding(unsigned char *output, size_t output_len,$/;"	f	typeref:typename:void	file:
add_sub_mpi	library/bignum.c	/^static int add_sub_mpi(mbedtls_mpi *X,$/;"	f	typeref:typename:int	file:
add_zeros_and_len_padding	library/cipher.c	/^static void add_zeros_and_len_padding(unsigned char *output,$/;"	f	typeref:typename:void	file:
add_zeros_padding	library/cipher.c	/^static void add_zeros_padding(unsigned char *output,$/;"	f	typeref:typename:void	file:
aead_demo	programs/cipher/cipher_aead_demo.c	/^static int aead_demo(const char *info)$/;"	f	typeref:typename:int	file:
aead_demo	programs/psa/aead_demo.c	/^static psa_status_t aead_demo(const char *info)$/;"	f	typeref:typename:psa_status_t	file:
aead_encrypt	programs/cipher/cipher_aead_demo.c	/^static int aead_encrypt(mbedtls_cipher_context_t *ctx, size_t tag_len,$/;"	f	typeref:typename:int	file:
aead_encrypt	programs/psa/aead_demo.c	/^static int aead_encrypt(psa_key_id_t key, psa_algorithm_t alg,$/;"	f	typeref:typename:int	file:
aead_info	programs/cipher/cipher_aead_demo.c	/^static void aead_info(const mbedtls_cipher_context_t *ctx, size_t tag_len)$/;"	f	typeref:typename:void	file:
aead_info	programs/psa/aead_demo.c	/^static void aead_info(psa_key_id_t key, psa_algorithm_t alg)$/;"	f	typeref:typename:void	file:
aead_prepare	programs/cipher/cipher_aead_demo.c	/^static int aead_prepare(const char *info,$/;"	f	typeref:typename:int	file:
aead_prepare	programs/psa/aead_demo.c	/^static psa_status_t aead_prepare(const char *info,$/;"	f	typeref:typename:psa_status_t	file:
aes_crypt_cbc_wrap	library/cipher_wrap.c	/^static int aes_crypt_cbc_wrap(void *ctx, mbedtls_operation_t operation, size_t length,$/;"	f	typeref:typename:int	file:
aes_crypt_cfb128_wrap	library/cipher_wrap.c	/^static int aes_crypt_cfb128_wrap(void *ctx, mbedtls_operation_t operation,$/;"	f	typeref:typename:int	file:
aes_crypt_ctr_wrap	library/cipher_wrap.c	/^static int aes_crypt_ctr_wrap(void *ctx, size_t length, size_t *nc_off,$/;"	f	typeref:typename:int	file:
aes_crypt_ecb_wrap	library/cipher_wrap.c	/^static int aes_crypt_ecb_wrap(void *ctx, mbedtls_operation_t operation,$/;"	f	typeref:typename:int	file:
aes_crypt_ofb_wrap	library/cipher_wrap.c	/^static int aes_crypt_ofb_wrap(void *ctx, size_t length, size_t *iv_off,$/;"	f	typeref:typename:int	file:
aes_crypt_xts_wrap	library/cipher_wrap.c	/^static int aes_crypt_xts_wrap(void *ctx, mbedtls_operation_t operation,$/;"	f	typeref:typename:int	file:
aes_ctx_alloc	library/cipher_wrap.c	/^static void *aes_ctx_alloc(void)$/;"	f	typeref:typename:void *	file:
aes_ctx_free	library/cipher_wrap.c	/^static void aes_ctx_free(void *ctx)$/;"	f	typeref:typename:void	file:
aes_gen_tables	library/aes.c	/^MBEDTLS_MAYBE_UNUSED static void aes_gen_tables(void)$/;"	f	typeref:typename:MBEDTLS_MAYBE_UNUSED void	file:
aes_maybe_realign	library/aes.c	/^MBEDTLS_MAYBE_UNUSED static void aes_maybe_realign(mbedtls_aes_context *ctx)$/;"	f	typeref:typename:MBEDTLS_MAYBE_UNUSED void	file:
aes_rot_word	library/aesce.c	/^static inline uint32_t aes_rot_word(uint32_t word)$/;"	f	typeref:typename:uint32_t	file:
aes_setkey_dec_wrap	library/cipher_wrap.c	/^static int aes_setkey_dec_wrap(void *ctx, const unsigned char *key,$/;"	f	typeref:typename:int	file:
aes_setkey_enc_wrap	library/cipher_wrap.c	/^static int aes_setkey_enc_wrap(void *ctx, const unsigned char *key,$/;"	f	typeref:typename:int	file:
aes_sub_word	library/aesce.c	/^static inline uint32_t aes_sub_word(uint32_t in)$/;"	f	typeref:typename:uint32_t	file:
aesce_decrypt_block	library/aesce.c	/^static uint8x16_t aesce_decrypt_block(uint8x16_t block,$/;"	f	typeref:typename:uint8x16_t	file:
aesce_encrypt_block	library/aesce.c	/^static uint8x16_t aesce_encrypt_block(uint8x16_t block,$/;"	f	typeref:typename:MBEDTLS_OPTIMIZE_FOR_PERFORMANCE uint8x16_t	file:
aesce_setkey_enc	library/aesce.c	/^static void aesce_setkey_enc(unsigned char *rk,$/;"	f	typeref:typename:void	file:
aesni_set_rk_128	library/aesni.c	/^static __m128i aesni_set_rk_128(__m128i state, __m128i xword)$/;"	f	typeref:typename:__m128i	file:
aesni_set_rk_192	library/aesni.c	/^static void aesni_set_rk_192(__m128i *state0, __m128i *state1, __m128i xword,$/;"	f	typeref:typename:void	file:
aesni_set_rk_256	library/aesni.c	/^static void aesni_set_rk_256(__m128i state0, __m128i state1, __m128i xword,$/;"	f	typeref:typename:void	file:
aesni_setkey_enc_128	library/aesni.c	/^static void aesni_setkey_enc_128(unsigned char *rk,$/;"	f	typeref:typename:void	file:
aesni_setkey_enc_128	library/aesni.c	/^static void aesni_setkey_enc_128(unsigned char *rk_bytes,$/;"	f	typeref:typename:void	file:
aesni_setkey_enc_192	library/aesni.c	/^static void aesni_setkey_enc_192(unsigned char *rk,$/;"	f	typeref:typename:void	file:
aesni_setkey_enc_256	library/aesni.c	/^static void aesni_setkey_enc_256(unsigned char *rk,$/;"	f	typeref:typename:void	file:
aesni_setkey_enc_256	library/aesni.c	/^static void aesni_setkey_enc_256(unsigned char *rk_bytes,$/;"	f	typeref:typename:void	file:
analyze_coverage	tests/scripts/analyze_outcomes.py	/^def analyze_coverage(results: Results, outcomes: Outcomes,$/;"	f	typeref:typename:None
analyze_driver_vs_reference	tests/scripts/analyze_outcomes.py	/^def analyze_driver_vs_reference(results: Results, outcomes: Outcomes,$/;"	f	typeref:typename:None
analyze_outcomes	tests/scripts/analyze_outcomes.py	/^def analyze_outcomes(results: Results, outcomes: Outcomes, args) -> None:$/;"	f	typeref:typename:None
append	programs/psa/psa_constant_names.c	/^static void append(char **buffer, size_t buffer_size,$/;"	f	typeref:typename:void	file:
append_integer	programs/psa/psa_constant_names.c	/^static void append_integer(char **buffer, size_t buffer_size,$/;"	f	typeref:typename:void	file:
append_with_alg	programs/psa/psa_constant_names.c	/^static void append_with_alg(char **buffer, size_t buffer_size,$/;"	f	typeref:typename:void	file:
append_with_curve	programs/psa/psa_constant_names.c	/^static void append_with_curve(char **buffer, size_t buffer_size,$/;"	f	typeref:typename:void	file:
append_with_group	programs/psa/psa_constant_names.c	/^static void append_with_group(char **buffer, size_t buffer_size,$/;"	f	typeref:typename:void	file:
aria_a	library/aria.c	/^static inline void aria_a(uint32_t *a, uint32_t *b,$/;"	f	typeref:typename:void	file:
aria_crypt_cbc_wrap	library/cipher_wrap.c	/^static int aria_crypt_cbc_wrap(void *ctx, mbedtls_operation_t operation,$/;"	f	typeref:typename:int	file:
aria_crypt_cfb128_wrap	library/cipher_wrap.c	/^static int aria_crypt_cfb128_wrap(void *ctx, mbedtls_operation_t operation,$/;"	f	typeref:typename:int	file:
aria_crypt_ctr_wrap	library/cipher_wrap.c	/^static int aria_crypt_ctr_wrap(void *ctx, size_t length, size_t *nc_off,$/;"	f	typeref:typename:int	file:
aria_crypt_ecb_wrap	library/cipher_wrap.c	/^static int aria_crypt_ecb_wrap(void *ctx, mbedtls_operation_t operation,$/;"	f	typeref:typename:int	file:
aria_ctx_alloc	library/cipher_wrap.c	/^static void *aria_ctx_alloc(void)$/;"	f	typeref:typename:void *	file:
aria_ctx_free	library/cipher_wrap.c	/^static void aria_ctx_free(void *ctx)$/;"	f	typeref:typename:void	file:
aria_fe_xor	library/aria.c	/^static void aria_fe_xor(uint32_t r[4], const uint32_t p[4],$/;"	f	typeref:typename:void	file:
aria_fo_xor	library/aria.c	/^static void aria_fo_xor(uint32_t r[4], const uint32_t p[4],$/;"	f	typeref:typename:void	file:
aria_p1	library/aria.c	/^static inline uint32_t aria_p1(uint32_t x)$/;"	f	typeref:typename:uint32_t	file:
aria_rot128	library/aria.c	/^static void aria_rot128(uint32_t r[4], const uint32_t a[4],$/;"	f	typeref:typename:void	file:
aria_setkey_dec_wrap	library/cipher_wrap.c	/^static int aria_setkey_dec_wrap(void *ctx, const unsigned char *key,$/;"	f	typeref:typename:int	file:
aria_setkey_enc_wrap	library/cipher_wrap.c	/^static int aria_setkey_enc_wrap(void *ctx, const unsigned char *key,$/;"	f	typeref:typename:int	file:
aria_sl	library/aria.c	/^static inline void aria_sl(uint32_t *a, uint32_t *b,$/;"	f	typeref:typename:void	file:
as_expr	scripts/mbedtls_dev/psa_storage.py	/^def as_expr(thing: Exprable) -> Expr:$/;"	f	typeref:typename:Expr
asn1_find_named_data	library/asn1write.c	/^static mbedtls_asn1_named_data *asn1_find_named_data($/;"	f	typeref:typename:mbedtls_asn1_named_data *	file:
asn1_get_nonzero_mpi	library/pkparse.c	/^static int asn1_get_nonzero_mpi(unsigned char **p,$/;"	f	typeref:typename:int	file:
asn1_get_sequence_of_cb	library/asn1parse.c	/^static int asn1_get_sequence_of_cb(void *ctx,$/;"	f	typeref:typename:int	file:
asn1_get_tagged_int	library/asn1parse.c	/^static int asn1_get_tagged_int(unsigned char **p,$/;"	f	typeref:typename:int	file:
asn1_write_mpibuf	library/pk_wrap.c	/^static int asn1_write_mpibuf(unsigned char **p, unsigned char *start,$/;"	f	typeref:typename:int	file:
asn1_write_tagged_int	library/asn1write.c	/^static int asn1_write_tagged_int(unsigned char **p, const unsigned char *start, int val, int tag/;"	f	typeref:typename:int	file:
automatic_dependencies	scripts/mbedtls_dev/psa_information.py	/^def automatic_dependencies(*expressions: str) -> List[str]:$/;"	f	typeref:typename:List[str]
bits_to_limbs	scripts/mbedtls_dev/bignum_common.py	/^def bits_to_limbs(bits: int, bits_in_limb: int) -> int:$/;"	f	typeref:typename:int
block_cipher_df	library/ctr_drbg.c	/^static int block_cipher_df(unsigned char *output,$/;"	f	typeref:typename:int	file:
bold_text	scripts/code_size_compare.py	/^            bold_text = lambda x: '**' + str(x) + '**'$/;"	f	member:CodeSizeGeneratorWithSize.write_comparison	file:
bound_mpi	scripts/mbedtls_dev/bignum_common.py	/^def bound_mpi(val: int, bits_in_limb: int) -> int:$/;"	f	typeref:typename:int
bound_mpi_limbs	scripts/mbedtls_dev/bignum_common.py	/^def bound_mpi_limbs(limbs: int, bits_in_limb: int) -> int:$/;"	f	typeref:typename:int
buffer_alloc_calloc	library/memory_buffer_alloc.c	/^static void *buffer_alloc_calloc(size_t n, size_t size)$/;"	f	typeref:typename:void *	file:
buffer_alloc_calloc_mutexed	library/memory_buffer_alloc.c	/^static void *buffer_alloc_calloc_mutexed(size_t n, size_t size)$/;"	f	typeref:typename:void *	file:
buffer_alloc_free	library/memory_buffer_alloc.c	/^static void buffer_alloc_free(void *ptr)$/;"	f	typeref:typename:void	file:
buffer_alloc_free_mutexed	library/memory_buffer_alloc.c	/^static void buffer_alloc_free_mutexed(void *ptr)$/;"	f	typeref:typename:void	file:
ca_callback	programs/ssl/ssl_test_lib.c	/^int ca_callback(void *data, mbedtls_x509_crt const *child,$/;"	f	typeref:typename:int
cal_sect_change	scripts/code_size_compare.py	/^        def cal_sect_change($/;"	f	member:CodeSizeGeneratorWithSize.write_comparison	typeref:typename:typing.List	file:
calc_a_xor_t	library/nist_kw.c	/^static void calc_a_xor_t(unsigned char A[KW_SEMIBLOCK_LENGTH], uint64_t t)$/;"	f	typeref:typename:void	file:
calculate_hashes	library/pkcs12.c	/^static int calculate_hashes(mbedtls_md_type_t md_type, int iterations,$/;"	f	typeref:typename:int	file:
calculate_merkle_tree	library/lms.c	/^static int calculate_merkle_tree(const mbedtls_lms_private_t *ctx,$/;"	f	typeref:typename:int	file:
calloc_self_test	programs/test/selftest.c	/^static int calloc_self_test(int verbose)$/;"	f	typeref:typename:int	file:
camellia_crypt_cbc_wrap	library/cipher_wrap.c	/^static int camellia_crypt_cbc_wrap(void *ctx, mbedtls_operation_t operation,$/;"	f	typeref:typename:int	file:
camellia_crypt_cfb128_wrap	library/cipher_wrap.c	/^static int camellia_crypt_cfb128_wrap(void *ctx, mbedtls_operation_t operation,$/;"	f	typeref:typename:int	file:
camellia_crypt_ctr_wrap	library/cipher_wrap.c	/^static int camellia_crypt_ctr_wrap(void *ctx, size_t length, size_t *nc_off,$/;"	f	typeref:typename:int	file:
camellia_crypt_ecb_wrap	library/cipher_wrap.c	/^static int camellia_crypt_ecb_wrap(void *ctx, mbedtls_operation_t operation,$/;"	f	typeref:typename:int	file:
camellia_ctx_alloc	library/cipher_wrap.c	/^static void *camellia_ctx_alloc(void)$/;"	f	typeref:typename:void *	file:
camellia_ctx_free	library/cipher_wrap.c	/^static void camellia_ctx_free(void *ctx)$/;"	f	typeref:typename:void	file:
camellia_feistel	library/camellia.c	/^static void camellia_feistel(const uint32_t x[2], const uint32_t k[2],$/;"	f	typeref:typename:void	file:
camellia_setkey_dec_wrap	library/cipher_wrap.c	/^static int camellia_setkey_dec_wrap(void *ctx, const unsigned char *key,$/;"	f	typeref:typename:int	file:
camellia_setkey_enc_wrap	library/cipher_wrap.c	/^static int camellia_setkey_enc_wrap(void *ctx, const unsigned char *key,$/;"	f	typeref:typename:int	file:
can_sign_or_verify_message	tests/src/psa_exercise_key.c	/^static int can_sign_or_verify_message(psa_key_usage_t usage,$/;"	f	typeref:typename:int	file:
carry64	library/ecp_curves.c	/^static inline void carry64(mbedtls_mpi_uint *dst, mbedtls_mpi_uint *carry)$/;"	f	typeref:typename:void	file:
carry64	library/ecp_curves_new.c	/^static inline void carry64(mbedtls_mpi_uint *dst, mbedtls_mpi_uint *carry)$/;"	f	typeref:typename:void	file:
ccm_aes_setkey_wrap	library/cipher_wrap.c	/^static int ccm_aes_setkey_wrap(void *ctx, const unsigned char *key,$/;"	f	typeref:typename:int	file:
ccm_aria_setkey_wrap	library/cipher_wrap.c	/^static int ccm_aria_setkey_wrap(void *ctx, const unsigned char *key,$/;"	f	typeref:typename:int	file:
ccm_auth_crypt	library/ccm.c	/^static int ccm_auth_crypt(mbedtls_ccm_context *ctx, int mode, size_t length,$/;"	f	typeref:typename:int	file:
ccm_auth_decrypt	library/ccm.c	/^static int ccm_auth_decrypt(mbedtls_ccm_context *ctx, int mode, size_t length,$/;"	f	typeref:typename:int	file:
ccm_calculate_first_block_if_ready	library/ccm.c	/^static int ccm_calculate_first_block_if_ready(mbedtls_ccm_context *ctx)$/;"	f	typeref:typename:int	file:
ccm_camellia_setkey_wrap	library/cipher_wrap.c	/^static int ccm_camellia_setkey_wrap(void *ctx, const unsigned char *key,$/;"	f	typeref:typename:int	file:
ccm_ctx_alloc	library/cipher_wrap.c	/^static void *ccm_ctx_alloc(void)$/;"	f	typeref:typename:void *	file:
ccm_ctx_free	library/cipher_wrap.c	/^static void ccm_ctx_free(void *ctx)$/;"	f	typeref:typename:void	file:
cert_callback	programs/ssl/ssl_server2.c	/^int cert_callback(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
chacha20_block	library/chacha20.c	/^static void chacha20_block(const uint32_t initial_state[16],$/;"	f	typeref:typename:void	file:
chacha20_ctx_alloc	library/cipher_wrap.c	/^static void *chacha20_ctx_alloc(void)$/;"	f	typeref:typename:void *	file:
chacha20_ctx_free	library/cipher_wrap.c	/^static void chacha20_ctx_free(void *ctx)$/;"	f	typeref:typename:void	file:
chacha20_inner_block	library/chacha20.c	/^static void chacha20_inner_block(uint32_t state[16])$/;"	f	typeref:typename:void	file:
chacha20_quarter_round	library/chacha20.c	/^static inline void chacha20_quarter_round(uint32_t state[16],$/;"	f	typeref:typename:void	file:
chacha20_setkey_wrap	library/cipher_wrap.c	/^static int chacha20_setkey_wrap(void *ctx, const unsigned char *key,$/;"	f	typeref:typename:int	file:
chacha20_stream_wrap	library/cipher_wrap.c	/^static int chacha20_stream_wrap(void *ctx,  size_t length,$/;"	f	typeref:typename:int	file:
chachapoly_crypt_and_tag	library/chachapoly.c	/^static int chachapoly_crypt_and_tag(mbedtls_chachapoly_context *ctx,$/;"	f	typeref:typename:int	file:
chachapoly_ctx_alloc	library/cipher_wrap.c	/^static void *chachapoly_ctx_alloc(void)$/;"	f	typeref:typename:void *	file:
chachapoly_ctx_free	library/cipher_wrap.c	/^static void chachapoly_ctx_free(void *ctx)$/;"	f	typeref:typename:void	file:
chachapoly_pad_aad	library/chachapoly.c	/^static int chachapoly_pad_aad(mbedtls_chachapoly_context *ctx)$/;"	f	typeref:typename:int	file:
chachapoly_pad_ciphertext	library/chachapoly.c	/^static int chachapoly_pad_ciphertext(mbedtls_chachapoly_context *ctx)$/;"	f	typeref:typename:int	file:
chachapoly_setkey_wrap	library/cipher_wrap.c	/^static int chachapoly_setkey_wrap(void *ctx,$/;"	f	typeref:typename:int	file:
chdir_to_root	scripts/mbedtls_dev/build_tree.py	/^def chdir_to_root() -> None:$/;"	f	typeref:typename:None
check_all_free	library/memory_buffer_alloc.c	/^static int check_all_free(void)$/;"	f	typeref:typename:int	file:
check_fd	library/net_sockets.c	/^static int check_fd(int fd, int for_select)$/;"	f	typeref:typename:int	file:
check_key_attributes_sanity	tests/src/psa_exercise_key.c	/^static int check_key_attributes_sanity(mbedtls_svc_key_id_t key)$/;"	f	typeref:typename:int	file:
check_magic_header	library/psa_crypto_storage.c	/^static psa_status_t check_magic_header(const uint8_t *data)$/;"	f	typeref:typename:psa_status_t	file:
check_pointer	library/memory_buffer_alloc.c	/^static int check_pointer(void *p)$/;"	f	typeref:typename:int	file:
check_ssl_version	tests/src/test_helpers/ssl_helpers.c	/^static int check_ssl_version($/;"	f	typeref:typename:int	file:
check_style_is_correct	scripts/code_style.py	/^def check_style_is_correct(src_file_list: List[str]) -> bool:$/;"	f	typeref:typename:bool
cipher_decrypt	programs/psa/crypto_examples.c	/^static psa_status_t cipher_decrypt(psa_key_id_t key,$/;"	f	typeref:typename:psa_status_t	file:
cipher_encrypt	programs/psa/crypto_examples.c	/^static psa_status_t cipher_encrypt(psa_key_id_t key,$/;"	f	typeref:typename:psa_status_t	file:
cipher_example_encrypt_decrypt_aes_cbc_nopad_1_block	programs/psa/crypto_examples.c	/^cipher_example_encrypt_decrypt_aes_cbc_nopad_1_block(void)$/;"	f	typeref:typename:psa_status_t	file:
cipher_example_encrypt_decrypt_aes_cbc_pkcs7_multi	programs/psa/crypto_examples.c	/^static psa_status_t cipher_example_encrypt_decrypt_aes_cbc_pkcs7_multi(void)$/;"	f	typeref:typename:psa_status_t	file:
cipher_example_encrypt_decrypt_aes_ctr_multi	programs/psa/crypto_examples.c	/^static psa_status_t cipher_example_encrypt_decrypt_aes_ctr_multi(void)$/;"	f	typeref:typename:psa_status_t	file:
cipher_examples	programs/psa/crypto_examples.c	/^static void cipher_examples(void)$/;"	f	typeref:typename:void	file:
cipher_operation	programs/psa/crypto_examples.c	/^static psa_status_t cipher_operation(psa_cipher_operation_t *operation,$/;"	f	typeref:typename:psa_status_t	file:
ciphersuite_is_removed	library/ssl_ciphersuites.c	/^static int ciphersuite_is_removed(const mbedtls_ssl_ciphersuite_t *cs_info)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
clear_pending	programs/test/udp_proxy.c	/^void clear_pending(void)$/;"	f	typeref:typename:void
cmac_generate_subkeys	library/cmac.c	/^static int cmac_generate_subkeys(mbedtls_cipher_context_t *ctx,$/;"	f	typeref:typename:int	file:
cmac_multiply_by_u	library/cmac.c	/^static int cmac_multiply_by_u(unsigned char *output,$/;"	f	typeref:typename:int	file:
cmac_pad	library/cmac.c	/^static void cmac_pad(unsigned char padded_block[MBEDTLS_CMAC_MAX_BLOCK_SIZE],$/;"	f	typeref:typename:void	file:
cmac_setup	library/psa_crypto_mac.c	/^static psa_status_t cmac_setup(mbedtls_psa_mac_operation_t *operation,$/;"	f	typeref:typename:psa_status_t	file:
cmac_test_subkeys	library/cmac.c	/^static int cmac_test_subkeys(int verbose,$/;"	f	typeref:typename:int	file:
cmac_test_wth_cipher	library/cmac.c	/^static int cmac_test_wth_cipher(int verbose,$/;"	f	typeref:typename:int	file:
collect_values	tests/scripts/test_psa_constant_names.py	/^def collect_values(inputs: InputsForTest,$/;"	f	typeref:typename:Tuple[List[str],List[str]]
combination_pairs	scripts/mbedtls_dev/bignum_common.py	/^def combination_pairs(values: List[T]) -> List[Tuple[T, T]]:$/;"	f	typeref:typename:List[Tuple[T,T]]
compute_hash	library/rsa.c	/^static int compute_hash(mbedtls_md_type_t md_alg,$/;"	f	typeref:typename:int	file:
configure_logger	scripts/mbedtls_dev/logging_util.py	/^def configure_logger($/;"	f	typeref:typename:None
construct_asymmetric_key_data	scripts/mbedtls_dev/asymmetric_key_data.py	/^def construct_asymmetric_key_data(src) -> Dict[str, Dict[int, bytes]]:$/;"	f	typeref:typename:Dict[str,Dict[int,bytes]]
continuation	scripts/config.py	/^    def continuation(name, active, section):$/;"	f	function:crypto_adapter	file:
continuation	scripts/config.py	/^    def continuation(name, active, section):$/;"	f	function:no_deprecated_adapter	file:
continuation	scripts/config.py	/^    def continuation(name, active, section):$/;"	f	function:no_platform_adapter	file:
convert_jpake_computation_stage_to_driver_step	library/psa_crypto.c	/^static psa_crypto_driver_pake_step_t convert_jpake_computation_stage_to_driver_step($/;"	f	typeref:typename:psa_crypto_driver_pake_step_t	file:
convert_pem_to_der	programs/util/pem2der.c	/^int convert_pem_to_der(const unsigned char *input, size_t ilen,$/;"	f	typeref:typename:int
create_digit_array_with_checksum	library/lmots.c	/^static int create_digit_array_with_checksum(const mbedtls_lmots_parameters_t *params,$/;"	f	typeref:typename:int	file:
create_entropy_seed_file	programs/test/selftest.c	/^static void create_entropy_seed_file(void)$/;"	f	typeref:typename:void	file:
create_merkle_internal_value	library/lms.c	/^static int create_merkle_internal_value(const mbedtls_lms_parameters_t *params,$/;"	f	typeref:typename:int	file:
create_merkle_leaf_value	library/lms.c	/^static int create_merkle_leaf_value(const mbedtls_lms_parameters_t *params,$/;"	f	typeref:typename:int	file:
crypto_core_directory	scripts/mbedtls_dev/build_tree.py	/^def crypto_core_directory(root: Optional[str] = None, relative: Optional[bool] = False) -> str:$/;"	f	typeref:typename:str
crypto_library_filename	scripts/mbedtls_dev/build_tree.py	/^def crypto_library_filename(root: Optional[str] = None) -> str:$/;"	f	typeref:typename:str
ctr_drbg_destroy_psa_contex	library/ctr_drbg.c	/^static void ctr_drbg_destroy_psa_contex(mbedtls_ctr_drbg_psa_context *psa_ctx)$/;"	f	typeref:typename:void	file:
ctr_drbg_self_test_entropy	library/ctr_drbg.c	/^static int ctr_drbg_self_test_entropy(void *data, unsigned char *buf,$/;"	f	typeref:typename:int	file:
ctr_drbg_setup_psa_context	library/ctr_drbg.c	/^static psa_status_t ctr_drbg_setup_psa_context(mbedtls_ctr_drbg_psa_context *psa_ctx,$/;"	f	typeref:typename:psa_status_t	file:
ctr_drbg_update_internal	library/ctr_drbg.c	/^static int ctr_drbg_update_internal(mbedtls_ctr_drbg_context *ctx,$/;"	f	typeref:typename:int	file:
ctx_buffer_append	programs/test/udp_proxy.c	/^static int ctx_buffer_append(ctx_buffer *buf,$/;"	f	typeref:typename:int	file:
ctx_buffer_flush	programs/test/udp_proxy.c	/^static int ctx_buffer_flush(ctx_buffer *buf)$/;"	f	typeref:typename:int	file:
ctx_buffer_time_remaining	programs/test/udp_proxy.c	/^static unsigned ctx_buffer_time_remaining(ctx_buffer *buf)$/;"	f	typeref:typename:unsigned	file:
custom_calloc	tests/configs/user-config-malloc-0-null.h	/^static inline void *custom_calloc(size_t nmemb, size_t size)$/;"	f	typeref:typename:void *
debug_chain	library/memory_buffer_alloc.c	/^static void debug_chain(void)$/;"	f	typeref:typename:void	file:
debug_header	library/memory_buffer_alloc.c	/^static void debug_header(memory_header *hdr)$/;"	f	typeref:typename:void	file:
debug_print_line_by_line	library/debug.c	/^static void debug_print_line_by_line(const mbedtls_ssl_context *ssl, int level,$/;"	f	typeref:typename:void	file:
debug_print_pk	library/debug.c	/^static void debug_print_pk(const mbedtls_ssl_context *ssl, int level,$/;"	f	typeref:typename:void	file:
debug_send_line	library/debug.c	/^static inline void debug_send_line(const mbedtls_ssl_context *ssl, int level,$/;"	f	typeref:typename:void	file:
delay_packet	programs/test/udp_proxy.c	/^void delay_packet(packet *delay)$/;"	f	typeref:typename:void
delayed_recv	programs/ssl/ssl_test_lib.c	/^int delayed_recv(void *ctx, unsigned char *buf, size_t len)$/;"	f	typeref:typename:int
delayed_send	programs/ssl/ssl_test_lib.c	/^int delayed_send(void *ctx, const unsigned char *buf, size_t len)$/;"	f	typeref:typename:int
derive_key_ladder	programs/psa/key_ladder_demo.c	/^static psa_status_t derive_key_ladder(const char *ladder[],$/;"	f	typeref:typename:psa_status_t	file:
derive_mpi	library/ecdsa.c	/^static int derive_mpi(const mbedtls_ecp_group *grp, mbedtls_mpi *x,$/;"	f	typeref:typename:int	file:
derive_wrapping_key	programs/psa/key_ladder_demo.c	/^static psa_status_t derive_wrapping_key(psa_key_usage_t usage,$/;"	f	typeref:typename:psa_status_t	file:
des3_crypt_cbc_wrap	library/cipher_wrap.c	/^static int des3_crypt_cbc_wrap(void *ctx, mbedtls_operation_t operation, size_t length,$/;"	f	typeref:typename:int	file:
des3_crypt_ecb_wrap	library/cipher_wrap.c	/^static int des3_crypt_ecb_wrap(void *ctx, mbedtls_operation_t operation,$/;"	f	typeref:typename:int	file:
des3_ctx_alloc	library/cipher_wrap.c	/^static void *des3_ctx_alloc(void)$/;"	f	typeref:typename:void *	file:
des3_ctx_free	library/cipher_wrap.c	/^static void des3_ctx_free(void *ctx)$/;"	f	typeref:typename:void	file:
des3_set2key	library/des.c	/^static void des3_set2key(uint32_t esk[96],$/;"	f	typeref:typename:void	file:
des3_set2key_dec_wrap	library/cipher_wrap.c	/^static int des3_set2key_dec_wrap(void *ctx, const unsigned char *key,$/;"	f	typeref:typename:int	file:
des3_set2key_enc_wrap	library/cipher_wrap.c	/^static int des3_set2key_enc_wrap(void *ctx, const unsigned char *key,$/;"	f	typeref:typename:int	file:
des3_set3key	library/des.c	/^static void des3_set3key(uint32_t esk[96],$/;"	f	typeref:typename:void	file:
des3_set3key_dec_wrap	library/cipher_wrap.c	/^static int des3_set3key_dec_wrap(void *ctx, const unsigned char *key,$/;"	f	typeref:typename:int	file:
des3_set3key_enc_wrap	library/cipher_wrap.c	/^static int des3_set3key_enc_wrap(void *ctx, const unsigned char *key,$/;"	f	typeref:typename:int	file:
des_crypt_cbc_wrap	library/cipher_wrap.c	/^static int des_crypt_cbc_wrap(void *ctx, mbedtls_operation_t operation, size_t length,$/;"	f	typeref:typename:int	file:
des_crypt_ecb_wrap	library/cipher_wrap.c	/^static int des_crypt_ecb_wrap(void *ctx, mbedtls_operation_t operation,$/;"	f	typeref:typename:int	file:
des_ctx_alloc	library/cipher_wrap.c	/^static void *des_ctx_alloc(void)$/;"	f	typeref:typename:void *	file:
des_ctx_free	library/cipher_wrap.c	/^static void des_ctx_free(void *ctx)$/;"	f	typeref:typename:void	file:
des_setkey_dec_wrap	library/cipher_wrap.c	/^static int des_setkey_dec_wrap(void *ctx, const unsigned char *key,$/;"	f	typeref:typename:int	file:
des_setkey_enc_wrap	library/cipher_wrap.c	/^static int des_setkey_enc_wrap(void *ctx, const unsigned char *key,$/;"	f	typeref:typename:int	file:
detect_arch	scripts/code_size_compare.py	/^def detect_arch() -> str:$/;"	f	typeref:typename:str
dev_random_entropy_poll	programs/pkey/gen_key.c	/^int dev_random_entropy_poll(void *data, unsigned char *output,$/;"	f	typeref:typename:int
dhm_check_range	library/dhm.c	/^static int dhm_check_range(const mbedtls_mpi *param, const mbedtls_mpi *P)$/;"	f	typeref:typename:int	file:
dhm_make_common	library/dhm.c	/^static int dhm_make_common(mbedtls_dhm_context *ctx, int x_size,$/;"	f	typeref:typename:int	file:
dhm_random_below	library/dhm.c	/^static int dhm_random_below(mbedtls_mpi *R, const mbedtls_mpi *M,$/;"	f	typeref:typename:int	file:
dhm_read_bignum	library/dhm.c	/^static int dhm_read_bignum(mbedtls_mpi *X,$/;"	f	typeref:typename:int	file:
dhm_update_blinding	library/dhm.c	/^static int dhm_update_blinding(mbedtls_dhm_context *ctx,$/;"	f	typeref:typename:int	file:
dispatch_data	programs/test/udp_proxy.c	/^static int dispatch_data(mbedtls_net_context *ctx,$/;"	f	typeref:typename:int	file:
do_analyze_coverage	tests/scripts/analyze_outcomes.py	/^def do_analyze_coverage(results: Results, outcomes: Outcomes, args) -> None:$/;"	f	typeref:typename:None
do_analyze_driver_vs_reference	tests/scripts/analyze_outcomes.py	/^def do_analyze_driver_vs_reference(results: Results, outcomes: Outcomes, args) -> None:$/;"	f	typeref:typename:None
do_handshake	programs/ssl/ssl_mail_client.c	/^static int do_handshake(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int	file:
double_free	programs/test/metatest.c	/^void double_free(const char *name)$/;"	f	typeref:typename:void
dtls_srtp_key_derivation	programs/ssl/ssl_test_common_source.c	/^void dtls_srtp_key_derivation(void *p_expkey,$/;"	f	typeref:typename:void
dummy_constant_time	programs/fuzz/common.c	/^mbedtls_time_t dummy_constant_time(mbedtls_time_t *time)$/;"	f	typeref:typename:mbedtls_time_t
dummy_constant_time	programs/ssl/ssl_test_lib.c	/^mbedtls_time_t dummy_constant_time(mbedtls_time_t *time)$/;"	f	typeref:typename:mbedtls_time_t
dummy_entropy	programs/fuzz/common.c	/^int dummy_entropy(void *data, unsigned char *output, size_t len)$/;"	f	typeref:typename:int
dummy_entropy	programs/ssl/ssl_test_lib.c	/^static int dummy_entropy(void *data, unsigned char *output, size_t len)$/;"	f	typeref:typename:int	file:
dummy_init	programs/fuzz/common.c	/^void dummy_init(void)$/;"	f	typeref:typename:void
dummy_random	programs/fuzz/common.c	/^int dummy_random(void *p_rng, unsigned char *output, size_t output_len)$/;"	f	typeref:typename:int
dummy_send	programs/fuzz/common.c	/^int dummy_send(void *ctx, const unsigned char *buf, size_t len)$/;"	f	typeref:typename:int
dummy_ticket_parse	programs/ssl/ssl_server2.c	/^int dummy_ticket_parse(void *p_ticket, mbedtls_ssl_session *session,$/;"	f	typeref:typename:int
dummy_ticket_write	programs/ssl/ssl_server2.c	/^int dummy_ticket_write(void *p_ticket, const mbedtls_ssl_session *session,$/;"	f	typeref:typename:int
dump_buf	programs/pkey/ecdsa.c	/^static void dump_buf(const char *title, unsigned char *buf, size_t len)$/;"	f	typeref:typename:void	file:
dump_pubkey	programs/pkey/ecdsa.c	/^static void dump_pubkey(const char *title, mbedtls_ecdsa_context *key)$/;"	f	typeref:typename:void	file:
eap_tls_key_derivation	programs/ssl/ssl_test_common_source.c	/^void eap_tls_key_derivation(void *p_expkey,$/;"	f	typeref:typename:void
ecdh_calc_secret_internal	library/ecdh.c	/^static int ecdh_calc_secret_internal(mbedtls_ecdh_context_mbed *ctx,$/;"	f	typeref:typename:int	file:
ecdh_compute_shared_restartable	library/ecdh.c	/^static int ecdh_compute_shared_restartable(mbedtls_ecp_group *grp,$/;"	f	typeref:typename:int	file:
ecdh_free_internal	library/ecdh.c	/^static void ecdh_free_internal(mbedtls_ecdh_context_mbed *ctx)$/;"	f	typeref:typename:void	file:
ecdh_gen_public_restartable	library/ecdh.c	/^static int ecdh_gen_public_restartable(mbedtls_ecp_group *grp,$/;"	f	typeref:typename:int	file:
ecdh_get_params_internal	library/ecdh.c	/^static int ecdh_get_params_internal(mbedtls_ecdh_context_mbed *ctx,$/;"	f	typeref:typename:int	file:
ecdh_init_internal	library/ecdh.c	/^static void ecdh_init_internal(mbedtls_ecdh_context_mbed *ctx)$/;"	f	typeref:typename:void	file:
ecdh_make_params_internal	library/ecdh.c	/^static int ecdh_make_params_internal(mbedtls_ecdh_context_mbed *ctx,$/;"	f	typeref:typename:int	file:
ecdh_make_public_internal	library/ecdh.c	/^static int ecdh_make_public_internal(mbedtls_ecdh_context_mbed *ctx,$/;"	f	typeref:typename:int	file:
ecdh_read_params_internal	library/ecdh.c	/^static int ecdh_read_params_internal(mbedtls_ecdh_context_mbed *ctx,$/;"	f	typeref:typename:int	file:
ecdh_read_public_internal	library/ecdh.c	/^static int ecdh_read_public_internal(mbedtls_ecdh_context_mbed *ctx,$/;"	f	typeref:typename:int	file:
ecdh_setup_internal	library/ecdh.c	/^static int ecdh_setup_internal(mbedtls_ecdh_context_mbed *ctx,$/;"	f	typeref:typename:int	file:
ecdsa_can_do	library/pk_wrap.c	/^static int ecdsa_can_do(mbedtls_pk_type_t type)$/;"	f	typeref:typename:int	file:
ecdsa_m256_from_hash	3rdparty/p256-m/p256-m/p256-m.c	/^static void ecdsa_m256_from_hash(uint32_t z[8],$/;"	f	typeref:typename:void	file:
ecdsa_m256_mod_n	3rdparty/p256-m/p256-m/p256-m.c	/^static void ecdsa_m256_mod_n(uint32_t x[8])$/;"	f	typeref:typename:void	file:
ecdsa_opaque_can_do	library/pk_wrap.c	/^static int ecdsa_opaque_can_do(mbedtls_pk_type_t type)$/;"	f	typeref:typename:int	file:
ecdsa_opaque_check_pair_wrap	library/pk_wrap.c	/^static int ecdsa_opaque_check_pair_wrap(mbedtls_pk_context *pub,$/;"	f	typeref:typename:int	file:
ecdsa_opaque_sign_wrap	library/pk_wrap.c	/^static int ecdsa_opaque_sign_wrap(mbedtls_pk_context *pk,$/;"	f	typeref:typename:int	file:
ecdsa_opaque_verify_wrap	library/pk_wrap.c	/^static int ecdsa_opaque_verify_wrap(mbedtls_pk_context *pk,$/;"	f	typeref:typename:int	file:
ecdsa_restart_det_free	library/ecdsa.c	/^static void ecdsa_restart_det_free(mbedtls_ecdsa_restart_det_ctx *ctx)$/;"	f	typeref:typename:void	file:
ecdsa_restart_det_init	library/ecdsa.c	/^static void ecdsa_restart_det_init(mbedtls_ecdsa_restart_det_ctx *ctx)$/;"	f	typeref:typename:void	file:
ecdsa_restart_sig_free	library/ecdsa.c	/^static void ecdsa_restart_sig_free(mbedtls_ecdsa_restart_sig_ctx *ctx)$/;"	f	typeref:typename:void	file:
ecdsa_restart_sig_init	library/ecdsa.c	/^static void ecdsa_restart_sig_init(mbedtls_ecdsa_restart_sig_ctx *ctx)$/;"	f	typeref:typename:void	file:
ecdsa_restart_ver_free	library/ecdsa.c	/^static void ecdsa_restart_ver_free(mbedtls_ecdsa_restart_ver_ctx *ctx)$/;"	f	typeref:typename:void	file:
ecdsa_restart_ver_init	library/ecdsa.c	/^static void ecdsa_restart_ver_init(mbedtls_ecdsa_restart_ver_ctx *ctx)$/;"	f	typeref:typename:void	file:
ecdsa_rs_alloc	library/pk_wrap.c	/^static void *ecdsa_rs_alloc(void)$/;"	f	typeref:typename:void *	file:
ecdsa_rs_free	library/pk_wrap.c	/^static void ecdsa_rs_free(void *ctx)$/;"	f	typeref:typename:void	file:
ecdsa_sign_psa	library/pk_wrap.c	/^static int ecdsa_sign_psa(mbedtls_svc_key_id_t key_id, mbedtls_md_type_t md_alg,$/;"	f	typeref:typename:int	file:
ecdsa_sign_rs_wrap	library/pk_wrap.c	/^static int ecdsa_sign_rs_wrap(mbedtls_pk_context *pk, mbedtls_md_type_t md_alg,$/;"	f	typeref:typename:int	file:
ecdsa_sign_wrap	library/pk_wrap.c	/^static int ecdsa_sign_wrap(mbedtls_pk_context *pk, mbedtls_md_type_t md_alg,$/;"	f	typeref:typename:int	file:
ecdsa_signature_to_asn1	library/ecdsa.c	/^static int ecdsa_signature_to_asn1(const mbedtls_mpi *r, const mbedtls_mpi *s,$/;"	f	typeref:typename:int	file:
ecdsa_verify_psa	library/pk_wrap.c	/^static int ecdsa_verify_psa(unsigned char *key, size_t key_len,$/;"	f	typeref:typename:int	file:
ecdsa_verify_rs_wrap	library/pk_wrap.c	/^static int ecdsa_verify_rs_wrap(mbedtls_pk_context *pk, mbedtls_md_type_t md_alg,$/;"	f	typeref:typename:int	file:
ecdsa_verify_wrap	library/pk_wrap.c	/^static int ecdsa_verify_wrap(mbedtls_pk_context *pk, mbedtls_md_type_t md_alg,$/;"	f	typeref:typename:int	file:
ecdsa_verify_wrap	library/pk_wrap.c	/^static int ecdsa_verify_wrap(mbedtls_pk_context *pk,$/;"	f	typeref:typename:int	file:
ecjpake_ecp_add3	library/ecjpake.c	/^static int ecjpake_ecp_add3(mbedtls_ecp_group *grp, mbedtls_ecp_point *R,$/;"	f	typeref:typename:int	file:
ecjpake_hash	library/ecjpake.c	/^static int ecjpake_hash(const mbedtls_md_type_t md_type,$/;"	f	typeref:typename:int	file:
ecjpake_kkp_read	library/ecjpake.c	/^static int ecjpake_kkp_read(const mbedtls_md_type_t md_type,$/;"	f	typeref:typename:int	file:
ecjpake_kkp_write	library/ecjpake.c	/^static int ecjpake_kkp_write(const mbedtls_md_type_t md_type,$/;"	f	typeref:typename:int	file:
ecjpake_kkpp_read	library/ecjpake.c	/^static int ecjpake_kkpp_read(const mbedtls_md_type_t md_type,$/;"	f	typeref:typename:int	file:
ecjpake_kkpp_write	library/ecjpake.c	/^static int ecjpake_kkpp_write(const mbedtls_md_type_t md_type,$/;"	f	typeref:typename:int	file:
ecjpake_lgc	library/ecjpake.c	/^static int ecjpake_lgc(void *p, unsigned char *out, size_t len)$/;"	f	typeref:typename:int	file:
ecjpake_mul_secret	library/ecjpake.c	/^static int ecjpake_mul_secret(mbedtls_mpi *R, int sign,$/;"	f	typeref:typename:int	file:
ecjpake_test_load	library/ecjpake.c	/^static int ecjpake_test_load(mbedtls_ecjpake_context *ctx,$/;"	f	typeref:typename:int	file:
ecjpake_write_len_point	library/ecjpake.c	/^static int ecjpake_write_len_point(unsigned char **p,$/;"	f	typeref:typename:int	file:
ecjpake_zkp_read	library/ecjpake.c	/^static int ecjpake_zkp_read(const mbedtls_md_type_t md_type,$/;"	f	typeref:typename:int	file:
ecjpake_zkp_write	library/ecjpake.c	/^static int ecjpake_zkp_write(const mbedtls_md_type_t md_type,$/;"	f	typeref:typename:int	file:
eckey_alloc_wrap	library/pk_wrap.c	/^static void *eckey_alloc_wrap(void)$/;"	f	typeref:typename:void *	file:
eckey_can_do	library/pk_wrap.c	/^static int eckey_can_do(mbedtls_pk_type_t type)$/;"	f	typeref:typename:int	file:
eckey_check_pair_psa	library/pk_wrap.c	/^static int eckey_check_pair_psa(mbedtls_pk_context *pub, mbedtls_pk_context *prv)$/;"	f	typeref:typename:int	file:
eckey_check_pair_wrap	library/pk_wrap.c	/^static int eckey_check_pair_wrap(mbedtls_pk_context *pub, mbedtls_pk_context *prv,$/;"	f	typeref:typename:int	file:
eckey_debug	library/pk_wrap.c	/^static void eckey_debug(mbedtls_pk_context *pk, mbedtls_pk_debug_item *items)$/;"	f	typeref:typename:void	file:
eckey_free_wrap	library/pk_wrap.c	/^static void eckey_free_wrap(void *ctx)$/;"	f	typeref:typename:void	file:
eckey_get_bitlen	library/pk_wrap.c	/^static size_t eckey_get_bitlen(mbedtls_pk_context *pk)$/;"	f	typeref:typename:size_t	file:
eckey_rs_alloc	library/pk_wrap.c	/^static void *eckey_rs_alloc(void)$/;"	f	typeref:typename:void *	file:
eckey_rs_free	library/pk_wrap.c	/^static void eckey_rs_free(void *ctx)$/;"	f	typeref:typename:void	file:
eckey_sign_rs_wrap	library/pk_wrap.c	/^static int eckey_sign_rs_wrap(mbedtls_pk_context *pk, mbedtls_md_type_t md_alg,$/;"	f	typeref:typename:int	file:
eckey_verify_rs_wrap	library/pk_wrap.c	/^static int eckey_verify_rs_wrap(mbedtls_pk_context *pk, mbedtls_md_type_t md_alg,$/;"	f	typeref:typename:int	file:
eckeydh_can_do	library/pk_wrap.c	/^static int eckeydh_can_do(mbedtls_pk_type_t type)$/;"	f	typeref:typename:int	file:
ecp_add_mixed	library/ecp.c	/^static int ecp_add_mixed(const mbedtls_ecp_group *grp, mbedtls_ecp_point *R,$/;"	f	typeref:typename:int	file:
ecp_check_bad_points_mx	library/ecp.c	/^static int ecp_check_bad_points_mx(const mbedtls_mpi *X, const mbedtls_mpi *P,$/;"	f	typeref:typename:int	file:
ecp_check_pubkey_mx	library/ecp.c	/^static int ecp_check_pubkey_mx(const mbedtls_ecp_group *grp, const mbedtls_ecp_point *pt)$/;"	f	typeref:typename:int	file:
ecp_check_pubkey_sw	library/ecp.c	/^static int ecp_check_pubkey_sw(const mbedtls_ecp_group *grp, const mbedtls_ecp_point *pt)$/;"	f	typeref:typename:int	file:
ecp_comb_recode_core	library/ecp.c	/^static void ecp_comb_recode_core(unsigned char x[], size_t d,$/;"	f	typeref:typename:void	file:
ecp_comb_recode_scalar	library/ecp.c	/^static int ecp_comb_recode_scalar(const mbedtls_ecp_group *grp,$/;"	f	typeref:typename:int	file:
ecp_double_add_mxz	library/ecp.c	/^static int ecp_double_add_mxz(const mbedtls_ecp_group *grp,$/;"	f	typeref:typename:int	file:
ecp_double_jac	library/ecp.c	/^static int ecp_double_jac(const mbedtls_ecp_group *grp, mbedtls_ecp_point *R,$/;"	f	typeref:typename:int	file:
ecp_group_is_static_comb_table	library/ecp.c	/^static int ecp_group_is_static_comb_table(const mbedtls_ecp_group *grp)$/;"	f	typeref:typename:int	file:
ecp_group_load	library/ecp_curves.c	/^static int ecp_group_load(mbedtls_ecp_group *grp,$/;"	f	typeref:typename:int	file:
ecp_group_load	library/ecp_curves_new.c	/^static int ecp_group_load(mbedtls_ecp_group *grp,$/;"	f	typeref:typename:int	file:
ecp_mod_koblitz	library/ecp_curves.c	/^static inline int ecp_mod_koblitz(mbedtls_mpi *N, mbedtls_mpi_uint *Rp, size_t p_limbs,$/;"	f	typeref:typename:int	file:
ecp_mod_koblitz	library/ecp_curves_new.c	/^static inline int ecp_mod_koblitz(mbedtls_mpi_uint *X,$/;"	f	typeref:typename:int	file:
ecp_mod_p192	library/ecp_curves.c	/^static int ecp_mod_p192(mbedtls_mpi *N)$/;"	f	typeref:typename:int	file:
ecp_mod_p192	library/ecp_curves_new.c	/^static int ecp_mod_p192(mbedtls_mpi *N)$/;"	f	typeref:typename:int	file:
ecp_mod_p192k1	library/ecp_curves.c	/^static int ecp_mod_p192k1(mbedtls_mpi *N)$/;"	f	typeref:typename:int	file:
ecp_mod_p192k1	library/ecp_curves_new.c	/^static int ecp_mod_p192k1(mbedtls_mpi *N)$/;"	f	typeref:typename:int	file:
ecp_mod_p224	library/ecp_curves.c	/^static int ecp_mod_p224(mbedtls_mpi *N)$/;"	f	typeref:typename:int	file:
ecp_mod_p224	library/ecp_curves_new.c	/^static int ecp_mod_p224(mbedtls_mpi *N)$/;"	f	typeref:typename:int	file:
ecp_mod_p224k1	library/ecp_curves.c	/^static int ecp_mod_p224k1(mbedtls_mpi *N)$/;"	f	typeref:typename:int	file:
ecp_mod_p224k1	library/ecp_curves_new.c	/^static int ecp_mod_p224k1(mbedtls_mpi *N)$/;"	f	typeref:typename:int	file:
ecp_mod_p255	library/ecp_curves.c	/^static int ecp_mod_p255(mbedtls_mpi *N)$/;"	f	typeref:typename:int	file:
ecp_mod_p255	library/ecp_curves_new.c	/^static int ecp_mod_p255(mbedtls_mpi *N)$/;"	f	typeref:typename:int	file:
ecp_mod_p256	library/ecp_curves.c	/^static int ecp_mod_p256(mbedtls_mpi *N)$/;"	f	typeref:typename:int	file:
ecp_mod_p256	library/ecp_curves_new.c	/^static int ecp_mod_p256(mbedtls_mpi *N)$/;"	f	typeref:typename:int	file:
ecp_mod_p256k1	library/ecp_curves.c	/^static int ecp_mod_p256k1(mbedtls_mpi *N)$/;"	f	typeref:typename:int	file:
ecp_mod_p256k1	library/ecp_curves_new.c	/^static int ecp_mod_p256k1(mbedtls_mpi *N)$/;"	f	typeref:typename:int	file:
ecp_mod_p384	library/ecp_curves.c	/^static int ecp_mod_p384(mbedtls_mpi *N)$/;"	f	typeref:typename:int	file:
ecp_mod_p384	library/ecp_curves_new.c	/^static int ecp_mod_p384(mbedtls_mpi *N)$/;"	f	typeref:typename:int	file:
ecp_mod_p448	library/ecp_curves.c	/^static int ecp_mod_p448(mbedtls_mpi *N)$/;"	f	typeref:typename:int	file:
ecp_mod_p448	library/ecp_curves_new.c	/^static int ecp_mod_p448(mbedtls_mpi *N)$/;"	f	typeref:typename:int	file:
ecp_mod_p521	library/ecp_curves.c	/^static int ecp_mod_p521(mbedtls_mpi *N)$/;"	f	typeref:typename:int	file:
ecp_mod_p521	library/ecp_curves_new.c	/^static int ecp_mod_p521(mbedtls_mpi *N)$/;"	f	typeref:typename:int	file:
ecp_modp	library/ecp.c	/^static int ecp_modp(mbedtls_mpi *N, const mbedtls_ecp_group *grp)$/;"	f	typeref:typename:int	file:
ecp_mpi_load	library/ecp_curves.c	/^static inline void ecp_mpi_load(mbedtls_mpi *X, const mbedtls_mpi_uint *p, size_t len)$/;"	f	typeref:typename:void	file:
ecp_mpi_load	library/ecp_curves_new.c	/^static inline void ecp_mpi_load(mbedtls_mpi *X, const mbedtls_mpi_uint *p, size_t len)$/;"	f	typeref:typename:void	file:
ecp_mpi_set1	library/ecp_curves.c	/^static inline void ecp_mpi_set1(mbedtls_mpi *X)$/;"	f	typeref:typename:void	file:
ecp_mpi_set1	library/ecp_curves_new.c	/^static inline void ecp_mpi_set1(mbedtls_mpi *X)$/;"	f	typeref:typename:void	file:
ecp_mul_comb	library/ecp.c	/^static int ecp_mul_comb(mbedtls_ecp_group *grp, mbedtls_ecp_point *R,$/;"	f	typeref:typename:int	file:
ecp_mul_comb_after_precomp	library/ecp.c	/^static int ecp_mul_comb_after_precomp(const mbedtls_ecp_group *grp,$/;"	f	typeref:typename:int	file:
ecp_mul_comb_core	library/ecp.c	/^static int ecp_mul_comb_core(const mbedtls_ecp_group *grp, mbedtls_ecp_point *R,$/;"	f	typeref:typename:int	file:
ecp_mul_mxz	library/ecp.c	/^static int ecp_mul_mxz(mbedtls_ecp_group *grp, mbedtls_ecp_point *R,$/;"	f	typeref:typename:int	file:
ecp_mul_restartable_internal	library/ecp.c	/^static int ecp_mul_restartable_internal(mbedtls_ecp_group *grp, mbedtls_ecp_point *R,$/;"	f	typeref:typename:int	file:
ecp_normalize_jac	library/ecp.c	/^static int ecp_normalize_jac(const mbedtls_ecp_group *grp, mbedtls_ecp_point *pt)$/;"	f	typeref:typename:int	file:
ecp_normalize_jac_many	library/ecp.c	/^static int ecp_normalize_jac_many(const mbedtls_ecp_group *grp,$/;"	f	typeref:typename:int	file:
ecp_normalize_mxz	library/ecp.c	/^static int ecp_normalize_mxz(const mbedtls_ecp_group *grp, mbedtls_ecp_point *P)$/;"	f	typeref:typename:int	file:
ecp_pick_window_size	library/ecp.c	/^static unsigned char ecp_pick_window_size(const mbedtls_ecp_group *grp,$/;"	f	typeref:typename:unsigned char	file:
ecp_precompute_comb	library/ecp.c	/^static int ecp_precompute_comb(const mbedtls_ecp_group *grp,$/;"	f	typeref:typename:int	file:
ecp_randomize_jac	library/ecp.c	/^static int ecp_randomize_jac(const mbedtls_ecp_group *grp, mbedtls_ecp_point *pt,$/;"	f	typeref:typename:int	file:
ecp_randomize_mxz	library/ecp.c	/^static int ecp_randomize_mxz(const mbedtls_ecp_group *grp, mbedtls_ecp_point *P,$/;"	f	typeref:typename:int	file:
ecp_restart_ma_free	library/ecp.c	/^static void ecp_restart_ma_free(mbedtls_ecp_restart_muladd_ctx *ctx)$/;"	f	typeref:typename:void	file:
ecp_restart_ma_init	library/ecp.c	/^static void ecp_restart_ma_init(mbedtls_ecp_restart_muladd_ctx *ctx)$/;"	f	typeref:typename:void	file:
ecp_restart_rsm_free	library/ecp.c	/^static void ecp_restart_rsm_free(mbedtls_ecp_restart_mul_ctx *ctx)$/;"	f	typeref:typename:void	file:
ecp_restart_rsm_init	library/ecp.c	/^static void ecp_restart_rsm_init(mbedtls_ecp_restart_mul_ctx *ctx)$/;"	f	typeref:typename:void	file:
ecp_safe_invert_jac	library/ecp.c	/^static int ecp_safe_invert_jac(const mbedtls_ecp_group *grp,$/;"	f	typeref:typename:int	file:
ecp_select_comb	library/ecp.c	/^static int ecp_select_comb(const mbedtls_ecp_group *grp, mbedtls_ecp_point *R,$/;"	f	typeref:typename:int	file:
ecp_sw_rhs	library/ecp.c	/^static int ecp_sw_rhs(const mbedtls_ecp_group *grp,$/;"	f	typeref:typename:int	file:
ecp_use_curve25519	library/ecp_curves.c	/^static int ecp_use_curve25519(mbedtls_ecp_group *grp)$/;"	f	typeref:typename:int	file:
ecp_use_curve25519	library/ecp_curves_new.c	/^static int ecp_use_curve25519(mbedtls_ecp_group *grp)$/;"	f	typeref:typename:int	file:
ecp_use_curve448	library/ecp_curves.c	/^static int ecp_use_curve448(mbedtls_ecp_group *grp)$/;"	f	typeref:typename:int	file:
ecp_use_curve448	library/ecp_curves_new.c	/^static int ecp_use_curve448(mbedtls_ecp_group *grp)$/;"	f	typeref:typename:int	file:
elapsed_time	programs/test/udp_proxy.c	/^static unsigned elapsed_time(void)$/;"	f	typeref:typename:unsigned	file:
entropy_dummy_source	library/entropy.c	/^static int entropy_dummy_source(void *data, unsigned char *output,$/;"	f	typeref:typename:int	file:
entropy_gather_internal	library/entropy.c	/^static int entropy_gather_internal(mbedtls_entropy_context *ctx)$/;"	f	typeref:typename:int	file:
entropy_update	library/entropy.c	/^static int entropy_update(mbedtls_entropy_context *ctx, unsigned char source_id,$/;"	f	typeref:typename:int	file:
error_exit	programs/ssl/ssl_context_info.c	/^void error_exit(void)$/;"	f	typeref:typename:void
exchange_data	tests/src/test_helpers/ssl_helpers.c	/^static int exchange_data(mbedtls_ssl_context *ssl_1,$/;"	f	typeref:typename:int	file:
execute_reference_driver_tests	tests/scripts/analyze_outcomes.py	/^def execute_reference_driver_tests(results: Results, ref_component: str, driver_component: str, /;"	f	typeref:typename:None
exercise_aead_key	tests/src/psa_exercise_key.c	/^static int exercise_aead_key(mbedtls_svc_key_id_t key,$/;"	f	typeref:typename:int	file:
exercise_asymmetric_encryption_key	tests/src/psa_exercise_key.c	/^static int exercise_asymmetric_encryption_key(mbedtls_svc_key_id_t key,$/;"	f	typeref:typename:int	file:
exercise_cipher_key	tests/src/psa_exercise_key.c	/^static int exercise_cipher_key(mbedtls_svc_key_id_t key,$/;"	f	typeref:typename:int	file:
exercise_export_key	tests/src/psa_exercise_key.c	/^static int exercise_export_key(mbedtls_svc_key_id_t key,$/;"	f	typeref:typename:int	file:
exercise_export_public_key	tests/src/psa_exercise_key.c	/^static int exercise_export_public_key(mbedtls_svc_key_id_t key)$/;"	f	typeref:typename:int	file:
exercise_key_agreement_key	tests/src/psa_exercise_key.c	/^static int exercise_key_agreement_key(mbedtls_svc_key_id_t key,$/;"	f	typeref:typename:int	file:
exercise_key_derivation_key	tests/src/psa_exercise_key.c	/^static int exercise_key_derivation_key(mbedtls_svc_key_id_t key,$/;"	f	typeref:typename:int	file:
exercise_mac_key	tests/src/psa_exercise_key.c	/^static int exercise_mac_key(mbedtls_svc_key_id_t key,$/;"	f	typeref:typename:int	file:
exercise_raw_key_agreement_key	tests/src/psa_exercise_key.c	/^static int exercise_raw_key_agreement_key(mbedtls_svc_key_id_t key,$/;"	f	typeref:typename:int	file:
exercise_signature_key	tests/src/psa_exercise_key.c	/^static int exercise_signature_key(mbedtls_svc_key_id_t key,$/;"	f	typeref:typename:int	file:
exit_usage	programs/test/udp_proxy.c	/^static void exit_usage(const char *name, const char *value)$/;"	f	typeref:typename:void	file:
exp_mod_get_window_size	library/bignum_core.c	/^static size_t exp_mod_get_window_size(size_t Ebits)$/;"	f	typeref:typename:size_t	file:
exp_mod_precompute_window	library/bignum_core.c	/^static void exp_mod_precompute_window(const mbedtls_mpi_uint *A,$/;"	f	typeref:typename:void	file:
extract_carry	library/ecp_curves_new.c	/^static inline int8_t extract_carry(int64_t cur)$/;"	f	typeref:typename:int8_t	file:
extract_ecdsa_sig	library/pk_wrap.c	/^static int extract_ecdsa_sig(unsigned char **p, const unsigned char *end,$/;"	f	typeref:typename:int	file:
extract_ecdsa_sig_int	library/pk_wrap.c	/^static int extract_ecdsa_sig_int(unsigned char **from, const unsigned char *end,$/;"	f	typeref:typename:int	file:
filter_func	tests/scripts/audit-validity-dates.py	/^    filter_func = lambda d: (start_date < d.not_valid_before) or \\$/;"	f	function:main	file:
finish_family_dependencies	scripts/mbedtls_dev/psa_information.py	/^def finish_family_dependencies(dependencies: List[str], bits: int) -> List[str]:$/;"	f	typeref:typename:List[str]
finish_family_dependency	scripts/mbedtls_dev/psa_information.py	/^def finish_family_dependency(dep: str, bits: int) -> str:$/;"	f	typeref:typename:str
fix_style	scripts/code_style.py	/^def fix_style(src_file_list: List[str]) -> int:$/;"	f	typeref:typename:int
fix_style_single_pass	scripts/code_style.py	/^def fix_style_single_pass(src_file_list: List[str]) -> bool:$/;"	f	typeref:typename:bool
fuzz_recv	programs/fuzz/common.c	/^int fuzz_recv(void *ctx, unsigned char *buf, size_t len)$/;"	f	typeref:typename:int
fuzz_recv_timeout	programs/fuzz/common.c	/^int fuzz_recv_timeout(void *ctx, unsigned char *buf, size_t len,$/;"	f	typeref:typename:int
gather_inputs	tests/scripts/test_psa_constant_names.py	/^def gather_inputs(headers: Iterable[str],$/;"	f	typeref:typename:PSAMacroEnumerator
gcm_aes_setkey_wrap	library/cipher_wrap.c	/^static int gcm_aes_setkey_wrap(void *ctx, const unsigned char *key,$/;"	f	typeref:typename:int	file:
gcm_aria_setkey_wrap	library/cipher_wrap.c	/^static int gcm_aria_setkey_wrap(void *ctx, const unsigned char *key,$/;"	f	typeref:typename:int	file:
gcm_camellia_setkey_wrap	library/cipher_wrap.c	/^static int gcm_camellia_setkey_wrap(void *ctx, const unsigned char *key,$/;"	f	typeref:typename:int	file:
gcm_clmul	library/aesni.c	/^static void gcm_clmul(const __m128i aa, const __m128i bb,$/;"	f	typeref:typename:void	file:
gcm_ctx_alloc	library/cipher_wrap.c	/^static void *gcm_ctx_alloc(void)$/;"	f	typeref:typename:void *	file:
gcm_ctx_free	library/cipher_wrap.c	/^static void gcm_ctx_free(void *ctx)$/;"	f	typeref:typename:void	file:
gcm_gen_table	library/gcm.c	/^static int gcm_gen_table(mbedtls_gcm_context *ctx)$/;"	f	typeref:typename:int	file:
gcm_incr	library/gcm.c	/^static void gcm_incr(unsigned char y[16])$/;"	f	typeref:typename:void	file:
gcm_mask	library/gcm.c	/^static int gcm_mask(mbedtls_gcm_context *ctx,$/;"	f	typeref:typename:int	file:
gcm_mix	library/aesni.c	/^static __m128i gcm_mix(__m128i dx)$/;"	f	typeref:typename:__m128i	file:
gcm_mult	library/gcm.c	/^static void gcm_mult(mbedtls_gcm_context *ctx, const unsigned char x[16],$/;"	f	typeref:typename:void	file:
gcm_reduce	library/aesni.c	/^static __m128i gcm_reduce(__m128i xx)$/;"	f	typeref:typename:__m128i	file:
gcm_shift	library/aesni.c	/^static void gcm_shift(__m128i *cc, __m128i *dd)$/;"	f	typeref:typename:void	file:
generate	programs/psa/key_ladder_demo.c	/^static psa_status_t generate(const char *key_file_name)$/;"	f	typeref:typename:psa_status_t	file:
generate_deps_from_description	scripts/mbedtls_dev/psa_information.py	/^def generate_deps_from_description($/;"	f	typeref:typename:List[str]
generate_driver_wrapper_file	scripts/generate_driver_wrappers.py	/^def generate_driver_wrapper_file(template_dir: str,$/;"	f	typeref:typename:None
generic_check	programs/hash/generic_sum.c	/^static int generic_check(const mbedtls_md_info_t *md_info, char *filename)$/;"	f	typeref:typename:int	file:
generic_print	programs/hash/generic_sum.c	/^static int generic_print(const mbedtls_md_info_t *md_info, char *filename)$/;"	f	typeref:typename:int	file:
generic_wrapper	programs/hash/generic_sum.c	/^static int generic_wrapper(const mbedtls_md_info_t *md_info, char *filename, unsigned char *sum)$/;"	f	typeref:typename:int	file:
get_all_test_cases	tests/scripts/generate_tls13_compat_tests.py	/^    def get_all_test_cases():$/;"	f	function:main	file:
get_auth_mode	programs/ssl/ssl_server2.c	/^static int get_auth_mode(const char *s)$/;"	f	typeref:typename:int	file:
get_enabled_str	programs/ssl/ssl_context_info.c	/^const char *get_enabled_str(int is_en)$/;"	f	typeref:typename:const char *
get_merkle_path	library/lms.c	/^static int get_merkle_path(mbedtls_lms_private_t *ctx,$/;"	f	typeref:typename:int	file:
get_mfl_str	programs/ssl/ssl_context_info.c	/^const char *get_mfl_str(int mfl_code)$/;"	f	typeref:typename:const char *
get_no_padding	library/cipher.c	/^static int get_no_padding(unsigned char *input, size_t input_len,$/;"	f	typeref:typename:int	file:
get_one_and_zeros_padding	library/cipher.c	/^static int get_one_and_zeros_padding(unsigned char *input, size_t input_len,$/;"	f	typeref:typename:int	file:
get_options	programs/test/udp_proxy.c	/^static void get_options(int argc, char *argv[])$/;"	f	typeref:typename:void	file:
get_pkcs_padding	library/cipher.c	/^static int get_pkcs_padding(unsigned char *input, size_t input_len,$/;"	f	typeref:typename:int	file:
get_results	scripts/code_size_compare.py	/^        def get_results($/;"	f	member:CodeSizeGeneratorWithSize.write_comparison	typeref:typename:typing.List	file:
get_src_files	scripts/code_style.py	/^def get_src_files(since: Optional[str]) -> List[str]:$/;"	f	typeref:typename:List[str]
get_uncrustify_version	scripts/code_style.py	/^def get_uncrustify_version() -> str:$/;"	f	typeref:typename:str
get_zeros_and_len_padding	library/cipher.c	/^static int get_zeros_and_len_padding(unsigned char *input, size_t input_len,$/;"	f	typeref:typename:int	file:
get_zeros_padding	library/cipher.c	/^static int get_zeros_padding(unsigned char *input, size_t input_len,$/;"	f	typeref:typename:int	file:
getrandom_wrapper	library/entropy_poll.c	/^static int getrandom_wrapper(void *buf, size_t buflen, unsigned int flags)$/;"	f	typeref:typename:int	file:
good_nonce_len	library/ctr_drbg.c	/^static size_t good_nonce_len(size_t entropy_len)$/;"	f	typeref:typename:size_t	file:
guess_mbedtls_root	scripts/mbedtls_dev/build_tree.py	/^def guess_mbedtls_root(root: Optional[str] = None) -> str:$/;"	f	typeref:typename:str
guess_tf_psa_crypto_root	scripts/mbedtls_dev/build_tree.py	/^def guess_tf_psa_crypto_root(root: Optional[str] = None) -> str:$/;"	f	typeref:typename:str
hack_dependencies_not_implemented	scripts/mbedtls_dev/psa_information.py	/^def hack_dependencies_not_implemented(dependencies: List[str]) -> None:$/;"	f	typeref:typename:None
handle_buffer_resizing	library/ssl_tls.c	/^static void handle_buffer_resizing(mbedtls_ssl_context *ssl, int downsizing,$/;"	f	typeref:typename:void	file:
handle_message	programs/test/udp_proxy.c	/^int handle_message(const char *way,$/;"	f	typeref:typename:int
handle_ssl_connection	programs/ssl/ssl_pthread_server.c	/^static void *handle_ssl_connection(void *data)$/;"	f	typeref:typename:void *	file:
hash_digit_array	library/lmots.c	/^static int hash_digit_array(const mbedtls_lmots_parameters_t *params,$/;"	f	typeref:typename:int	file:
hash_mprime	library/rsa.c	/^static int hash_mprime(const unsigned char *hash, size_t hlen,$/;"	f	typeref:typename:int	file:
help	programs/test/metatest.c	/^static void help(FILE *out, const char *argv0)$/;"	f	typeref:typename:void	file:
hex_digits_for_limb	scripts/mbedtls_dev/bignum_common.py	/^def hex_digits_for_limb(limbs: int, bits_in_limb: int) -> int:$/;"	f	typeref:typename:int
hex_digits_max_int	scripts/mbedtls_dev/bignum_common.py	/^def hex_digits_max_int(val: str, bits_in_limb: int) -> int:$/;"	f	typeref:typename:int
hex_string	scripts/mbedtls_dev/test_case.py	/^def hex_string(data: bytes) -> str:$/;"	f	typeref:typename:str
hex_to_int	library/x509_create.c	/^static int hex_to_int(char c)$/;"	f	typeref:typename:int	file:
hex_to_int	scripts/mbedtls_dev/bignum_common.py	/^def hex_to_int(val: str) -> int:$/;"	f	typeref:typename:int
hexpair_to_int	library/x509_create.c	/^static int hexpair_to_int(const char *hexpair)$/;"	f	typeref:typename:int	file:
hmac_demo	programs/hash/md_hmac_demo.c	/^int hmac_demo(void)$/;"	f	typeref:typename:int
hmac_demo	programs/psa/hmac_demo.c	/^psa_status_t hmac_demo(void)$/;"	f	typeref:typename:psa_status_t
hmac_drbg_reseed_core	library/hmac_drbg.c	/^static int hmac_drbg_reseed_core(mbedtls_hmac_drbg_context *ctx,$/;"	f	typeref:typename:int	file:
hmac_drbg_self_test_entropy	library/hmac_drbg.c	/^static int hmac_drbg_self_test_entropy(void *data,$/;"	f	typeref:typename:int	file:
idle	programs/ssl/ssl_test_lib.c	/^int idle(mbedtls_net_context *fd,$/;"	f	typeref:typename:int
import_key_from_file	programs/psa/key_ladder_demo.c	/^static psa_status_t import_key_from_file(psa_key_usage_t usage,$/;"	f	typeref:typename:psa_status_t	file:
invmod	scripts/mbedtls_dev/bignum_common.py	/^def invmod(a: int, n: int) -> int:$/;"	f	typeref:typename:int
invmod_positive	scripts/mbedtls_dev/bignum_common.py	/^def invmod_positive(a: int, n: int) -> int:$/;"	f	typeref:typename:int
is_kdf_alg_supported	library/psa_crypto.c	/^static int is_kdf_alg_supported(psa_algorithm_t kdf_alg)$/;"	f	typeref:typename:int	file:
is_simplifiable	tests/scripts/test_psa_constant_names.py	/^def is_simplifiable(expr: str) -> bool:$/;"	f	typeref:typename:bool
keccak_f1600	library/sha3.c	/^static void keccak_f1600(mbedtls_sha3_context *ctx)$/;"	f	typeref:typename:void	file:
key_opaque_alg_parse	programs/ssl/ssl_test_lib.c	/^int key_opaque_alg_parse(const char *arg, const char **alg1, const char **alg2)$/;"	f	typeref:typename:int
key_opaque_set_alg_usage	programs/ssl/ssl_test_lib.c	/^int key_opaque_set_alg_usage(const char *alg1, const char *alg2,$/;"	f	typeref:typename:int
key_type_is_raw_bytes	library/psa_crypto.c	/^static int key_type_is_raw_bytes(psa_key_type_t type)$/;"	f	typeref:typename:int	file:
krml_time	3rdparty/everest/include/everest/kremlin/internal/target.h	/^inline static int32_t krml_time() {$/;"	f	typeref:typename:int32_t
kw_aes_setkey_unwrap	library/cipher_wrap.c	/^static int kw_aes_setkey_unwrap(void *ctx, const unsigned char *key,$/;"	f	typeref:typename:int	file:
kw_aes_setkey_wrap	library/cipher_wrap.c	/^static int kw_aes_setkey_wrap(void *ctx, const unsigned char *key,$/;"	f	typeref:typename:int	file:
kw_ctx_alloc	library/cipher_wrap.c	/^static void *kw_ctx_alloc(void)$/;"	f	typeref:typename:void *	file:
kw_ctx_free	library/cipher_wrap.c	/^static void kw_ctx_free(void *ctx)$/;"	f	typeref:typename:void	file:
lifetime_is_dynamic_secure_element	tests/src/psa_exercise_key.c	/^static int lifetime_is_dynamic_secure_element(psa_key_lifetime_t lifetime)$/;"	f	typeref:typename:int	file:
limbs_mpi	scripts/mbedtls_dev/bignum_common.py	/^def limbs_mpi(val: int, bits_in_limb: int) -> int:$/;"	f	typeref:typename:int
list_generated_files	scripts/code_style.py	/^def list_generated_files() -> FrozenSet[str]:$/;"	f	typeref:typename:FrozenSet[str]
lmots_checksum_calculate	library/lmots.c	/^static unsigned short lmots_checksum_calculate(const mbedtls_lmots_parameters_t *params,$/;"	f	typeref:typename:unsigned short	file:
load16	3rdparty/everest/include/everest/kremlin/c_endianness.h	/^inline static uint16_t load16(uint8_t *b) {$/;"	f	typeref:typename:uint16_t
load32	3rdparty/everest/include/everest/kremlin/c_endianness.h	/^inline static uint32_t load32(uint8_t *b) {$/;"	f	typeref:typename:uint32_t
load64	3rdparty/everest/include/everest/kremlin/c_endianness.h	/^inline static uint64_t load64(uint8_t *b) {$/;"	f	typeref:typename:uint64_t
load_driver	scripts/generate_driver_wrappers.py	/^def load_driver(schemas: Dict[str, Any], driver_file: str) -> Any:$/;"	f	typeref:typename:Any
load_file	library/dhm.c	/^static int load_file(const char *path, unsigned char **buf, size_t *n)$/;"	f	typeref:typename:int	file:
load_file	programs/util/pem2der.c	/^static int load_file(const char *path, unsigned char **buf, size_t *n)$/;"	f	typeref:typename:int	file:
load_schemas	scripts/generate_driver_wrappers.py	/^def load_schemas(project_root: str) -> Dict[str, Any]:$/;"	f	typeref:typename:Dict[str,Any]
local_err_translation	library/lmots.c	/^static int local_err_translation(psa_status_t status)$/;"	f	typeref:typename:int	file:
local_err_translation	library/lms.c	/^static int local_err_translation(psa_status_t status)$/;"	f	typeref:typename:int	file:
local_err_translation	library/ssl_cookie.c	/^static int local_err_translation(psa_status_t status)$/;"	f	typeref:typename:int	file:
local_err_translation	library/ssl_msg.c	/^static int local_err_translation(psa_status_t status)$/;"	f	typeref:typename:int	file:
local_err_translation	library/ssl_ticket.c	/^static int local_err_translation(psa_status_t status)$/;"	f	typeref:typename:int	file:
local_err_translation	library/ssl_tls.c	/^static int local_err_translation(psa_status_t status)$/;"	f	typeref:typename:int	file:
local_err_translation	library/ssl_tls12_client.c	/^static int local_err_translation(psa_status_t status)$/;"	f	typeref:typename:int	file:
local_err_translation	library/ssl_tls12_server.c	/^static int local_err_translation(psa_status_t status)$/;"	f	typeref:typename:int	file:
local_err_translation	library/ssl_tls13_client.c	/^static int local_err_translation(psa_status_t status)$/;"	f	typeref:typename:int	file:
local_err_translation	library/ssl_tls13_generic.c	/^static int local_err_translation(psa_status_t status)$/;"	f	typeref:typename:int	file:
local_err_translation	library/ssl_tls13_keys.c	/^static int local_err_translation(psa_status_t status)$/;"	f	typeref:typename:int	file:
looks_like_mbedtls_root	scripts/mbedtls_dev/build_tree.py	/^def looks_like_mbedtls_root(path: str) -> bool:$/;"	f	typeref:typename:bool
looks_like_root	scripts/mbedtls_dev/build_tree.py	/^def looks_like_root(path: str) -> bool:$/;"	f	typeref:typename:bool
looks_like_tf_psa_crypto_root	scripts/mbedtls_dev/build_tree.py	/^def looks_like_tf_psa_crypto_root(path: str) -> bool:$/;"	f	typeref:typename:bool
m256_add	3rdparty/p256-m/p256-m/p256-m.c	/^static void m256_add(uint32_t z[8],$/;"	f	typeref:typename:void	file:
m256_add_p	3rdparty/p256-m/p256-m/p256-m.c	/^static void m256_add_p(uint32_t z[8],$/;"	f	typeref:typename:void	file:
m256_done	3rdparty/p256-m/p256-m/p256-m.c	/^static void m256_done(uint32_t z[8], const m256_mod *mod)$/;"	f	typeref:typename:void	file:
m256_from_bytes	3rdparty/p256-m/p256-m/p256-m.c	/^static int m256_from_bytes(uint32_t z[8],$/;"	f	typeref:typename:int	file:
m256_inv	3rdparty/p256-m/p256-m/p256-m.c	/^static void m256_inv(uint32_t z[8], const uint32_t x[8],$/;"	f	typeref:typename:void	file:
m256_mul	3rdparty/p256-m/p256-m/p256-m.c	/^static void m256_mul(uint32_t z[8],$/;"	f	typeref:typename:void	file:
m256_mul_p	3rdparty/p256-m/p256-m/p256-m.c	/^static void m256_mul_p(uint32_t z[8],$/;"	f	typeref:typename:void	file:
m256_prep	3rdparty/p256-m/p256-m/p256-m.c	/^static void m256_prep(uint32_t z[8], const m256_mod *mod)$/;"	f	typeref:typename:void	file:
m256_set32	3rdparty/p256-m/p256-m/p256-m.c	/^static void m256_set32(uint32_t z[8], uint32_t x, const m256_mod *mod)$/;"	f	typeref:typename:void	file:
m256_sub	3rdparty/p256-m/p256-m/p256-m.c	/^static void m256_sub(uint32_t z[8],$/;"	f	typeref:typename:void	file:
m256_sub_p	3rdparty/p256-m/p256-m/p256-m.c	/^static void m256_sub_p(uint32_t z[8],$/;"	f	typeref:typename:void	file:
m256_to_bytes	3rdparty/p256-m/p256-m/p256-m.c	/^static void m256_to_bytes(uint8_t p[32],$/;"	f	typeref:typename:void	file:
mac_init	library/psa_crypto_mac.c	/^static psa_status_t mac_init($/;"	f	typeref:typename:psa_status_t	file:
main	programs/aes/crypt_and_hash.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	programs/aes/crypt_and_hash.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/cipher/cipher_aead_demo.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	programs/cipher/cipher_aead_demo.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/fuzz/onefile.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	programs/hash/generic_sum.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	programs/hash/generic_sum.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/hash/hello.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/hash/md_hmac_demo.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/pkey/dh_client.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/pkey/dh_genprime.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	programs/pkey/dh_genprime.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/pkey/dh_server.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/pkey/ecdh_curve25519.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	programs/pkey/ecdh_curve25519.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/pkey/ecdsa.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	programs/pkey/ecdsa.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/pkey/gen_key.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	programs/pkey/gen_key.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/pkey/key_app.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	programs/pkey/key_app.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/pkey/key_app_writer.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	programs/pkey/key_app_writer.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/pkey/mpi_demo.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/pkey/pk_decrypt.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	programs/pkey/pk_decrypt.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/pkey/pk_encrypt.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	programs/pkey/pk_encrypt.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/pkey/pk_sign.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	programs/pkey/pk_sign.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/pkey/pk_verify.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	programs/pkey/pk_verify.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/pkey/rsa_decrypt.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	programs/pkey/rsa_decrypt.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/pkey/rsa_encrypt.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	programs/pkey/rsa_encrypt.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/pkey/rsa_genkey.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/pkey/rsa_sign.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	programs/pkey/rsa_sign.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/pkey/rsa_sign_pss.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	programs/pkey/rsa_sign_pss.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/pkey/rsa_verify.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	programs/pkey/rsa_verify.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/pkey/rsa_verify_pss.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	programs/pkey/rsa_verify_pss.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/psa/aead_demo.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	programs/psa/aead_demo.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/psa/crypto_examples.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/psa/hmac_demo.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/psa/key_ladder_demo.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	programs/psa/key_ladder_demo.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/psa/psa_constant_names.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	programs/psa/psa_hash.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/random/gen_entropy.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	programs/random/gen_entropy.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/random/gen_random_ctr_drbg.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	programs/random/gen_random_ctr_drbg.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/ssl/dtls_client.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	programs/ssl/dtls_client.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/ssl/dtls_server.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/ssl/mini_client.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/ssl/ssl_client1.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/ssl/ssl_client2.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	programs/ssl/ssl_client2.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/ssl/ssl_context_info.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	programs/ssl/ssl_context_info.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/ssl/ssl_fork_server.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	programs/ssl/ssl_fork_server.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/ssl/ssl_mail_client.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	programs/ssl/ssl_mail_client.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/ssl/ssl_pthread_server.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/ssl/ssl_server.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/ssl/ssl_server2.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	programs/ssl/ssl_server2.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/test/benchmark.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	programs/test/benchmark.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/test/cmake_package/cmake_package.c	/^int main()$/;"	f	typeref:typename:int
main	programs/test/cmake_package_install/cmake_package_install.c	/^int main()$/;"	f	typeref:typename:int
main	programs/test/cmake_subproject/cmake_subproject.c	/^int main()$/;"	f	typeref:typename:int
main	programs/test/dlopen.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/test/metatest.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	programs/test/query_compile_time_config.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	programs/test/query_included_headers.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/test/selftest.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	programs/test/udp_proxy.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	programs/test/udp_proxy.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/test/zeroize.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	programs/util/pem2der.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	programs/util/pem2der.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/util/strerror.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	programs/util/strerror.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/x509/cert_app.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	programs/x509/cert_app.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/x509/cert_req.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	programs/x509/cert_req.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/x509/cert_write.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	programs/x509/cert_write.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/x509/crl_app.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	programs/x509/crl_app.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/x509/load_roots.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	programs/x509/load_roots.c	/^int main(void)$/;"	f	typeref:typename:int
main	programs/x509/req_app.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	programs/x509/req_app.c	/^int main(void)$/;"	f	typeref:typename:int
main	scripts/code_style.py	/^def main() -> int:$/;"	f	typeref:typename:int
main	scripts/generate_driver_wrappers.py	/^def main() -> int:$/;"	f	typeref:typename:int
main	scripts/min_requirements.py	/^def main() -> None:$/;"	f	typeref:typename:None
mbedtls_a64_crypto_sha256_determine_support	library/sha256.c	/^static int mbedtls_a64_crypto_sha256_determine_support(void)$/;"	f	typeref:typename:int	file:
mbedtls_a64_crypto_sha256_has_support	library/sha256.c	/^static int mbedtls_a64_crypto_sha256_has_support(void)$/;"	f	typeref:typename:int	file:
mbedtls_a64_crypto_sha512_determine_support	library/sha512.c	/^static int mbedtls_a64_crypto_sha512_determine_support(void)$/;"	f	typeref:typename:int	file:
mbedtls_a64_crypto_sha512_has_support	library/sha512.c	/^static int mbedtls_a64_crypto_sha512_has_support(void)$/;"	f	typeref:typename:int	file:
mbedtls_aes_cmac_prf_128	library/cmac.c	/^int mbedtls_aes_cmac_prf_128(const unsigned char *key, size_t key_length,$/;"	f	typeref:typename:int
mbedtls_aes_crypt_cbc	library/aes.c	/^int mbedtls_aes_crypt_cbc(mbedtls_aes_context *ctx,$/;"	f	typeref:typename:int
mbedtls_aes_crypt_cfb128	library/aes.c	/^int mbedtls_aes_crypt_cfb128(mbedtls_aes_context *ctx,$/;"	f	typeref:typename:int
mbedtls_aes_crypt_cfb8	library/aes.c	/^int mbedtls_aes_crypt_cfb8(mbedtls_aes_context *ctx,$/;"	f	typeref:typename:int
mbedtls_aes_crypt_ctr	library/aes.c	/^int mbedtls_aes_crypt_ctr(mbedtls_aes_context *ctx,$/;"	f	typeref:typename:int
mbedtls_aes_crypt_ecb	library/aes.c	/^int mbedtls_aes_crypt_ecb(mbedtls_aes_context *ctx,$/;"	f	typeref:typename:int
mbedtls_aes_crypt_ofb	library/aes.c	/^int mbedtls_aes_crypt_ofb(mbedtls_aes_context *ctx,$/;"	f	typeref:typename:int
mbedtls_aes_crypt_xts	library/aes.c	/^int mbedtls_aes_crypt_xts(mbedtls_aes_xts_context *ctx,$/;"	f	typeref:typename:MBEDTLS_OPTIMIZE_FOR_PERFORMANCE int
mbedtls_aes_free	library/aes.c	/^void mbedtls_aes_free(mbedtls_aes_context *ctx)$/;"	f	typeref:typename:void
mbedtls_aes_init	library/aes.c	/^void mbedtls_aes_init(mbedtls_aes_context *ctx)$/;"	f	typeref:typename:void
mbedtls_aes_rk_offset	library/aes.c	/^MBEDTLS_MAYBE_UNUSED static unsigned mbedtls_aes_rk_offset(uint32_t *buf)$/;"	f	typeref:typename:MBEDTLS_MAYBE_UNUSED unsigned	file:
mbedtls_aes_self_test	library/aes.c	/^int mbedtls_aes_self_test(int verbose)$/;"	f	typeref:typename:int
mbedtls_aes_setkey_dec	library/aes.c	/^int mbedtls_aes_setkey_dec(mbedtls_aes_context *ctx, const unsigned char *key,$/;"	f	typeref:typename:int
mbedtls_aes_setkey_enc	library/aes.c	/^int mbedtls_aes_setkey_enc(mbedtls_aes_context *ctx, const unsigned char *key,$/;"	f	typeref:typename:int
mbedtls_aes_xts_decode_keys	library/aes.c	/^static int mbedtls_aes_xts_decode_keys(const unsigned char *key,$/;"	f	typeref:typename:int	file:
mbedtls_aes_xts_free	library/aes.c	/^void mbedtls_aes_xts_free(mbedtls_aes_xts_context *ctx)$/;"	f	typeref:typename:void
mbedtls_aes_xts_init	library/aes.c	/^void mbedtls_aes_xts_init(mbedtls_aes_xts_context *ctx)$/;"	f	typeref:typename:void
mbedtls_aes_xts_setkey_dec	library/aes.c	/^int mbedtls_aes_xts_setkey_dec(mbedtls_aes_xts_context *ctx,$/;"	f	typeref:typename:int
mbedtls_aes_xts_setkey_enc	library/aes.c	/^int mbedtls_aes_xts_setkey_enc(mbedtls_aes_xts_context *ctx,$/;"	f	typeref:typename:int
mbedtls_aesce_crypt_ecb	library/aesce.c	/^int mbedtls_aesce_crypt_ecb(mbedtls_aes_context *ctx,$/;"	f	typeref:typename:int
mbedtls_aesce_gcm_mult	library/aesce.c	/^void mbedtls_aesce_gcm_mult(unsigned char c[16],$/;"	f	typeref:typename:void
mbedtls_aesce_has_support_impl	library/aesce.c	/^int mbedtls_aesce_has_support_impl(void)$/;"	f	typeref:typename:int
mbedtls_aesce_inverse_key	library/aesce.c	/^void mbedtls_aesce_inverse_key(unsigned char *invkey,$/;"	f	typeref:typename:void
mbedtls_aesce_setkey_enc	library/aesce.c	/^int mbedtls_aesce_setkey_enc(unsigned char *rk,$/;"	f	typeref:typename:int
mbedtls_aesni_crypt_ecb	library/aesni.c	/^int mbedtls_aesni_crypt_ecb(mbedtls_aes_context *ctx,$/;"	f	typeref:typename:int
mbedtls_aesni_gcm_mult	library/aesni.c	/^void mbedtls_aesni_gcm_mult(unsigned char c[16],$/;"	f	typeref:typename:void
mbedtls_aesni_has_support	library/aesni.c	/^int mbedtls_aesni_has_support(unsigned int what)$/;"	f	typeref:typename:int
mbedtls_aesni_inverse_key	library/aesni.c	/^void mbedtls_aesni_inverse_key(unsigned char *invkey,$/;"	f	typeref:typename:void
mbedtls_aesni_setkey_enc	library/aesni.c	/^int mbedtls_aesni_setkey_enc(unsigned char *rk,$/;"	f	typeref:typename:int
mbedtls_aria_crypt_cbc	library/aria.c	/^int mbedtls_aria_crypt_cbc(mbedtls_aria_context *ctx,$/;"	f	typeref:typename:int
mbedtls_aria_crypt_cfb128	library/aria.c	/^int mbedtls_aria_crypt_cfb128(mbedtls_aria_context *ctx,$/;"	f	typeref:typename:int
mbedtls_aria_crypt_ctr	library/aria.c	/^int mbedtls_aria_crypt_ctr(mbedtls_aria_context *ctx,$/;"	f	typeref:typename:int
mbedtls_aria_crypt_ecb	library/aria.c	/^int mbedtls_aria_crypt_ecb(mbedtls_aria_context *ctx,$/;"	f	typeref:typename:int
mbedtls_aria_free	library/aria.c	/^void mbedtls_aria_free(mbedtls_aria_context *ctx)$/;"	f	typeref:typename:void
mbedtls_aria_init	library/aria.c	/^void mbedtls_aria_init(mbedtls_aria_context *ctx)$/;"	f	typeref:typename:void
mbedtls_aria_self_test	library/aria.c	/^int mbedtls_aria_self_test(int verbose)$/;"	f	typeref:typename:int
mbedtls_aria_setkey_dec	library/aria.c	/^int mbedtls_aria_setkey_dec(mbedtls_aria_context *ctx,$/;"	f	typeref:typename:int
mbedtls_aria_setkey_enc	library/aria.c	/^int mbedtls_aria_setkey_enc(mbedtls_aria_context *ctx,$/;"	f	typeref:typename:int
mbedtls_asn1_find_named_data	library/asn1parse.c	/^const mbedtls_asn1_named_data *mbedtls_asn1_find_named_data(const mbedtls_asn1_named_data *list,$/;"	f	typeref:typename:const mbedtls_asn1_named_data *
mbedtls_asn1_free_named_data	library/asn1parse.c	/^void mbedtls_asn1_free_named_data(mbedtls_asn1_named_data *cur)$/;"	f	typeref:typename:void
mbedtls_asn1_free_named_data_list	library/asn1parse.c	/^void mbedtls_asn1_free_named_data_list(mbedtls_asn1_named_data **head)$/;"	f	typeref:typename:void
mbedtls_asn1_free_named_data_list_shallow	library/asn1parse.c	/^void mbedtls_asn1_free_named_data_list_shallow(mbedtls_asn1_named_data *name)$/;"	f	typeref:typename:void
mbedtls_asn1_get_alg	library/asn1parse.c	/^int mbedtls_asn1_get_alg(unsigned char **p,$/;"	f	typeref:typename:int
mbedtls_asn1_get_alg_null	library/asn1parse.c	/^int mbedtls_asn1_get_alg_null(unsigned char **p,$/;"	f	typeref:typename:int
mbedtls_asn1_get_bitstring	library/asn1parse.c	/^int mbedtls_asn1_get_bitstring(unsigned char **p, const unsigned char *end,$/;"	f	typeref:typename:int
mbedtls_asn1_get_bitstring_null	library/asn1parse.c	/^int mbedtls_asn1_get_bitstring_null(unsigned char **p, const unsigned char *end,$/;"	f	typeref:typename:int
mbedtls_asn1_get_bool	library/asn1parse.c	/^int mbedtls_asn1_get_bool(unsigned char **p,$/;"	f	typeref:typename:int
mbedtls_asn1_get_enum	library/asn1parse.c	/^int mbedtls_asn1_get_enum(unsigned char **p,$/;"	f	typeref:typename:int
mbedtls_asn1_get_int	library/asn1parse.c	/^int mbedtls_asn1_get_int(unsigned char **p,$/;"	f	typeref:typename:int
mbedtls_asn1_get_len	library/asn1parse.c	/^int mbedtls_asn1_get_len(unsigned char **p,$/;"	f	typeref:typename:int
mbedtls_asn1_get_mpi	library/asn1parse.c	/^int mbedtls_asn1_get_mpi(unsigned char **p,$/;"	f	typeref:typename:int
mbedtls_asn1_get_sequence_of	library/asn1parse.c	/^int mbedtls_asn1_get_sequence_of(unsigned char **p,$/;"	f	typeref:typename:int
mbedtls_asn1_get_tag	library/asn1parse.c	/^int mbedtls_asn1_get_tag(unsigned char **p,$/;"	f	typeref:typename:int
mbedtls_asn1_sequence_free	library/asn1parse.c	/^void mbedtls_asn1_sequence_free(mbedtls_asn1_sequence *seq)$/;"	f	typeref:typename:void
mbedtls_asn1_store_named_data	library/asn1write.c	/^mbedtls_asn1_named_data *mbedtls_asn1_store_named_data($/;"	f	typeref:typename:mbedtls_asn1_named_data *
mbedtls_asn1_traverse_sequence_of	library/asn1parse.c	/^int mbedtls_asn1_traverse_sequence_of($/;"	f	typeref:typename:int
mbedtls_asn1_write_algorithm_identifier	library/asn1write.c	/^int mbedtls_asn1_write_algorithm_identifier(unsigned char **p, const unsigned char *start,$/;"	f	typeref:typename:int
mbedtls_asn1_write_algorithm_identifier_ext	library/asn1write.c	/^int mbedtls_asn1_write_algorithm_identifier_ext(unsigned char **p, const unsigned char *start,$/;"	f	typeref:typename:int
mbedtls_asn1_write_bitstring	library/asn1write.c	/^int mbedtls_asn1_write_bitstring(unsigned char **p, const unsigned char *start,$/;"	f	typeref:typename:int
mbedtls_asn1_write_bool	library/asn1write.c	/^int mbedtls_asn1_write_bool(unsigned char **p, const unsigned char *start, int boolean)$/;"	f	typeref:typename:int
mbedtls_asn1_write_enum	library/asn1write.c	/^int mbedtls_asn1_write_enum(unsigned char **p, const unsigned char *start, int val)$/;"	f	typeref:typename:int
mbedtls_asn1_write_ia5_string	library/asn1write.c	/^int mbedtls_asn1_write_ia5_string(unsigned char **p, const unsigned char *start,$/;"	f	typeref:typename:int
mbedtls_asn1_write_int	library/asn1write.c	/^int mbedtls_asn1_write_int(unsigned char **p, const unsigned char *start, int val)$/;"	f	typeref:typename:int
mbedtls_asn1_write_len	library/asn1write.c	/^int mbedtls_asn1_write_len(unsigned char **p, const unsigned char *start, size_t len)$/;"	f	typeref:typename:int
mbedtls_asn1_write_len_and_tag	library/asn1write.c	/^static int mbedtls_asn1_write_len_and_tag(unsigned char **p,$/;"	f	typeref:typename:int	file:
mbedtls_asn1_write_mpi	library/asn1write.c	/^int mbedtls_asn1_write_mpi(unsigned char **p, const unsigned char *start, const mbedtls_mpi *X)$/;"	f	typeref:typename:int
mbedtls_asn1_write_named_bitstring	library/asn1write.c	/^int mbedtls_asn1_write_named_bitstring(unsigned char **p,$/;"	f	typeref:typename:int
mbedtls_asn1_write_null	library/asn1write.c	/^int mbedtls_asn1_write_null(unsigned char **p, const unsigned char *start)$/;"	f	typeref:typename:int
mbedtls_asn1_write_octet_string	library/asn1write.c	/^int mbedtls_asn1_write_octet_string(unsigned char **p, const unsigned char *start,$/;"	f	typeref:typename:int
mbedtls_asn1_write_oid	library/asn1write.c	/^int mbedtls_asn1_write_oid(unsigned char **p, const unsigned char *start,$/;"	f	typeref:typename:int
mbedtls_asn1_write_printable_string	library/asn1write.c	/^int mbedtls_asn1_write_printable_string(unsigned char **p, const unsigned char *start,$/;"	f	typeref:typename:int
mbedtls_asn1_write_raw_buffer	library/asn1write.c	/^int mbedtls_asn1_write_raw_buffer(unsigned char **p, const unsigned char *start,$/;"	f	typeref:typename:int
mbedtls_asn1_write_tag	library/asn1write.c	/^int mbedtls_asn1_write_tag(unsigned char **p, const unsigned char *start, unsigned char tag)$/;"	f	typeref:typename:int
mbedtls_asn1_write_tagged_string	library/asn1write.c	/^int mbedtls_asn1_write_tagged_string(unsigned char **p, const unsigned char *start, int tag,$/;"	f	typeref:typename:int
mbedtls_asn1_write_utf8_string	library/asn1write.c	/^int mbedtls_asn1_write_utf8_string(unsigned char **p, const unsigned char *start,$/;"	f	typeref:typename:int
mbedtls_base64_decode	library/base64.c	/^int mbedtls_base64_decode(unsigned char *dst, size_t dlen, size_t *olen,$/;"	f	typeref:typename:int
mbedtls_base64_encode	library/base64.c	/^int mbedtls_base64_encode(unsigned char *dst, size_t dlen, size_t *olen,$/;"	f	typeref:typename:int
mbedtls_base64_self_test	library/base64.c	/^int mbedtls_base64_self_test(int verbose)$/;"	f	typeref:typename:int
mbedtls_block_cipher_encrypt	library/block_cipher.c	/^int mbedtls_block_cipher_encrypt(mbedtls_block_cipher_context_t *ctx,$/;"	f	typeref:typename:int
mbedtls_block_cipher_free	library/block_cipher.c	/^void mbedtls_block_cipher_free(mbedtls_block_cipher_context_t *ctx)$/;"	f	typeref:typename:void
mbedtls_block_cipher_init	library/block_cipher_internal.h	/^static inline void mbedtls_block_cipher_init(mbedtls_block_cipher_context_t *ctx)$/;"	f	typeref:typename:void
mbedtls_block_cipher_setkey	library/block_cipher.c	/^int mbedtls_block_cipher_setkey(mbedtls_block_cipher_context_t *ctx,$/;"	f	typeref:typename:int
mbedtls_block_cipher_setup	library/block_cipher.c	/^int mbedtls_block_cipher_setup(mbedtls_block_cipher_context_t *ctx,$/;"	f	typeref:typename:int
mbedtls_bswap16	library/alignment.h	/^static inline uint16_t mbedtls_bswap16(uint16_t x)$/;"	f	typeref:typename:uint16_t
mbedtls_bswap32	library/alignment.h	/^static inline uint32_t mbedtls_bswap32(uint32_t x)$/;"	f	typeref:typename:uint32_t
mbedtls_bswap64	library/alignment.h	/^static inline uint64_t mbedtls_bswap64(uint64_t x)$/;"	f	typeref:typename:uint64_t
mbedtls_buffer_offset	library/common.h	/^static inline unsigned char *mbedtls_buffer_offset($/;"	f	typeref:typename:unsigned char *
mbedtls_buffer_offset_const	library/common.h	/^static inline const unsigned char *mbedtls_buffer_offset_const($/;"	f	typeref:typename:const unsigned char *
mbedtls_calloc	library/platform.c	/^void *mbedtls_calloc(size_t nmemb, size_t size)$/;"	f	typeref:typename:void *
mbedtls_camellia_crypt_cbc	library/camellia.c	/^int mbedtls_camellia_crypt_cbc(mbedtls_camellia_context *ctx,$/;"	f	typeref:typename:int
mbedtls_camellia_crypt_cfb128	library/camellia.c	/^int mbedtls_camellia_crypt_cfb128(mbedtls_camellia_context *ctx,$/;"	f	typeref:typename:int
mbedtls_camellia_crypt_ctr	library/camellia.c	/^int mbedtls_camellia_crypt_ctr(mbedtls_camellia_context *ctx,$/;"	f	typeref:typename:int
mbedtls_camellia_crypt_ecb	library/camellia.c	/^int mbedtls_camellia_crypt_ecb(mbedtls_camellia_context *ctx,$/;"	f	typeref:typename:int
mbedtls_camellia_free	library/camellia.c	/^void mbedtls_camellia_free(mbedtls_camellia_context *ctx)$/;"	f	typeref:typename:void
mbedtls_camellia_init	library/camellia.c	/^void mbedtls_camellia_init(mbedtls_camellia_context *ctx)$/;"	f	typeref:typename:void
mbedtls_camellia_self_test	library/camellia.c	/^int mbedtls_camellia_self_test(int verbose)$/;"	f	typeref:typename:int
mbedtls_camellia_setkey_dec	library/camellia.c	/^int mbedtls_camellia_setkey_dec(mbedtls_camellia_context *ctx,$/;"	f	typeref:typename:int
mbedtls_camellia_setkey_enc	library/camellia.c	/^int mbedtls_camellia_setkey_enc(mbedtls_camellia_context *ctx,$/;"	f	typeref:typename:int
mbedtls_ccm_auth_decrypt	library/ccm.c	/^int mbedtls_ccm_auth_decrypt(mbedtls_ccm_context *ctx, size_t length,$/;"	f	typeref:typename:int
mbedtls_ccm_clear_state	library/ccm.c	/^static void mbedtls_ccm_clear_state(mbedtls_ccm_context *ctx)$/;"	f	typeref:typename:void	file:
mbedtls_ccm_compare_tags	library/ccm.c	/^static int mbedtls_ccm_compare_tags(const unsigned char *tag1,$/;"	f	typeref:typename:int	file:
mbedtls_ccm_crypt	library/ccm.c	/^static int mbedtls_ccm_crypt(mbedtls_ccm_context *ctx,$/;"	f	typeref:typename:int	file:
mbedtls_ccm_encrypt_and_tag	library/ccm.c	/^int mbedtls_ccm_encrypt_and_tag(mbedtls_ccm_context *ctx, size_t length,$/;"	f	typeref:typename:int
mbedtls_ccm_finish	library/ccm.c	/^int mbedtls_ccm_finish(mbedtls_ccm_context *ctx,$/;"	f	typeref:typename:int
mbedtls_ccm_free	library/ccm.c	/^void mbedtls_ccm_free(mbedtls_ccm_context *ctx)$/;"	f	typeref:typename:void
mbedtls_ccm_init	library/ccm.c	/^void mbedtls_ccm_init(mbedtls_ccm_context *ctx)$/;"	f	typeref:typename:void
mbedtls_ccm_self_test	library/ccm.c	/^int mbedtls_ccm_self_test(int verbose)$/;"	f	typeref:typename:int
mbedtls_ccm_set_lengths	library/ccm.c	/^int mbedtls_ccm_set_lengths(mbedtls_ccm_context *ctx,$/;"	f	typeref:typename:int
mbedtls_ccm_setkey	library/ccm.c	/^int mbedtls_ccm_setkey(mbedtls_ccm_context *ctx,$/;"	f	typeref:typename:int
mbedtls_ccm_star_auth_decrypt	library/ccm.c	/^int mbedtls_ccm_star_auth_decrypt(mbedtls_ccm_context *ctx, size_t length,$/;"	f	typeref:typename:int
mbedtls_ccm_star_encrypt_and_tag	library/ccm.c	/^int mbedtls_ccm_star_encrypt_and_tag(mbedtls_ccm_context *ctx, size_t length,$/;"	f	typeref:typename:int
mbedtls_ccm_starts	library/ccm.c	/^int mbedtls_ccm_starts(mbedtls_ccm_context *ctx,$/;"	f	typeref:typename:int
mbedtls_ccm_update	library/ccm.c	/^int mbedtls_ccm_update(mbedtls_ccm_context *ctx,$/;"	f	typeref:typename:int
mbedtls_ccm_update_ad	library/ccm.c	/^int mbedtls_ccm_update_ad(mbedtls_ccm_context *ctx,$/;"	f	typeref:typename:int
mbedtls_chacha20_crypt	library/chacha20.c	/^int mbedtls_chacha20_crypt(const unsigned char key[32],$/;"	f	typeref:typename:int
mbedtls_chacha20_free	library/chacha20.c	/^void mbedtls_chacha20_free(mbedtls_chacha20_context *ctx)$/;"	f	typeref:typename:void
mbedtls_chacha20_init	library/chacha20.c	/^void mbedtls_chacha20_init(mbedtls_chacha20_context *ctx)$/;"	f	typeref:typename:void
mbedtls_chacha20_self_test	library/chacha20.c	/^int mbedtls_chacha20_self_test(int verbose)$/;"	f	typeref:typename:int
mbedtls_chacha20_setkey	library/chacha20.c	/^int mbedtls_chacha20_setkey(mbedtls_chacha20_context *ctx,$/;"	f	typeref:typename:int
mbedtls_chacha20_starts	library/chacha20.c	/^int mbedtls_chacha20_starts(mbedtls_chacha20_context *ctx,$/;"	f	typeref:typename:int
mbedtls_chacha20_update	library/chacha20.c	/^int mbedtls_chacha20_update(mbedtls_chacha20_context *ctx,$/;"	f	typeref:typename:int
mbedtls_chachapoly_auth_decrypt	library/chachapoly.c	/^int mbedtls_chachapoly_auth_decrypt(mbedtls_chachapoly_context *ctx,$/;"	f	typeref:typename:int
mbedtls_chachapoly_encrypt_and_tag	library/chachapoly.c	/^int mbedtls_chachapoly_encrypt_and_tag(mbedtls_chachapoly_context *ctx,$/;"	f	typeref:typename:int
mbedtls_chachapoly_finish	library/chachapoly.c	/^int mbedtls_chachapoly_finish(mbedtls_chachapoly_context *ctx,$/;"	f	typeref:typename:int
mbedtls_chachapoly_free	library/chachapoly.c	/^void mbedtls_chachapoly_free(mbedtls_chachapoly_context *ctx)$/;"	f	typeref:typename:void
mbedtls_chachapoly_init	library/chachapoly.c	/^void mbedtls_chachapoly_init(mbedtls_chachapoly_context *ctx)$/;"	f	typeref:typename:void
mbedtls_chachapoly_self_test	library/chachapoly.c	/^int mbedtls_chachapoly_self_test(int verbose)$/;"	f	typeref:typename:int
mbedtls_chachapoly_setkey	library/chachapoly.c	/^int mbedtls_chachapoly_setkey(mbedtls_chachapoly_context *ctx,$/;"	f	typeref:typename:int
mbedtls_chachapoly_starts	library/chachapoly.c	/^int mbedtls_chachapoly_starts(mbedtls_chachapoly_context *ctx,$/;"	f	typeref:typename:int
mbedtls_chachapoly_update	library/chachapoly.c	/^int mbedtls_chachapoly_update(mbedtls_chachapoly_context *ctx,$/;"	f	typeref:typename:int
mbedtls_chachapoly_update_aad	library/chachapoly.c	/^int mbedtls_chachapoly_update_aad(mbedtls_chachapoly_context *ctx,$/;"	f	typeref:typename:int
mbedtls_cipher_aead_decrypt	library/cipher.c	/^static int mbedtls_cipher_aead_decrypt(mbedtls_cipher_context_t *ctx,$/;"	f	typeref:typename:int	file:
mbedtls_cipher_aead_encrypt	library/cipher.c	/^static int mbedtls_cipher_aead_encrypt(mbedtls_cipher_context_t *ctx,$/;"	f	typeref:typename:int	file:
mbedtls_cipher_auth_decrypt_ext	library/cipher.c	/^int mbedtls_cipher_auth_decrypt_ext(mbedtls_cipher_context_t *ctx,$/;"	f	typeref:typename:int
mbedtls_cipher_auth_encrypt_ext	library/cipher.c	/^int mbedtls_cipher_auth_encrypt_ext(mbedtls_cipher_context_t *ctx,$/;"	f	typeref:typename:int
mbedtls_cipher_check_tag	library/cipher.c	/^int mbedtls_cipher_check_tag(mbedtls_cipher_context_t *ctx,$/;"	f	typeref:typename:int
mbedtls_cipher_cmac	library/cmac.c	/^int mbedtls_cipher_cmac(const mbedtls_cipher_info_t *cipher_info,$/;"	f	typeref:typename:int
mbedtls_cipher_cmac_finish	library/cmac.c	/^int mbedtls_cipher_cmac_finish(mbedtls_cipher_context_t *ctx,$/;"	f	typeref:typename:int
mbedtls_cipher_cmac_reset	library/cmac.c	/^int mbedtls_cipher_cmac_reset(mbedtls_cipher_context_t *ctx)$/;"	f	typeref:typename:int
mbedtls_cipher_cmac_starts	library/cmac.c	/^int mbedtls_cipher_cmac_starts(mbedtls_cipher_context_t *ctx,$/;"	f	typeref:typename:int
mbedtls_cipher_cmac_update	library/cmac.c	/^int mbedtls_cipher_cmac_update(mbedtls_cipher_context_t *ctx,$/;"	f	typeref:typename:int
mbedtls_cipher_crypt	library/cipher.c	/^int mbedtls_cipher_crypt(mbedtls_cipher_context_t *ctx,$/;"	f	typeref:typename:int
mbedtls_cipher_finish	library/cipher.c	/^int mbedtls_cipher_finish(mbedtls_cipher_context_t *ctx,$/;"	f	typeref:typename:int
mbedtls_cipher_free	library/cipher.c	/^void mbedtls_cipher_free(mbedtls_cipher_context_t *ctx)$/;"	f	typeref:typename:void
mbedtls_cipher_get_base	library/cipher.c	/^static inline const mbedtls_cipher_base_t *mbedtls_cipher_get_base($/;"	f	typeref:typename:const mbedtls_cipher_base_t *	file:
mbedtls_cipher_get_block_size	include/mbedtls/cipher.h	/^static inline unsigned int mbedtls_cipher_get_block_size($/;"	f	typeref:typename:unsigned int
mbedtls_cipher_get_cipher_mode	include/mbedtls/cipher.h	/^static inline mbedtls_cipher_mode_t mbedtls_cipher_get_cipher_mode($/;"	f	typeref:typename:mbedtls_cipher_mode_t
mbedtls_cipher_get_iv_size	include/mbedtls/cipher.h	/^static inline int mbedtls_cipher_get_iv_size($/;"	f	typeref:typename:int
mbedtls_cipher_get_key_bitlen	include/mbedtls/cipher.h	/^static inline int mbedtls_cipher_get_key_bitlen($/;"	f	typeref:typename:int
mbedtls_cipher_get_name	include/mbedtls/cipher.h	/^static inline const char *mbedtls_cipher_get_name($/;"	f	typeref:typename:const char *
mbedtls_cipher_get_operation	include/mbedtls/cipher.h	/^static inline mbedtls_operation_t mbedtls_cipher_get_operation($/;"	f	typeref:typename:mbedtls_operation_t
mbedtls_cipher_get_type	include/mbedtls/cipher.h	/^static inline mbedtls_cipher_type_t mbedtls_cipher_get_type($/;"	f	typeref:typename:mbedtls_cipher_type_t
mbedtls_cipher_info_from_psa	library/psa_crypto_cipher.c	/^const mbedtls_cipher_info_t *mbedtls_cipher_info_from_psa($/;"	f	typeref:typename:const mbedtls_cipher_info_t *
mbedtls_cipher_info_from_string	library/cipher.c	/^const mbedtls_cipher_info_t *mbedtls_cipher_info_from_string($/;"	f	typeref:typename:const mbedtls_cipher_info_t *
mbedtls_cipher_info_from_type	library/cipher.c	/^const mbedtls_cipher_info_t *mbedtls_cipher_info_from_type($/;"	f	typeref:typename:const mbedtls_cipher_info_t *
mbedtls_cipher_info_from_values	library/cipher.c	/^const mbedtls_cipher_info_t *mbedtls_cipher_info_from_values($/;"	f	typeref:typename:const mbedtls_cipher_info_t *
mbedtls_cipher_info_get_block_size	include/mbedtls/cipher.h	/^static inline size_t mbedtls_cipher_info_get_block_size($/;"	f	typeref:typename:size_t
mbedtls_cipher_info_get_iv_size	include/mbedtls/cipher.h	/^static inline size_t mbedtls_cipher_info_get_iv_size($/;"	f	typeref:typename:size_t
mbedtls_cipher_info_get_key_bitlen	include/mbedtls/cipher.h	/^static inline size_t mbedtls_cipher_info_get_key_bitlen($/;"	f	typeref:typename:size_t
mbedtls_cipher_info_get_mode	include/mbedtls/cipher.h	/^static inline mbedtls_cipher_mode_t mbedtls_cipher_info_get_mode($/;"	f	typeref:typename:mbedtls_cipher_mode_t
mbedtls_cipher_info_get_name	include/mbedtls/cipher.h	/^static inline const char *mbedtls_cipher_info_get_name($/;"	f	typeref:typename:const char *
mbedtls_cipher_info_get_type	include/mbedtls/cipher.h	/^static inline mbedtls_cipher_type_t mbedtls_cipher_info_get_type($/;"	f	typeref:typename:mbedtls_cipher_type_t
mbedtls_cipher_info_has_variable_iv_size	include/mbedtls/cipher.h	/^static inline int mbedtls_cipher_info_has_variable_iv_size($/;"	f	typeref:typename:int
mbedtls_cipher_info_has_variable_key_bitlen	include/mbedtls/cipher.h	/^static inline int mbedtls_cipher_info_has_variable_key_bitlen($/;"	f	typeref:typename:int
mbedtls_cipher_init	library/cipher.c	/^void mbedtls_cipher_init(mbedtls_cipher_context_t *ctx)$/;"	f	typeref:typename:void
mbedtls_cipher_list	library/cipher.c	/^const int *mbedtls_cipher_list(void)$/;"	f	typeref:typename:const int *
mbedtls_cipher_reset	library/cipher.c	/^int mbedtls_cipher_reset(mbedtls_cipher_context_t *ctx)$/;"	f	typeref:typename:int
mbedtls_cipher_set_iv	library/cipher.c	/^int mbedtls_cipher_set_iv(mbedtls_cipher_context_t *ctx,$/;"	f	typeref:typename:int
mbedtls_cipher_set_padding_mode	library/cipher.c	/^int mbedtls_cipher_set_padding_mode(mbedtls_cipher_context_t *ctx,$/;"	f	typeref:typename:int
mbedtls_cipher_setkey	library/cipher.c	/^int mbedtls_cipher_setkey(mbedtls_cipher_context_t *ctx,$/;"	f	typeref:typename:int
mbedtls_cipher_setup	library/cipher.c	/^int mbedtls_cipher_setup(mbedtls_cipher_context_t *ctx,$/;"	f	typeref:typename:int
mbedtls_cipher_setup_psa	library/cipher.c	/^int mbedtls_cipher_setup_psa(mbedtls_cipher_context_t *ctx,$/;"	f	typeref:typename:int
mbedtls_cipher_update	library/cipher.c	/^int mbedtls_cipher_update(mbedtls_cipher_context_t *ctx, const unsigned char *input,$/;"	f	typeref:typename:int
mbedtls_cipher_update_ad	library/cipher.c	/^int mbedtls_cipher_update_ad(mbedtls_cipher_context_t *ctx,$/;"	f	typeref:typename:int
mbedtls_cipher_validate_values	library/psa_crypto_cipher.c	/^static psa_status_t mbedtls_cipher_validate_values($/;"	f	typeref:typename:psa_status_t	file:
mbedtls_cipher_values_from_psa	library/psa_crypto_cipher.c	/^psa_status_t mbedtls_cipher_values_from_psa($/;"	f	typeref:typename:psa_status_t
mbedtls_cipher_write_tag	library/cipher.c	/^int mbedtls_cipher_write_tag(mbedtls_cipher_context_t *ctx,$/;"	f	typeref:typename:int
mbedtls_cmac_self_test	library/cmac.c	/^int mbedtls_cmac_self_test(int verbose)$/;"	f	typeref:typename:int
mbedtls_ct_base64_dec_value	library/base64.c	/^signed char mbedtls_ct_base64_dec_value(unsigned char c)$/;"	f	typeref:typename:MBEDTLS_STATIC_TESTABLE signed char
mbedtls_ct_base64_enc_char	library/base64.c	/^unsigned char mbedtls_ct_base64_enc_char(unsigned char value)$/;"	f	typeref:typename:MBEDTLS_STATIC_TESTABLE unsigned char
mbedtls_ct_bool	library/constant_time_impl.h	/^static inline mbedtls_ct_condition_t mbedtls_ct_bool(mbedtls_ct_uint_t x)$/;"	f	typeref:typename:mbedtls_ct_condition_t
mbedtls_ct_bool_and	library/constant_time_impl.h	/^static inline mbedtls_ct_condition_t mbedtls_ct_bool_and(mbedtls_ct_condition_t x,$/;"	f	typeref:typename:mbedtls_ct_condition_t
mbedtls_ct_bool_if	library/constant_time_impl.h	/^static inline mbedtls_ct_condition_t mbedtls_ct_bool_if(mbedtls_ct_condition_t condition,$/;"	f	typeref:typename:mbedtls_ct_condition_t
mbedtls_ct_bool_if_else_0	library/constant_time_impl.h	/^static inline mbedtls_ct_condition_t mbedtls_ct_bool_if_else_0(mbedtls_ct_condition_t condition,$/;"	f	typeref:typename:mbedtls_ct_condition_t
mbedtls_ct_bool_ne	library/constant_time_impl.h	/^static inline mbedtls_ct_condition_t mbedtls_ct_bool_ne(mbedtls_ct_condition_t x,$/;"	f	typeref:typename:mbedtls_ct_condition_t
mbedtls_ct_bool_not	library/constant_time_impl.h	/^static inline mbedtls_ct_condition_t mbedtls_ct_bool_not(mbedtls_ct_condition_t x)$/;"	f	typeref:typename:mbedtls_ct_condition_t
mbedtls_ct_bool_or	library/constant_time_impl.h	/^static inline mbedtls_ct_condition_t mbedtls_ct_bool_or(mbedtls_ct_condition_t x,$/;"	f	typeref:typename:mbedtls_ct_condition_t
mbedtls_ct_compiler_opaque	library/constant_time_impl.h	/^static inline mbedtls_ct_uint_t mbedtls_ct_compiler_opaque(mbedtls_ct_uint_t x)$/;"	f	typeref:typename:mbedtls_ct_uint_t
mbedtls_ct_error_if	library/constant_time_impl.h	/^static inline int mbedtls_ct_error_if(mbedtls_ct_condition_t condition, int if1, int if0)$/;"	f	typeref:typename:int
mbedtls_ct_error_if_else_0	library/constant_time_impl.h	/^static inline int mbedtls_ct_error_if_else_0(mbedtls_ct_condition_t condition, int if1)$/;"	f	typeref:typename:int
mbedtls_ct_hmac	library/ssl_msg.c	/^int mbedtls_ct_hmac(mbedtls_md_context_t *ctx,$/;"	f	typeref:typename:MBEDTLS_STATIC_TESTABLE int
mbedtls_ct_hmac	library/ssl_msg.c	/^int mbedtls_ct_hmac(mbedtls_svc_key_id_t key,$/;"	f	typeref:typename:MBEDTLS_STATIC_TESTABLE int
mbedtls_ct_if	library/constant_time_impl.h	/^static inline mbedtls_ct_uint_t mbedtls_ct_if(mbedtls_ct_condition_t condition,$/;"	f	typeref:typename:mbedtls_ct_uint_t
mbedtls_ct_memcmp	library/constant_time.c	/^int mbedtls_ct_memcmp(const void *a,$/;"	f	typeref:typename:int
mbedtls_ct_memcmp_partial	library/constant_time.c	/^int mbedtls_ct_memcmp_partial(const void *a,$/;"	f	typeref:typename:int
mbedtls_ct_memcpy_if	library/constant_time.c	/^void mbedtls_ct_memcpy_if(mbedtls_ct_condition_t condition,$/;"	f	typeref:typename:void
mbedtls_ct_memcpy_offset	library/constant_time.c	/^void mbedtls_ct_memcpy_offset(unsigned char *dest,$/;"	f	typeref:typename:void
mbedtls_ct_memmove_left	library/constant_time.c	/^void mbedtls_ct_memmove_left(void *start, size_t total, size_t offset)$/;"	f	typeref:typename:void
mbedtls_ct_mpi_uint_if	library/constant_time_impl.h	/^static inline mbedtls_mpi_uint mbedtls_ct_mpi_uint_if(mbedtls_ct_condition_t condition,$/;"	f	typeref:typename:mbedtls_mpi_uint
mbedtls_ct_mpi_uint_if_else_0	library/constant_time_impl.h	/^static inline mbedtls_mpi_uint mbedtls_ct_mpi_uint_if_else_0(mbedtls_ct_condition_t condition,$/;"	f	typeref:typename:mbedtls_mpi_uint
mbedtls_ct_rsaes_pkcs1_v15_unpadding	library/rsa.c	/^static int mbedtls_ct_rsaes_pkcs1_v15_unpadding(unsigned char *input,$/;"	f	typeref:typename:int	file:
mbedtls_ct_size_if	library/constant_time_impl.h	/^static inline size_t mbedtls_ct_size_if(mbedtls_ct_condition_t condition,$/;"	f	typeref:typename:size_t
mbedtls_ct_size_if_else_0	library/constant_time_impl.h	/^static inline size_t mbedtls_ct_size_if_else_0(mbedtls_ct_condition_t condition, size_t if1)$/;"	f	typeref:typename:size_t
mbedtls_ct_uchar_in_range_if	library/constant_time_impl.h	/^static inline unsigned char mbedtls_ct_uchar_in_range_if(unsigned char low,$/;"	f	typeref:typename:unsigned char
mbedtls_ct_uint_eq	library/constant_time_impl.h	/^static inline mbedtls_ct_condition_t mbedtls_ct_uint_eq(mbedtls_ct_uint_t x,$/;"	f	typeref:typename:mbedtls_ct_condition_t
mbedtls_ct_uint_ge	library/constant_time_impl.h	/^static inline mbedtls_ct_condition_t mbedtls_ct_uint_ge(mbedtls_ct_uint_t x,$/;"	f	typeref:typename:mbedtls_ct_condition_t
mbedtls_ct_uint_gt	library/constant_time_impl.h	/^static inline mbedtls_ct_condition_t mbedtls_ct_uint_gt(mbedtls_ct_uint_t x,$/;"	f	typeref:typename:mbedtls_ct_condition_t
mbedtls_ct_uint_if	library/constant_time_impl.h	/^static inline unsigned mbedtls_ct_uint_if(mbedtls_ct_condition_t condition,$/;"	f	typeref:typename:unsigned
mbedtls_ct_uint_if_else_0	library/constant_time_impl.h	/^static inline unsigned mbedtls_ct_uint_if_else_0(mbedtls_ct_condition_t condition, unsigned if1)$/;"	f	typeref:typename:unsigned
mbedtls_ct_uint_le	library/constant_time_impl.h	/^static inline mbedtls_ct_condition_t mbedtls_ct_uint_le(mbedtls_ct_uint_t x,$/;"	f	typeref:typename:mbedtls_ct_condition_t
mbedtls_ct_uint_lt	library/constant_time_impl.h	/^static inline mbedtls_ct_condition_t mbedtls_ct_uint_lt(mbedtls_ct_uint_t x, mbedtls_ct_uint_t y/;"	f	typeref:typename:mbedtls_ct_condition_t
mbedtls_ct_uint_ne	library/constant_time_impl.h	/^static inline mbedtls_ct_condition_t mbedtls_ct_uint_ne(mbedtls_ct_uint_t x, mbedtls_ct_uint_t y/;"	f	typeref:typename:mbedtls_ct_condition_t
mbedtls_ct_zeroize_if	library/constant_time.c	/^void mbedtls_ct_zeroize_if(mbedtls_ct_condition_t condition, void *buf, size_t len)$/;"	f	typeref:typename:void
mbedtls_ctr_drbg_free	library/ctr_drbg.c	/^void mbedtls_ctr_drbg_free(mbedtls_ctr_drbg_context *ctx)$/;"	f	typeref:typename:void
mbedtls_ctr_drbg_init	library/ctr_drbg.c	/^void mbedtls_ctr_drbg_init(mbedtls_ctr_drbg_context *ctx)$/;"	f	typeref:typename:void
mbedtls_ctr_drbg_random	library/ctr_drbg.c	/^int mbedtls_ctr_drbg_random(void *p_rng, unsigned char *output,$/;"	f	typeref:typename:int
mbedtls_ctr_drbg_random_with_add	library/ctr_drbg.c	/^int mbedtls_ctr_drbg_random_with_add(void *p_rng,$/;"	f	typeref:typename:int
mbedtls_ctr_drbg_reseed	library/ctr_drbg.c	/^int mbedtls_ctr_drbg_reseed(mbedtls_ctr_drbg_context *ctx,$/;"	f	typeref:typename:int
mbedtls_ctr_drbg_reseed_internal	library/ctr_drbg.c	/^static int mbedtls_ctr_drbg_reseed_internal(mbedtls_ctr_drbg_context *ctx,$/;"	f	typeref:typename:int	file:
mbedtls_ctr_drbg_seed	library/ctr_drbg.c	/^int mbedtls_ctr_drbg_seed(mbedtls_ctr_drbg_context *ctx,$/;"	f	typeref:typename:int
mbedtls_ctr_drbg_self_test	library/ctr_drbg.c	/^int mbedtls_ctr_drbg_self_test(int verbose)$/;"	f	typeref:typename:int
mbedtls_ctr_drbg_set_entropy_len	library/ctr_drbg.c	/^void mbedtls_ctr_drbg_set_entropy_len(mbedtls_ctr_drbg_context *ctx,$/;"	f	typeref:typename:void
mbedtls_ctr_drbg_set_nonce_len	library/ctr_drbg.c	/^int mbedtls_ctr_drbg_set_nonce_len(mbedtls_ctr_drbg_context *ctx,$/;"	f	typeref:typename:int
mbedtls_ctr_drbg_set_prediction_resistance	library/ctr_drbg.c	/^void mbedtls_ctr_drbg_set_prediction_resistance(mbedtls_ctr_drbg_context *ctx,$/;"	f	typeref:typename:void
mbedtls_ctr_drbg_set_reseed_interval	library/ctr_drbg.c	/^void mbedtls_ctr_drbg_set_reseed_interval(mbedtls_ctr_drbg_context *ctx,$/;"	f	typeref:typename:void
mbedtls_ctr_drbg_update	library/ctr_drbg.c	/^int mbedtls_ctr_drbg_update(mbedtls_ctr_drbg_context *ctx,$/;"	f	typeref:typename:int
mbedtls_ctr_drbg_update_seed_file	library/ctr_drbg.c	/^int mbedtls_ctr_drbg_update_seed_file(mbedtls_ctr_drbg_context *ctx,$/;"	f	typeref:typename:int
mbedtls_ctr_drbg_write_seed_file	library/ctr_drbg.c	/^int mbedtls_ctr_drbg_write_seed_file(mbedtls_ctr_drbg_context *ctx,$/;"	f	typeref:typename:int
mbedtls_debug_print_buf	library/debug.c	/^void mbedtls_debug_print_buf(const mbedtls_ssl_context *ssl, int level,$/;"	f	typeref:typename:void
mbedtls_debug_print_crt	library/debug.c	/^void mbedtls_debug_print_crt(const mbedtls_ssl_context *ssl, int level,$/;"	f	typeref:typename:void
mbedtls_debug_print_ec_coord	library/debug.c	/^static void mbedtls_debug_print_ec_coord(const mbedtls_ssl_context *ssl, int level,$/;"	f	typeref:typename:void	file:
mbedtls_debug_print_ecp	library/debug.c	/^void mbedtls_debug_print_ecp(const mbedtls_ssl_context *ssl, int level,$/;"	f	typeref:typename:void
mbedtls_debug_print_mpi	library/debug.c	/^void mbedtls_debug_print_mpi(const mbedtls_ssl_context *ssl, int level,$/;"	f	typeref:typename:void
mbedtls_debug_print_msg	library/debug.c	/^void mbedtls_debug_print_msg(const mbedtls_ssl_context *ssl, int level,$/;"	f	typeref:typename:MBEDTLS_PRINTF_ATTRIBUTE (5,6)void
mbedtls_debug_print_psa_ec	library/debug.c	/^void mbedtls_debug_print_psa_ec(const mbedtls_ssl_context *ssl, int level,$/;"	f	typeref:typename:void
mbedtls_debug_print_ret	library/debug.c	/^void mbedtls_debug_print_ret(const mbedtls_ssl_context *ssl, int level,$/;"	f	typeref:typename:void
mbedtls_debug_printf_ecdh	library/debug.c	/^void mbedtls_debug_printf_ecdh(const mbedtls_ssl_context *ssl, int level,$/;"	f	typeref:typename:void
mbedtls_debug_printf_ecdh_internal	library/debug.c	/^static void mbedtls_debug_printf_ecdh_internal(const mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:void	file:
mbedtls_debug_set_threshold	library/debug.c	/^void mbedtls_debug_set_threshold(int threshold)$/;"	f	typeref:typename:void
mbedtls_des3_crypt_cbc	library/des.c	/^int mbedtls_des3_crypt_cbc(mbedtls_des3_context *ctx,$/;"	f	typeref:typename:int
mbedtls_des3_crypt_ecb	library/des.c	/^int mbedtls_des3_crypt_ecb(mbedtls_des3_context *ctx,$/;"	f	typeref:typename:int
mbedtls_des3_free	library/des.c	/^void mbedtls_des3_free(mbedtls_des3_context *ctx)$/;"	f	typeref:typename:void
mbedtls_des3_init	library/des.c	/^void mbedtls_des3_init(mbedtls_des3_context *ctx)$/;"	f	typeref:typename:void
mbedtls_des3_set2key_dec	library/des.c	/^int mbedtls_des3_set2key_dec(mbedtls_des3_context *ctx,$/;"	f	typeref:typename:int
mbedtls_des3_set2key_enc	library/des.c	/^int mbedtls_des3_set2key_enc(mbedtls_des3_context *ctx,$/;"	f	typeref:typename:int
mbedtls_des3_set3key_dec	library/des.c	/^int mbedtls_des3_set3key_dec(mbedtls_des3_context *ctx,$/;"	f	typeref:typename:int
mbedtls_des3_set3key_enc	library/des.c	/^int mbedtls_des3_set3key_enc(mbedtls_des3_context *ctx,$/;"	f	typeref:typename:int
mbedtls_des_crypt_cbc	library/des.c	/^int mbedtls_des_crypt_cbc(mbedtls_des_context *ctx,$/;"	f	typeref:typename:int
mbedtls_des_crypt_ecb	library/des.c	/^int mbedtls_des_crypt_ecb(mbedtls_des_context *ctx,$/;"	f	typeref:typename:int
mbedtls_des_free	library/des.c	/^void mbedtls_des_free(mbedtls_des_context *ctx)$/;"	f	typeref:typename:void
mbedtls_des_init	library/des.c	/^void mbedtls_des_init(mbedtls_des_context *ctx)$/;"	f	typeref:typename:void
mbedtls_des_key_check_key_parity	library/des.c	/^int mbedtls_des_key_check_key_parity(const unsigned char key[MBEDTLS_DES_KEY_SIZE])$/;"	f	typeref:typename:int
mbedtls_des_key_check_weak	library/des.c	/^int mbedtls_des_key_check_weak(const unsigned char key[MBEDTLS_DES_KEY_SIZE])$/;"	f	typeref:typename:int
mbedtls_des_key_set_parity	library/des.c	/^void mbedtls_des_key_set_parity(unsigned char key[MBEDTLS_DES_KEY_SIZE])$/;"	f	typeref:typename:void
mbedtls_des_self_test	library/des.c	/^int mbedtls_des_self_test(int verbose)$/;"	f	typeref:typename:int
mbedtls_des_setkey	library/des.c	/^void mbedtls_des_setkey(uint32_t SK[32], const unsigned char key[MBEDTLS_DES_KEY_SIZE])$/;"	f	typeref:typename:void
mbedtls_des_setkey_dec	library/des.c	/^int mbedtls_des_setkey_dec(mbedtls_des_context *ctx, const unsigned char key[MBEDTLS_DES_KEY_SIZ/;"	f	typeref:typename:int
mbedtls_des_setkey_enc	library/des.c	/^int mbedtls_des_setkey_enc(mbedtls_des_context *ctx, const unsigned char key[MBEDTLS_DES_KEY_SIZ/;"	f	typeref:typename:int
mbedtls_dhm_calc_secret	library/dhm.c	/^int mbedtls_dhm_calc_secret(mbedtls_dhm_context *ctx,$/;"	f	typeref:typename:int
mbedtls_dhm_free	library/dhm.c	/^void mbedtls_dhm_free(mbedtls_dhm_context *ctx)$/;"	f	typeref:typename:void
mbedtls_dhm_get_bitlen	library/dhm.c	/^size_t mbedtls_dhm_get_bitlen(const mbedtls_dhm_context *ctx)$/;"	f	typeref:typename:size_t
mbedtls_dhm_get_len	library/dhm.c	/^size_t mbedtls_dhm_get_len(const mbedtls_dhm_context *ctx)$/;"	f	typeref:typename:size_t
mbedtls_dhm_get_value	library/dhm.c	/^int mbedtls_dhm_get_value(const mbedtls_dhm_context *ctx,$/;"	f	typeref:typename:int
mbedtls_dhm_init	library/dhm.c	/^void mbedtls_dhm_init(mbedtls_dhm_context *ctx)$/;"	f	typeref:typename:void
mbedtls_dhm_make_params	library/dhm.c	/^int mbedtls_dhm_make_params(mbedtls_dhm_context *ctx, int x_size,$/;"	f	typeref:typename:int
mbedtls_dhm_make_public	library/dhm.c	/^int mbedtls_dhm_make_public(mbedtls_dhm_context *ctx, int x_size,$/;"	f	typeref:typename:int
mbedtls_dhm_parse_dhm	library/dhm.c	/^int mbedtls_dhm_parse_dhm(mbedtls_dhm_context *dhm, const unsigned char *dhmin,$/;"	f	typeref:typename:int
mbedtls_dhm_parse_dhmfile	library/dhm.c	/^int mbedtls_dhm_parse_dhmfile(mbedtls_dhm_context *dhm, const char *path)$/;"	f	typeref:typename:int
mbedtls_dhm_read_params	library/dhm.c	/^int mbedtls_dhm_read_params(mbedtls_dhm_context *ctx,$/;"	f	typeref:typename:int
mbedtls_dhm_read_public	library/dhm.c	/^int mbedtls_dhm_read_public(mbedtls_dhm_context *ctx,$/;"	f	typeref:typename:int
mbedtls_dhm_self_test	library/dhm.c	/^int mbedtls_dhm_self_test(int verbose)$/;"	f	typeref:typename:int
mbedtls_dhm_set_group	library/dhm.c	/^int mbedtls_dhm_set_group(mbedtls_dhm_context *ctx,$/;"	f	typeref:typename:int
mbedtls_ecc_group_of_psa	library/psa_util.c	/^mbedtls_ecp_group_id mbedtls_ecc_group_of_psa(psa_ecc_family_t curve,$/;"	f	typeref:typename:mbedtls_ecp_group_id
mbedtls_ecc_group_to_psa	library/psa_util.c	/^psa_ecc_family_t mbedtls_ecc_group_to_psa(mbedtls_ecp_group_id grpid,$/;"	f	typeref:typename:psa_ecc_family_t
mbedtls_ecdh_calc_secret	library/ecdh.c	/^int mbedtls_ecdh_calc_secret(mbedtls_ecdh_context *ctx, size_t *olen,$/;"	f	typeref:typename:int
mbedtls_ecdh_can_do	library/ecdh.c	/^int mbedtls_ecdh_can_do(mbedtls_ecp_group_id gid)$/;"	f	typeref:typename:int
mbedtls_ecdh_compute_shared	library/ecdh.c	/^int mbedtls_ecdh_compute_shared(mbedtls_ecp_group *grp, mbedtls_mpi *z,$/;"	f	typeref:typename:int
mbedtls_ecdh_enable_restart	library/ecdh.c	/^void mbedtls_ecdh_enable_restart(mbedtls_ecdh_context *ctx)$/;"	f	typeref:typename:void
mbedtls_ecdh_free	library/ecdh.c	/^void mbedtls_ecdh_free(mbedtls_ecdh_context *ctx)$/;"	f	typeref:typename:void
mbedtls_ecdh_gen_public	library/ecdh.c	/^int mbedtls_ecdh_gen_public(mbedtls_ecp_group *grp, mbedtls_mpi *d, mbedtls_ecp_point *Q,$/;"	f	typeref:typename:int
mbedtls_ecdh_get_params	library/ecdh.c	/^int mbedtls_ecdh_get_params(mbedtls_ecdh_context *ctx,$/;"	f	typeref:typename:int
mbedtls_ecdh_grp_id	library/ecdh.c	/^static mbedtls_ecp_group_id mbedtls_ecdh_grp_id($/;"	f	typeref:typename:mbedtls_ecp_group_id	file:
mbedtls_ecdh_init	library/ecdh.c	/^void mbedtls_ecdh_init(mbedtls_ecdh_context *ctx)$/;"	f	typeref:typename:void
mbedtls_ecdh_make_params	library/ecdh.c	/^int mbedtls_ecdh_make_params(mbedtls_ecdh_context *ctx, size_t *olen,$/;"	f	typeref:typename:int
mbedtls_ecdh_make_public	library/ecdh.c	/^int mbedtls_ecdh_make_public(mbedtls_ecdh_context *ctx, size_t *olen,$/;"	f	typeref:typename:int
mbedtls_ecdh_read_params	library/ecdh.c	/^int mbedtls_ecdh_read_params(mbedtls_ecdh_context *ctx,$/;"	f	typeref:typename:int
mbedtls_ecdh_read_public	library/ecdh.c	/^int mbedtls_ecdh_read_public(mbedtls_ecdh_context *ctx,$/;"	f	typeref:typename:int
mbedtls_ecdh_setup	library/ecdh.c	/^int mbedtls_ecdh_setup(mbedtls_ecdh_context *ctx, mbedtls_ecp_group_id grp_id)$/;"	f	typeref:typename:int
mbedtls_ecdsa_can_do	library/ecdsa.c	/^int mbedtls_ecdsa_can_do(mbedtls_ecp_group_id gid)$/;"	f	typeref:typename:int
mbedtls_ecdsa_free	library/ecdsa.c	/^void mbedtls_ecdsa_free(mbedtls_ecdsa_context *ctx)$/;"	f	typeref:typename:void
mbedtls_ecdsa_from_keypair	library/ecdsa.c	/^int mbedtls_ecdsa_from_keypair(mbedtls_ecdsa_context *ctx, const mbedtls_ecp_keypair *key)$/;"	f	typeref:typename:int
mbedtls_ecdsa_genkey	library/ecdsa.c	/^int mbedtls_ecdsa_genkey(mbedtls_ecdsa_context *ctx, mbedtls_ecp_group_id gid,$/;"	f	typeref:typename:int
mbedtls_ecdsa_init	library/ecdsa.c	/^void mbedtls_ecdsa_init(mbedtls_ecdsa_context *ctx)$/;"	f	typeref:typename:void
mbedtls_ecdsa_read_signature	library/ecdsa.c	/^int mbedtls_ecdsa_read_signature(mbedtls_ecdsa_context *ctx,$/;"	f	typeref:typename:int
mbedtls_ecdsa_read_signature_restartable	library/ecdsa.c	/^int mbedtls_ecdsa_read_signature_restartable(mbedtls_ecdsa_context *ctx,$/;"	f	typeref:typename:int
mbedtls_ecdsa_restart_free	library/ecdsa.c	/^void mbedtls_ecdsa_restart_free(mbedtls_ecdsa_restart_ctx *ctx)$/;"	f	typeref:typename:void
mbedtls_ecdsa_restart_init	library/ecdsa.c	/^void mbedtls_ecdsa_restart_init(mbedtls_ecdsa_restart_ctx *ctx)$/;"	f	typeref:typename:void
mbedtls_ecdsa_sign	library/ecdsa.c	/^int mbedtls_ecdsa_sign(mbedtls_ecp_group *grp, mbedtls_mpi *r, mbedtls_mpi *s,$/;"	f	typeref:typename:int
mbedtls_ecdsa_sign_det_ext	library/ecdsa.c	/^int mbedtls_ecdsa_sign_det_ext(mbedtls_ecp_group *grp, mbedtls_mpi *r,$/;"	f	typeref:typename:int
mbedtls_ecdsa_sign_det_restartable	library/ecdsa.c	/^int mbedtls_ecdsa_sign_det_restartable(mbedtls_ecp_group *grp,$/;"	f	typeref:typename:int
mbedtls_ecdsa_sign_restartable	library/ecdsa.c	/^int mbedtls_ecdsa_sign_restartable(mbedtls_ecp_group *grp,$/;"	f	typeref:typename:int
mbedtls_ecdsa_verify	library/ecdsa.c	/^int mbedtls_ecdsa_verify(mbedtls_ecp_group *grp,$/;"	f	typeref:typename:int
mbedtls_ecdsa_verify_restartable	library/ecdsa.c	/^int mbedtls_ecdsa_verify_restartable(mbedtls_ecp_group *grp,$/;"	f	typeref:typename:int
mbedtls_ecdsa_write_signature	library/ecdsa.c	/^int mbedtls_ecdsa_write_signature(mbedtls_ecdsa_context *ctx,$/;"	f	typeref:typename:int
mbedtls_ecdsa_write_signature_restartable	library/ecdsa.c	/^int mbedtls_ecdsa_write_signature_restartable(mbedtls_ecdsa_context *ctx,$/;"	f	typeref:typename:int
mbedtls_ecjpake_check	library/ecjpake.c	/^int mbedtls_ecjpake_check(const mbedtls_ecjpake_context *ctx)$/;"	f	typeref:typename:int
mbedtls_ecjpake_compute_hash	library/ecjpake.c	/^static int mbedtls_ecjpake_compute_hash(mbedtls_md_type_t md_type,$/;"	f	typeref:typename:int	file:
mbedtls_ecjpake_derive_k	library/ecjpake.c	/^static int mbedtls_ecjpake_derive_k(mbedtls_ecjpake_context *ctx,$/;"	f	typeref:typename:int	file:
mbedtls_ecjpake_derive_secret	library/ecjpake.c	/^int mbedtls_ecjpake_derive_secret(mbedtls_ecjpake_context *ctx,$/;"	f	typeref:typename:int
mbedtls_ecjpake_free	library/ecjpake.c	/^void mbedtls_ecjpake_free(mbedtls_ecjpake_context *ctx)$/;"	f	typeref:typename:void
mbedtls_ecjpake_init	library/ecjpake.c	/^void mbedtls_ecjpake_init(mbedtls_ecjpake_context *ctx)$/;"	f	typeref:typename:void
mbedtls_ecjpake_read_round_one	library/ecjpake.c	/^int mbedtls_ecjpake_read_round_one(mbedtls_ecjpake_context *ctx,$/;"	f	typeref:typename:int
mbedtls_ecjpake_read_round_two	library/ecjpake.c	/^int mbedtls_ecjpake_read_round_two(mbedtls_ecjpake_context *ctx,$/;"	f	typeref:typename:int
mbedtls_ecjpake_self_test	library/ecjpake.c	/^int mbedtls_ecjpake_self_test(int verbose)$/;"	f	typeref:typename:int
mbedtls_ecjpake_set_point_format	library/ecjpake.c	/^int mbedtls_ecjpake_set_point_format(mbedtls_ecjpake_context *ctx,$/;"	f	typeref:typename:int
mbedtls_ecjpake_setup	library/ecjpake.c	/^int mbedtls_ecjpake_setup(mbedtls_ecjpake_context *ctx,$/;"	f	typeref:typename:int
mbedtls_ecjpake_to_psa_error	library/psa_crypto_pake.c	/^static psa_status_t mbedtls_ecjpake_to_psa_error(int ret)$/;"	f	typeref:typename:psa_status_t	file:
mbedtls_ecjpake_write_round_one	library/ecjpake.c	/^int mbedtls_ecjpake_write_round_one(mbedtls_ecjpake_context *ctx,$/;"	f	typeref:typename:int
mbedtls_ecjpake_write_round_two	library/ecjpake.c	/^int mbedtls_ecjpake_write_round_two(mbedtls_ecjpake_context *ctx,$/;"	f	typeref:typename:int
mbedtls_ecjpake_write_shared_key	library/ecjpake.c	/^int mbedtls_ecjpake_write_shared_key(mbedtls_ecjpake_context *ctx,$/;"	f	typeref:typename:int
mbedtls_ecp_check_budget	library/ecp.c	/^int mbedtls_ecp_check_budget(const mbedtls_ecp_group *grp,$/;"	f	typeref:typename:int
mbedtls_ecp_check_privkey	library/ecp.c	/^int mbedtls_ecp_check_privkey(const mbedtls_ecp_group *grp,$/;"	f	typeref:typename:int
mbedtls_ecp_check_pub_priv	library/ecp.c	/^int mbedtls_ecp_check_pub_priv($/;"	f	typeref:typename:int
mbedtls_ecp_check_pubkey	library/ecp.c	/^int mbedtls_ecp_check_pubkey(const mbedtls_ecp_group *grp,$/;"	f	typeref:typename:int
mbedtls_ecp_copy	library/ecp.c	/^int mbedtls_ecp_copy(mbedtls_ecp_point *P, const mbedtls_ecp_point *Q)$/;"	f	typeref:typename:int
mbedtls_ecp_curve_info_from_grp_id	library/ecp.c	/^const mbedtls_ecp_curve_info *mbedtls_ecp_curve_info_from_grp_id(mbedtls_ecp_group_id grp_id)$/;"	f	typeref:typename:const mbedtls_ecp_curve_info *
mbedtls_ecp_curve_info_from_name	library/ecp.c	/^const mbedtls_ecp_curve_info *mbedtls_ecp_curve_info_from_name(const char *name)$/;"	f	typeref:typename:const mbedtls_ecp_curve_info *
mbedtls_ecp_curve_info_from_tls_id	library/ecp.c	/^const mbedtls_ecp_curve_info *mbedtls_ecp_curve_info_from_tls_id(uint16_t tls_id)$/;"	f	typeref:typename:const mbedtls_ecp_curve_info *
mbedtls_ecp_curve_list	library/ecp.c	/^const mbedtls_ecp_curve_info *mbedtls_ecp_curve_list(void)$/;"	f	typeref:typename:const mbedtls_ecp_curve_info *
mbedtls_ecp_export	library/ecp.c	/^int mbedtls_ecp_export(const mbedtls_ecp_keypair *key, mbedtls_ecp_group *grp,$/;"	f	typeref:typename:int
mbedtls_ecp_fix_negative	library/ecp_curves.c	/^static void mbedtls_ecp_fix_negative(mbedtls_mpi *N, signed char c, size_t bits)$/;"	f	typeref:typename:void	file:
mbedtls_ecp_gen_key	library/ecp.c	/^int mbedtls_ecp_gen_key(mbedtls_ecp_group_id grp_id, mbedtls_ecp_keypair *key,$/;"	f	typeref:typename:int
mbedtls_ecp_gen_keypair	library/ecp.c	/^int mbedtls_ecp_gen_keypair(mbedtls_ecp_group *grp,$/;"	f	typeref:typename:int
mbedtls_ecp_gen_keypair_base	library/ecp.c	/^int mbedtls_ecp_gen_keypair_base(mbedtls_ecp_group *grp,$/;"	f	typeref:typename:int
mbedtls_ecp_gen_privkey	library/ecp.c	/^int mbedtls_ecp_gen_privkey(const mbedtls_ecp_group *grp,$/;"	f	typeref:typename:int
mbedtls_ecp_gen_privkey_mx	library/ecp.c	/^int mbedtls_ecp_gen_privkey_mx(size_t high_bit,$/;"	f	typeref:typename:MBEDTLS_STATIC_TESTABLE int
mbedtls_ecp_gen_privkey_sw	library/ecp.c	/^static int mbedtls_ecp_gen_privkey_sw($/;"	f	typeref:typename:int	file:
mbedtls_ecp_get_type	library/ecp.c	/^mbedtls_ecp_curve_type mbedtls_ecp_get_type(const mbedtls_ecp_group *grp)$/;"	f	typeref:typename:mbedtls_ecp_curve_type
mbedtls_ecp_get_variant	library/ecp_curves.c	/^mbedtls_ecp_variant mbedtls_ecp_get_variant(void)$/;"	f	typeref:typename:MBEDTLS_STATIC_TESTABLE mbedtls_ecp_variant
mbedtls_ecp_get_variant	library/ecp_curves_new.c	/^mbedtls_ecp_variant mbedtls_ecp_get_variant(void)$/;"	f	typeref:typename:MBEDTLS_STATIC_TESTABLE mbedtls_ecp_variant
mbedtls_ecp_group_a_is_minus_3	include/mbedtls/ecp.h	/^static inline int mbedtls_ecp_group_a_is_minus_3(const mbedtls_ecp_group *grp)$/;"	f	typeref:typename:int
mbedtls_ecp_group_copy	library/ecp.c	/^int mbedtls_ecp_group_copy(mbedtls_ecp_group *dst, const mbedtls_ecp_group *src)$/;"	f	typeref:typename:int
mbedtls_ecp_group_free	library/ecp.c	/^void mbedtls_ecp_group_free(mbedtls_ecp_group *grp)$/;"	f	typeref:typename:void
mbedtls_ecp_group_init	library/ecp.c	/^void mbedtls_ecp_group_init(mbedtls_ecp_group *grp)$/;"	f	typeref:typename:void
mbedtls_ecp_group_load	library/ecp_curves.c	/^int mbedtls_ecp_group_load(mbedtls_ecp_group *grp, mbedtls_ecp_group_id id)$/;"	f	typeref:typename:int
mbedtls_ecp_group_load	library/ecp_curves_new.c	/^int mbedtls_ecp_group_load(mbedtls_ecp_group *grp, mbedtls_ecp_group_id id)$/;"	f	typeref:typename:int
mbedtls_ecp_grp_id_list	library/ecp.c	/^const mbedtls_ecp_group_id *mbedtls_ecp_grp_id_list(void)$/;"	f	typeref:typename:const mbedtls_ecp_group_id *
mbedtls_ecp_is_zero	library/ecp.c	/^int mbedtls_ecp_is_zero(mbedtls_ecp_point *pt)$/;"	f	typeref:typename:int
mbedtls_ecp_keypair_free	library/ecp.c	/^void mbedtls_ecp_keypair_free(mbedtls_ecp_keypair *key)$/;"	f	typeref:typename:void
mbedtls_ecp_keypair_init	library/ecp.c	/^void mbedtls_ecp_keypair_init(mbedtls_ecp_keypair *key)$/;"	f	typeref:typename:void
mbedtls_ecp_mod_p192_raw	library/ecp_curves_new.c	/^int mbedtls_ecp_mod_p192_raw(mbedtls_mpi_uint *Np, size_t Nn)$/;"	f	typeref:typename:MBEDTLS_STATIC_TESTABLE int
mbedtls_ecp_mod_p192k1_raw	library/ecp_curves_new.c	/^int mbedtls_ecp_mod_p192k1_raw(mbedtls_mpi_uint *X, size_t X_limbs)$/;"	f	typeref:typename:MBEDTLS_STATIC_TESTABLE int
mbedtls_ecp_mod_p224_raw	library/ecp_curves_new.c	/^int mbedtls_ecp_mod_p224_raw(mbedtls_mpi_uint *X, size_t X_limbs)$/;"	f	typeref:typename:MBEDTLS_STATIC_TESTABLE int
mbedtls_ecp_mod_p224k1_raw	library/ecp_curves_new.c	/^int mbedtls_ecp_mod_p224k1_raw(mbedtls_mpi_uint *X, size_t X_limbs)$/;"	f	typeref:typename:MBEDTLS_STATIC_TESTABLE int
mbedtls_ecp_mod_p255_raw	library/ecp_curves_new.c	/^int mbedtls_ecp_mod_p255_raw(mbedtls_mpi_uint *X, size_t X_Limbs)$/;"	f	typeref:typename:MBEDTLS_STATIC_TESTABLE int
mbedtls_ecp_mod_p256_raw	library/ecp_curves_new.c	/^int mbedtls_ecp_mod_p256_raw(mbedtls_mpi_uint *X, size_t X_limbs)$/;"	f	typeref:typename:MBEDTLS_STATIC_TESTABLE int
mbedtls_ecp_mod_p256k1_raw	library/ecp_curves_new.c	/^int mbedtls_ecp_mod_p256k1_raw(mbedtls_mpi_uint *X, size_t X_limbs)$/;"	f	typeref:typename:MBEDTLS_STATIC_TESTABLE int
mbedtls_ecp_mod_p384_raw	library/ecp_curves_new.c	/^int mbedtls_ecp_mod_p384_raw(mbedtls_mpi_uint *X, size_t X_limbs)$/;"	f	typeref:typename:MBEDTLS_STATIC_TESTABLE int
mbedtls_ecp_mod_p448_raw	library/ecp_curves_new.c	/^int mbedtls_ecp_mod_p448_raw(mbedtls_mpi_uint *X, size_t X_limbs)$/;"	f	typeref:typename:MBEDTLS_STATIC_TESTABLE int
mbedtls_ecp_mod_p521_raw	library/ecp_curves_new.c	/^int mbedtls_ecp_mod_p521_raw(mbedtls_mpi_uint *X, size_t X_limbs)$/;"	f	typeref:typename:MBEDTLS_STATIC_TESTABLE int
mbedtls_ecp_modulus_setup	library/ecp_curves_new.c	/^int mbedtls_ecp_modulus_setup(mbedtls_mpi_mod_modulus *N,$/;"	f	typeref:typename:MBEDTLS_STATIC_TESTABLE int
mbedtls_ecp_mul	library/ecp.c	/^int mbedtls_ecp_mul(mbedtls_ecp_group *grp, mbedtls_ecp_point *R,$/;"	f	typeref:typename:int
mbedtls_ecp_mul_restartable	library/ecp.c	/^int mbedtls_ecp_mul_restartable(mbedtls_ecp_group *grp, mbedtls_ecp_point *R,$/;"	f	typeref:typename:int
mbedtls_ecp_mul_shortcuts	library/ecp.c	/^static int mbedtls_ecp_mul_shortcuts(mbedtls_ecp_group *grp,$/;"	f	typeref:typename:int	file:
mbedtls_ecp_muladd	library/ecp.c	/^int mbedtls_ecp_muladd(mbedtls_ecp_group *grp, mbedtls_ecp_point *R,$/;"	f	typeref:typename:int
mbedtls_ecp_muladd_restartable	library/ecp.c	/^int mbedtls_ecp_muladd_restartable($/;"	f	typeref:typename:int
mbedtls_ecp_point_cmp	library/ecp.c	/^int mbedtls_ecp_point_cmp(const mbedtls_ecp_point *P,$/;"	f	typeref:typename:int
mbedtls_ecp_point_free	library/ecp.c	/^void mbedtls_ecp_point_free(mbedtls_ecp_point *pt)$/;"	f	typeref:typename:void
mbedtls_ecp_point_init	library/ecp.c	/^void mbedtls_ecp_point_init(mbedtls_ecp_point *pt)$/;"	f	typeref:typename:void
mbedtls_ecp_point_read_binary	library/ecp.c	/^int mbedtls_ecp_point_read_binary(const mbedtls_ecp_group *grp,$/;"	f	typeref:typename:int
mbedtls_ecp_point_read_string	library/ecp.c	/^int mbedtls_ecp_point_read_string(mbedtls_ecp_point *P, int radix,$/;"	f	typeref:typename:int
mbedtls_ecp_point_write_binary	library/ecp.c	/^int mbedtls_ecp_point_write_binary(const mbedtls_ecp_group *grp,$/;"	f	typeref:typename:int
mbedtls_ecp_read_key	library/ecp.c	/^int mbedtls_ecp_read_key(mbedtls_ecp_group_id grp_id, mbedtls_ecp_keypair *key,$/;"	f	typeref:typename:int
mbedtls_ecp_restart_free	library/ecp.c	/^void mbedtls_ecp_restart_free(mbedtls_ecp_restart_ctx *ctx)$/;"	f	typeref:typename:void
mbedtls_ecp_restart_init	library/ecp.c	/^void mbedtls_ecp_restart_init(mbedtls_ecp_restart_ctx *ctx)$/;"	f	typeref:typename:void
mbedtls_ecp_restart_is_enabled	library/ecp.c	/^int mbedtls_ecp_restart_is_enabled(void)$/;"	f	typeref:typename:int
mbedtls_ecp_self_test	library/ecp.c	/^int mbedtls_ecp_self_test(int verbose)$/;"	f	typeref:typename:int
mbedtls_ecp_set_max_ops	library/ecp.c	/^void mbedtls_ecp_set_max_ops(unsigned max_ops)$/;"	f	typeref:typename:void
mbedtls_ecp_set_zero	library/ecp.c	/^int mbedtls_ecp_set_zero(mbedtls_ecp_point *pt)$/;"	f	typeref:typename:int
mbedtls_ecp_sw_derive_y	library/ecp.c	/^static int mbedtls_ecp_sw_derive_y(const mbedtls_ecp_group *grp,$/;"	f	typeref:typename:int	file:
mbedtls_ecp_tls_read_group	library/ecp.c	/^int mbedtls_ecp_tls_read_group(mbedtls_ecp_group *grp,$/;"	f	typeref:typename:int
mbedtls_ecp_tls_read_group_id	library/ecp.c	/^int mbedtls_ecp_tls_read_group_id(mbedtls_ecp_group_id *grp,$/;"	f	typeref:typename:int
mbedtls_ecp_tls_read_point	library/ecp.c	/^int mbedtls_ecp_tls_read_point(const mbedtls_ecp_group *grp,$/;"	f	typeref:typename:int
mbedtls_ecp_tls_write_group	library/ecp.c	/^int mbedtls_ecp_tls_write_group(const mbedtls_ecp_group *grp, size_t *olen,$/;"	f	typeref:typename:int
mbedtls_ecp_tls_write_point	library/ecp.c	/^int mbedtls_ecp_tls_write_point(const mbedtls_ecp_group *grp, const mbedtls_ecp_point *pt,$/;"	f	typeref:typename:int
mbedtls_ecp_write_key	library/ecp.c	/^int mbedtls_ecp_write_key(mbedtls_ecp_keypair *key,$/;"	f	typeref:typename:int
mbedtls_entropy_add_source	library/entropy.c	/^int mbedtls_entropy_add_source(mbedtls_entropy_context *ctx,$/;"	f	typeref:typename:int
mbedtls_entropy_free	library/entropy.c	/^void mbedtls_entropy_free(mbedtls_entropy_context *ctx)$/;"	f	typeref:typename:void
mbedtls_entropy_func	library/entropy.c	/^int mbedtls_entropy_func(void *data, unsigned char *output, size_t len)$/;"	f	typeref:typename:int
mbedtls_entropy_gather	library/entropy.c	/^int mbedtls_entropy_gather(mbedtls_entropy_context *ctx)$/;"	f	typeref:typename:int
mbedtls_entropy_init	library/entropy.c	/^void mbedtls_entropy_init(mbedtls_entropy_context *ctx)$/;"	f	typeref:typename:void
mbedtls_entropy_self_test	library/entropy.c	/^int mbedtls_entropy_self_test(int verbose)$/;"	f	typeref:typename:int
mbedtls_entropy_self_test_wrapper	programs/test/selftest.c	/^int mbedtls_entropy_self_test_wrapper(int verbose)$/;"	f	typeref:typename:int
mbedtls_entropy_source_self_test	library/entropy.c	/^int mbedtls_entropy_source_self_test(int verbose)$/;"	f	typeref:typename:int
mbedtls_entropy_source_self_test_check_bits	library/entropy.c	/^static int mbedtls_entropy_source_self_test_check_bits(const unsigned char *buf,$/;"	f	typeref:typename:int	file:
mbedtls_entropy_source_self_test_gather	library/entropy.c	/^static int mbedtls_entropy_source_self_test_gather(unsigned char *buf, size_t buf_len)$/;"	f	typeref:typename:int	file:
mbedtls_entropy_update_manual	library/entropy.c	/^int mbedtls_entropy_update_manual(mbedtls_entropy_context *ctx,$/;"	f	typeref:typename:int
mbedtls_entropy_update_nv_seed	library/entropy.c	/^int mbedtls_entropy_update_nv_seed(mbedtls_entropy_context *ctx)$/;"	f	typeref:typename:int
mbedtls_entropy_update_seed_file	library/entropy.c	/^int mbedtls_entropy_update_seed_file(mbedtls_entropy_context *ctx, const char *path)$/;"	f	typeref:typename:int
mbedtls_entropy_write_seed_file	library/entropy.c	/^int mbedtls_entropy_write_seed_file(mbedtls_entropy_context *ctx, const char *path)$/;"	f	typeref:typename:int
mbedtls_error_add	include/mbedtls/error.h	/^static inline int mbedtls_error_add(int high, int low,$/;"	f	typeref:typename:int
mbedtls_everest_calc_secret	3rdparty/everest/library/everest.c	/^int mbedtls_everest_calc_secret( mbedtls_ecdh_context_everest *ctx, size_t *olen,$/;"	f	typeref:typename:int
mbedtls_everest_free	3rdparty/everest/library/everest.c	/^void mbedtls_everest_free( mbedtls_ecdh_context_everest *ctx )$/;"	f	typeref:typename:void
mbedtls_everest_get_params	3rdparty/everest/library/everest.c	/^int mbedtls_everest_get_params( mbedtls_ecdh_context_everest *ctx,$/;"	f	typeref:typename:int
mbedtls_everest_make_params	3rdparty/everest/library/everest.c	/^int mbedtls_everest_make_params( mbedtls_ecdh_context_everest *ctx, size_t *olen,$/;"	f	typeref:typename:int
mbedtls_everest_make_public	3rdparty/everest/library/everest.c	/^int mbedtls_everest_make_public( mbedtls_ecdh_context_everest *ctx, size_t *olen,$/;"	f	typeref:typename:int
mbedtls_everest_read_params	3rdparty/everest/library/everest.c	/^int mbedtls_everest_read_params( mbedtls_ecdh_context_everest *ctx,$/;"	f	typeref:typename:int
mbedtls_everest_read_public	3rdparty/everest/library/everest.c	/^int mbedtls_everest_read_public( mbedtls_ecdh_context_everest *ctx,$/;"	f	typeref:typename:int
mbedtls_everest_setup	3rdparty/everest/library/everest.c	/^int mbedtls_everest_setup( mbedtls_ecdh_context_everest *ctx, int grp_id )$/;"	f	typeref:typename:int
mbedtls_free	library/platform.c	/^void mbedtls_free(void *ptr)$/;"	f	typeref:typename:void
mbedtls_gcm_auth_decrypt	library/gcm.c	/^int mbedtls_gcm_auth_decrypt(mbedtls_gcm_context *ctx,$/;"	f	typeref:typename:int
mbedtls_gcm_crypt_and_tag	library/gcm.c	/^int mbedtls_gcm_crypt_and_tag(mbedtls_gcm_context *ctx,$/;"	f	typeref:typename:int
mbedtls_gcm_finish	library/gcm.c	/^int mbedtls_gcm_finish(mbedtls_gcm_context *ctx,$/;"	f	typeref:typename:int
mbedtls_gcm_free	library/gcm.c	/^void mbedtls_gcm_free(mbedtls_gcm_context *ctx)$/;"	f	typeref:typename:void
mbedtls_gcm_init	library/gcm.c	/^void mbedtls_gcm_init(mbedtls_gcm_context *ctx)$/;"	f	typeref:typename:void
mbedtls_gcm_self_test	library/gcm.c	/^int mbedtls_gcm_self_test(int verbose)$/;"	f	typeref:typename:int
mbedtls_gcm_setkey	library/gcm.c	/^int mbedtls_gcm_setkey(mbedtls_gcm_context *ctx,$/;"	f	typeref:typename:int
mbedtls_gcm_starts	library/gcm.c	/^int mbedtls_gcm_starts(mbedtls_gcm_context *ctx,$/;"	f	typeref:typename:int
mbedtls_gcm_update	library/gcm.c	/^int mbedtls_gcm_update(mbedtls_gcm_context *ctx,$/;"	f	typeref:typename:int
mbedtls_gcm_update_ad	library/gcm.c	/^int mbedtls_gcm_update_ad(mbedtls_gcm_context *ctx,$/;"	f	typeref:typename:int
mbedtls_get_unaligned_uint16	library/alignment.h	/^inline uint16_t mbedtls_get_unaligned_uint16(const void *p)$/;"	f	typeref:typename:uint16_t
mbedtls_get_unaligned_uint32	library/alignment.h	/^inline uint32_t mbedtls_get_unaligned_uint32(const void *p)$/;"	f	typeref:typename:uint32_t
mbedtls_get_unaligned_uint64	library/alignment.h	/^inline uint64_t mbedtls_get_unaligned_uint64(const void *p)$/;"	f	typeref:typename:uint64_t
mbedtls_get_unaligned_volatile_uint32	library/constant_time.c	/^static inline uint32_t mbedtls_get_unaligned_volatile_uint32(volatile const unsigned char *p)$/;"	f	typeref:typename:uint32_t	file:
mbedtls_gf128mul_x_ble	library/aes.c	/^static inline void mbedtls_gf128mul_x_ble(unsigned char r[16],$/;"	f	typeref:typename:MBEDTLS_OPTIMIZE_FOR_PERFORMANCE void	file:
mbedtls_hkdf	library/hkdf.c	/^int mbedtls_hkdf(const mbedtls_md_info_t *md, const unsigned char *salt,$/;"	f	typeref:typename:int
mbedtls_hkdf_expand	library/hkdf.c	/^int mbedtls_hkdf_expand(const mbedtls_md_info_t *md, const unsigned char *prk,$/;"	f	typeref:typename:int
mbedtls_hkdf_extract	library/hkdf.c	/^int mbedtls_hkdf_extract(const mbedtls_md_info_t *md,$/;"	f	typeref:typename:int
mbedtls_hmac_drbg_free	library/hmac_drbg.c	/^void mbedtls_hmac_drbg_free(mbedtls_hmac_drbg_context *ctx)$/;"	f	typeref:typename:void
mbedtls_hmac_drbg_init	library/hmac_drbg.c	/^void mbedtls_hmac_drbg_init(mbedtls_hmac_drbg_context *ctx)$/;"	f	typeref:typename:void
mbedtls_hmac_drbg_random	library/hmac_drbg.c	/^int mbedtls_hmac_drbg_random(void *p_rng, unsigned char *output, size_t out_len)$/;"	f	typeref:typename:int
mbedtls_hmac_drbg_random_with_add	library/hmac_drbg.c	/^int mbedtls_hmac_drbg_random_with_add(void *p_rng,$/;"	f	typeref:typename:int
mbedtls_hmac_drbg_reseed	library/hmac_drbg.c	/^int mbedtls_hmac_drbg_reseed(mbedtls_hmac_drbg_context *ctx,$/;"	f	typeref:typename:int
mbedtls_hmac_drbg_seed	library/hmac_drbg.c	/^int mbedtls_hmac_drbg_seed(mbedtls_hmac_drbg_context *ctx,$/;"	f	typeref:typename:int
mbedtls_hmac_drbg_seed_buf	library/hmac_drbg.c	/^int mbedtls_hmac_drbg_seed_buf(mbedtls_hmac_drbg_context *ctx,$/;"	f	typeref:typename:int
mbedtls_hmac_drbg_self_test	library/hmac_drbg.c	/^int mbedtls_hmac_drbg_self_test(int verbose)$/;"	f	typeref:typename:int
mbedtls_hmac_drbg_set_entropy_len	library/hmac_drbg.c	/^void mbedtls_hmac_drbg_set_entropy_len(mbedtls_hmac_drbg_context *ctx, size_t len)$/;"	f	typeref:typename:void
mbedtls_hmac_drbg_set_prediction_resistance	library/hmac_drbg.c	/^void mbedtls_hmac_drbg_set_prediction_resistance(mbedtls_hmac_drbg_context *ctx,$/;"	f	typeref:typename:void
mbedtls_hmac_drbg_set_reseed_interval	library/hmac_drbg.c	/^void mbedtls_hmac_drbg_set_reseed_interval(mbedtls_hmac_drbg_context *ctx, int interval)$/;"	f	typeref:typename:void
mbedtls_hmac_drbg_update	library/hmac_drbg.c	/^int mbedtls_hmac_drbg_update(mbedtls_hmac_drbg_context *ctx,$/;"	f	typeref:typename:int
mbedtls_hmac_drbg_update_seed_file	library/hmac_drbg.c	/^int mbedtls_hmac_drbg_update_seed_file(mbedtls_hmac_drbg_context *ctx, const char *path)$/;"	f	typeref:typename:int
mbedtls_hmac_drbg_write_seed_file	library/hmac_drbg.c	/^int mbedtls_hmac_drbg_write_seed_file(mbedtls_hmac_drbg_context *ctx, const char *path)$/;"	f	typeref:typename:int
mbedtls_int_div_int	library/bignum.c	/^static mbedtls_mpi_uint mbedtls_int_div_int(mbedtls_mpi_uint u1,$/;"	f	typeref:typename:mbedtls_mpi_uint	file:
mbedtls_internal_aes_decrypt	library/aes.c	/^int mbedtls_internal_aes_decrypt(mbedtls_aes_context *ctx,$/;"	f	typeref:typename:int
mbedtls_internal_aes_encrypt	library/aes.c	/^int mbedtls_internal_aes_encrypt(mbedtls_aes_context *ctx,$/;"	f	typeref:typename:int
mbedtls_internal_md5_process	library/md5.c	/^int mbedtls_internal_md5_process(mbedtls_md5_context *ctx,$/;"	f	typeref:typename:int
mbedtls_internal_ripemd160_process	library/ripemd160.c	/^int mbedtls_internal_ripemd160_process(mbedtls_ripemd160_context *ctx,$/;"	f	typeref:typename:int
mbedtls_internal_sha1_process	library/sha1.c	/^int mbedtls_internal_sha1_process(mbedtls_sha1_context *ctx,$/;"	f	typeref:typename:int
mbedtls_internal_sha256_process	library/sha256.c	/^int mbedtls_internal_sha256_process(mbedtls_sha256_context *ctx,$/;"	f	typeref:typename:int
mbedtls_internal_sha256_process_a64_crypto	library/sha256.c	/^int mbedtls_internal_sha256_process_a64_crypto(mbedtls_sha256_context *ctx,$/;"	f	typeref:typename:int	file:
mbedtls_internal_sha256_process_c	library/sha256.c	/^int mbedtls_internal_sha256_process_c(mbedtls_sha256_context *ctx,$/;"	f	typeref:typename:int	file:
mbedtls_internal_sha256_process_many	library/sha256.c	/^static size_t mbedtls_internal_sha256_process_many(mbedtls_sha256_context *ctx,$/;"	f	typeref:typename:size_t	file:
mbedtls_internal_sha256_process_many_a64_crypto	library/sha256.c	/^static size_t mbedtls_internal_sha256_process_many_a64_crypto($/;"	f	typeref:typename:size_t	file:
mbedtls_internal_sha256_process_many_c	library/sha256.c	/^static size_t mbedtls_internal_sha256_process_many_c($/;"	f	typeref:typename:size_t	file:
mbedtls_internal_sha512_process	library/sha512.c	/^int mbedtls_internal_sha512_process(mbedtls_sha512_context *ctx,$/;"	f	typeref:typename:int
mbedtls_internal_sha512_process_a64_crypto	library/sha512.c	/^int mbedtls_internal_sha512_process_a64_crypto(mbedtls_sha512_context *ctx,$/;"	f	typeref:typename:int	file:
mbedtls_internal_sha512_process_c	library/sha512.c	/^int mbedtls_internal_sha512_process_c(mbedtls_sha512_context *ctx,$/;"	f	typeref:typename:int	file:
mbedtls_internal_sha512_process_many	library/sha512.c	/^static size_t mbedtls_internal_sha512_process_many(mbedtls_sha512_context *ctx,$/;"	f	typeref:typename:size_t	file:
mbedtls_internal_sha512_process_many_a64_crypto	library/sha512.c	/^static size_t mbedtls_internal_sha512_process_many_a64_crypto($/;"	f	typeref:typename:size_t	file:
mbedtls_internal_sha512_process_many_c	library/sha512.c	/^static size_t mbedtls_internal_sha512_process_many_c($/;"	f	typeref:typename:size_t	file:
mbedtls_key_owner_id_equal	include/psa/crypto_platform.h	/^static inline int mbedtls_key_owner_id_equal(mbedtls_key_owner_id_t id1,$/;"	f	typeref:typename:int
mbedtls_lmots_calculate_public_key	library/lmots.c	/^int mbedtls_lmots_calculate_public_key(mbedtls_lmots_public_t *ctx,$/;"	f	typeref:typename:int
mbedtls_lmots_calculate_public_key_candidate	library/lmots.c	/^int mbedtls_lmots_calculate_public_key_candidate(const mbedtls_lmots_parameters_t *params,$/;"	f	typeref:typename:int
mbedtls_lmots_export_public_key	library/lmots.c	/^int mbedtls_lmots_export_public_key(const mbedtls_lmots_public_t *ctx,$/;"	f	typeref:typename:int
mbedtls_lmots_generate_private_key	library/lmots.c	/^int mbedtls_lmots_generate_private_key(mbedtls_lmots_private_t *ctx,$/;"	f	typeref:typename:int
mbedtls_lmots_import_public_key	library/lmots.c	/^int mbedtls_lmots_import_public_key(mbedtls_lmots_public_t *ctx,$/;"	f	typeref:typename:int
mbedtls_lmots_private_free	library/lmots.c	/^void mbedtls_lmots_private_free(mbedtls_lmots_private_t *ctx)$/;"	f	typeref:typename:void
mbedtls_lmots_private_init	library/lmots.c	/^void mbedtls_lmots_private_init(mbedtls_lmots_private_t *ctx)$/;"	f	typeref:typename:void
mbedtls_lmots_public_free	library/lmots.c	/^void mbedtls_lmots_public_free(mbedtls_lmots_public_t *ctx)$/;"	f	typeref:typename:void
mbedtls_lmots_public_init	library/lmots.c	/^void mbedtls_lmots_public_init(mbedtls_lmots_public_t *ctx)$/;"	f	typeref:typename:void
mbedtls_lmots_sign	library/lmots.c	/^int mbedtls_lmots_sign(mbedtls_lmots_private_t *ctx,$/;"	f	typeref:typename:int
mbedtls_lmots_verify	library/lmots.c	/^int mbedtls_lmots_verify(const mbedtls_lmots_public_t *ctx,$/;"	f	typeref:typename:int
mbedtls_lms_calculate_public_key	library/lms.c	/^int mbedtls_lms_calculate_public_key(mbedtls_lms_public_t *ctx,$/;"	f	typeref:typename:int
mbedtls_lms_error_from_psa	library/lmots.c	/^int mbedtls_lms_error_from_psa(psa_status_t status)$/;"	f	typeref:typename:int
mbedtls_lms_export_public_key	library/lms.c	/^int mbedtls_lms_export_public_key(const mbedtls_lms_public_t *ctx,$/;"	f	typeref:typename:int
mbedtls_lms_generate_private_key	library/lms.c	/^int mbedtls_lms_generate_private_key(mbedtls_lms_private_t *ctx,$/;"	f	typeref:typename:int
mbedtls_lms_import_public_key	library/lms.c	/^int mbedtls_lms_import_public_key(mbedtls_lms_public_t *ctx,$/;"	f	typeref:typename:int
mbedtls_lms_private_free	library/lms.c	/^void mbedtls_lms_private_free(mbedtls_lms_private_t *ctx)$/;"	f	typeref:typename:void
mbedtls_lms_private_init	library/lms.c	/^void mbedtls_lms_private_init(mbedtls_lms_private_t *ctx)$/;"	f	typeref:typename:void
mbedtls_lms_public_free	library/lms.c	/^void mbedtls_lms_public_free(mbedtls_lms_public_t *ctx)$/;"	f	typeref:typename:void
mbedtls_lms_public_init	library/lms.c	/^void mbedtls_lms_public_init(mbedtls_lms_public_t *ctx)$/;"	f	typeref:typename:void
mbedtls_lms_sign	library/lms.c	/^int mbedtls_lms_sign(mbedtls_lms_private_t *ctx,$/;"	f	typeref:typename:int
mbedtls_lms_verify	library/lms.c	/^int mbedtls_lms_verify(const mbedtls_lms_public_t *ctx,$/;"	f	typeref:typename:int
mbedtls_md	library/md.c	/^int mbedtls_md(const mbedtls_md_info_t *md_info, const unsigned char *input, size_t ilen,$/;"	f	typeref:typename:int
mbedtls_md5	library/md5.c	/^int mbedtls_md5(const unsigned char *input,$/;"	f	typeref:typename:int
mbedtls_md5_clone	library/md5.c	/^void mbedtls_md5_clone(mbedtls_md5_context *dst,$/;"	f	typeref:typename:void
mbedtls_md5_finish	library/md5.c	/^int mbedtls_md5_finish(mbedtls_md5_context *ctx,$/;"	f	typeref:typename:int
mbedtls_md5_free	library/md5.c	/^void mbedtls_md5_free(mbedtls_md5_context *ctx)$/;"	f	typeref:typename:void
mbedtls_md5_init	library/md5.c	/^void mbedtls_md5_init(mbedtls_md5_context *ctx)$/;"	f	typeref:typename:void
mbedtls_md5_self_test	library/md5.c	/^int mbedtls_md5_self_test(int verbose)$/;"	f	typeref:typename:int
mbedtls_md5_starts	library/md5.c	/^int mbedtls_md5_starts(mbedtls_md5_context *ctx)$/;"	f	typeref:typename:int
mbedtls_md5_update	library/md5.c	/^int mbedtls_md5_update(mbedtls_md5_context *ctx,$/;"	f	typeref:typename:int
mbedtls_md_clone	library/md.c	/^int mbedtls_md_clone(mbedtls_md_context_t *dst,$/;"	f	typeref:typename:int
mbedtls_md_error_from_psa	library/md.c	/^int mbedtls_md_error_from_psa(psa_status_t status)$/;"	f	typeref:typename:int
mbedtls_md_file	library/md.c	/^int mbedtls_md_file(const mbedtls_md_info_t *md_info, const char *path, unsigned char *output)$/;"	f	typeref:typename:int
mbedtls_md_finish	library/md.c	/^int mbedtls_md_finish(mbedtls_md_context_t *ctx, unsigned char *output)$/;"	f	typeref:typename:int
mbedtls_md_free	library/md.c	/^void mbedtls_md_free(mbedtls_md_context_t *ctx)$/;"	f	typeref:typename:void
mbedtls_md_get_name	library/md.c	/^const char *mbedtls_md_get_name(const mbedtls_md_info_t *md_info)$/;"	f	typeref:typename:const char *
mbedtls_md_get_size	library/md.c	/^unsigned char mbedtls_md_get_size(const mbedtls_md_info_t *md_info)$/;"	f	typeref:typename:unsigned char
mbedtls_md_get_size_from_type	include/mbedtls/md.h	/^static inline unsigned char mbedtls_md_get_size_from_type(mbedtls_md_type_t md_type)$/;"	f	typeref:typename:unsigned char
mbedtls_md_get_type	library/md.c	/^mbedtls_md_type_t mbedtls_md_get_type(const mbedtls_md_info_t *md_info)$/;"	f	typeref:typename:mbedtls_md_type_t
mbedtls_md_hmac	library/md.c	/^int mbedtls_md_hmac(const mbedtls_md_info_t *md_info,$/;"	f	typeref:typename:int
mbedtls_md_hmac_finish	library/md.c	/^int mbedtls_md_hmac_finish(mbedtls_md_context_t *ctx, unsigned char *output)$/;"	f	typeref:typename:int
mbedtls_md_hmac_reset	library/md.c	/^int mbedtls_md_hmac_reset(mbedtls_md_context_t *ctx)$/;"	f	typeref:typename:int
mbedtls_md_hmac_starts	library/md.c	/^int mbedtls_md_hmac_starts(mbedtls_md_context_t *ctx, const unsigned char *key, size_t keylen)$/;"	f	typeref:typename:int
mbedtls_md_hmac_update	library/md.c	/^int mbedtls_md_hmac_update(mbedtls_md_context_t *ctx, const unsigned char *input, size_t ilen)$/;"	f	typeref:typename:int
mbedtls_md_info_from_ctx	library/md.c	/^const mbedtls_md_info_t *mbedtls_md_info_from_ctx($/;"	f	typeref:typename:const mbedtls_md_info_t *
mbedtls_md_info_from_string	library/md.c	/^const mbedtls_md_info_t *mbedtls_md_info_from_string(const char *md_name)$/;"	f	typeref:typename:const mbedtls_md_info_t *
mbedtls_md_info_from_type	library/md.c	/^const mbedtls_md_info_t *mbedtls_md_info_from_type(mbedtls_md_type_t md_type)$/;"	f	typeref:typename:const mbedtls_md_info_t *
mbedtls_md_init	library/md.c	/^void mbedtls_md_init(mbedtls_md_context_t *ctx)$/;"	f	typeref:typename:void
mbedtls_md_list	library/md.c	/^const int *mbedtls_md_list(void)$/;"	f	typeref:typename:const int *
mbedtls_md_psa_alg_from_type	library/md_psa.h	/^static inline psa_algorithm_t mbedtls_md_psa_alg_from_type(mbedtls_md_type_t md_type)$/;"	f	typeref:typename:psa_algorithm_t
mbedtls_md_setup	library/md.c	/^int mbedtls_md_setup(mbedtls_md_context_t *ctx, const mbedtls_md_info_t *md_info, int hmac)$/;"	f	typeref:typename:int
mbedtls_md_starts	library/md.c	/^int mbedtls_md_starts(mbedtls_md_context_t *ctx)$/;"	f	typeref:typename:int
mbedtls_md_type_from_psa_alg	library/md_psa.h	/^static inline mbedtls_md_type_t mbedtls_md_type_from_psa_alg(psa_algorithm_t psa_alg)$/;"	f	typeref:typename:mbedtls_md_type_t
mbedtls_md_update	library/md.c	/^int mbedtls_md_update(mbedtls_md_context_t *ctx, const unsigned char *input, size_t ilen)$/;"	f	typeref:typename:int
mbedtls_memory_buffer_alloc_count_get	library/memory_buffer_alloc.c	/^void mbedtls_memory_buffer_alloc_count_get(size_t *alloc_count, size_t *free_count)$/;"	f	typeref:typename:void
mbedtls_memory_buffer_alloc_cur_get	library/memory_buffer_alloc.c	/^void mbedtls_memory_buffer_alloc_cur_get(size_t *cur_used, size_t *cur_blocks)$/;"	f	typeref:typename:void
mbedtls_memory_buffer_alloc_free	library/memory_buffer_alloc.c	/^void mbedtls_memory_buffer_alloc_free(void)$/;"	f	typeref:typename:void
mbedtls_memory_buffer_alloc_free_and_self_test	programs/test/selftest.c	/^int mbedtls_memory_buffer_alloc_free_and_self_test(int verbose)$/;"	f	typeref:typename:int
mbedtls_memory_buffer_alloc_init	library/memory_buffer_alloc.c	/^void mbedtls_memory_buffer_alloc_init(unsigned char *buf, size_t len)$/;"	f	typeref:typename:void
mbedtls_memory_buffer_alloc_max_get	library/memory_buffer_alloc.c	/^void mbedtls_memory_buffer_alloc_max_get(size_t *max_used, size_t *max_blocks)$/;"	f	typeref:typename:void
mbedtls_memory_buffer_alloc_max_reset	library/memory_buffer_alloc.c	/^void mbedtls_memory_buffer_alloc_max_reset(void)$/;"	f	typeref:typename:void
mbedtls_memory_buffer_alloc_self_test	library/memory_buffer_alloc.c	/^int mbedtls_memory_buffer_alloc_self_test(int verbose)$/;"	f	typeref:typename:int
mbedtls_memory_buffer_alloc_status	library/memory_buffer_alloc.c	/^void mbedtls_memory_buffer_alloc_status(void)$/;"	f	typeref:typename:void
mbedtls_memory_buffer_alloc_verify	library/memory_buffer_alloc.c	/^int mbedtls_memory_buffer_alloc_verify(void)$/;"	f	typeref:typename:int
mbedtls_memory_buffer_set_verify	library/memory_buffer_alloc.c	/^void mbedtls_memory_buffer_set_verify(int verify)$/;"	f	typeref:typename:void
mbedtls_mpi_add_abs	library/bignum.c	/^int mbedtls_mpi_add_abs(mbedtls_mpi *X, const mbedtls_mpi *A, const mbedtls_mpi *B)$/;"	f	typeref:typename:int
mbedtls_mpi_add_int	library/bignum.c	/^int mbedtls_mpi_add_int(mbedtls_mpi *X, const mbedtls_mpi *A, mbedtls_mpi_sint b)$/;"	f	typeref:typename:int
mbedtls_mpi_add_mod	library/ecp.c	/^static inline int mbedtls_mpi_add_mod(const mbedtls_ecp_group *grp,$/;"	f	typeref:typename:int	file:
mbedtls_mpi_add_mpi	library/bignum.c	/^int mbedtls_mpi_add_mpi(mbedtls_mpi *X, const mbedtls_mpi *A, const mbedtls_mpi *B)$/;"	f	typeref:typename:int
mbedtls_mpi_bitlen	library/bignum.c	/^size_t mbedtls_mpi_bitlen(const mbedtls_mpi *X)$/;"	f	typeref:typename:size_t
mbedtls_mpi_cmp_abs	library/bignum.c	/^int mbedtls_mpi_cmp_abs(const mbedtls_mpi *X, const mbedtls_mpi *Y)$/;"	f	typeref:typename:int
mbedtls_mpi_cmp_int	library/bignum.c	/^int mbedtls_mpi_cmp_int(const mbedtls_mpi *X, mbedtls_mpi_sint z)$/;"	f	typeref:typename:int
mbedtls_mpi_cmp_mpi	library/bignum.c	/^int mbedtls_mpi_cmp_mpi(const mbedtls_mpi *X, const mbedtls_mpi *Y)$/;"	f	typeref:typename:int
mbedtls_mpi_copy	library/bignum.c	/^int mbedtls_mpi_copy(mbedtls_mpi *X, const mbedtls_mpi *Y)$/;"	f	typeref:typename:int
mbedtls_mpi_core_add	library/bignum_core.c	/^mbedtls_mpi_uint mbedtls_mpi_core_add(mbedtls_mpi_uint *X,$/;"	f	typeref:typename:mbedtls_mpi_uint
mbedtls_mpi_core_add_if	library/bignum_core.c	/^mbedtls_mpi_uint mbedtls_mpi_core_add_if(mbedtls_mpi_uint *X,$/;"	f	typeref:typename:mbedtls_mpi_uint
mbedtls_mpi_core_bigendian_to_host	library/bignum_core.c	/^void mbedtls_mpi_core_bigendian_to_host(mbedtls_mpi_uint *A,$/;"	f	typeref:typename:void
mbedtls_mpi_core_bitlen	library/bignum_core.c	/^size_t mbedtls_mpi_core_bitlen(const mbedtls_mpi_uint *A, size_t A_limbs)$/;"	f	typeref:typename:size_t
mbedtls_mpi_core_check_zero_ct	library/bignum_core.c	/^mbedtls_mpi_uint mbedtls_mpi_core_check_zero_ct(const mbedtls_mpi_uint *A,$/;"	f	typeref:typename:mbedtls_mpi_uint
mbedtls_mpi_core_clz	library/bignum_core.c	/^size_t mbedtls_mpi_core_clz(mbedtls_mpi_uint a)$/;"	f	typeref:typename:size_t
mbedtls_mpi_core_cond_assign	library/bignum_core.c	/^void mbedtls_mpi_core_cond_assign(mbedtls_mpi_uint *X,$/;"	f	typeref:typename:void
mbedtls_mpi_core_cond_swap	library/bignum_core.c	/^void mbedtls_mpi_core_cond_swap(mbedtls_mpi_uint *X,$/;"	f	typeref:typename:void
mbedtls_mpi_core_ct_uint_table_lookup	library/bignum_core.c	/^void mbedtls_mpi_core_ct_uint_table_lookup(mbedtls_mpi_uint *dest,$/;"	f	typeref:typename:MBEDTLS_STATIC_TESTABLE void
mbedtls_mpi_core_exp_mod	library/bignum_core.c	/^void mbedtls_mpi_core_exp_mod(mbedtls_mpi_uint *X,$/;"	f	typeref:typename:void
mbedtls_mpi_core_exp_mod_working_limbs	library/bignum_core.c	/^size_t mbedtls_mpi_core_exp_mod_working_limbs(size_t AN_limbs, size_t E_limbs)$/;"	f	typeref:typename:size_t
mbedtls_mpi_core_fill_random	library/bignum_core.c	/^int mbedtls_mpi_core_fill_random($/;"	f	typeref:typename:int
mbedtls_mpi_core_from_mont_rep	library/bignum_core.c	/^void mbedtls_mpi_core_from_mont_rep(mbedtls_mpi_uint *X,$/;"	f	typeref:typename:void
mbedtls_mpi_core_get_mont_r2_unsafe	library/bignum_core.c	/^int mbedtls_mpi_core_get_mont_r2_unsafe(mbedtls_mpi *X,$/;"	f	typeref:typename:int
mbedtls_mpi_core_lt_ct	library/bignum_core.c	/^mbedtls_ct_condition_t mbedtls_mpi_core_lt_ct(const mbedtls_mpi_uint *A,$/;"	f	typeref:typename:mbedtls_ct_condition_t
mbedtls_mpi_core_mla	library/bignum_core.c	/^mbedtls_mpi_uint mbedtls_mpi_core_mla(mbedtls_mpi_uint *d, size_t d_len,$/;"	f	typeref:typename:mbedtls_mpi_uint
mbedtls_mpi_core_montmul	library/bignum_core.c	/^void mbedtls_mpi_core_montmul(mbedtls_mpi_uint *X,$/;"	f	typeref:typename:void
mbedtls_mpi_core_montmul_init	library/bignum_core.c	/^mbedtls_mpi_uint mbedtls_mpi_core_montmul_init(const mbedtls_mpi_uint *N)$/;"	f	typeref:typename:mbedtls_mpi_uint
mbedtls_mpi_core_montmul_working_limbs	library/bignum_core.h	/^static inline size_t mbedtls_mpi_core_montmul_working_limbs(size_t AN_limbs)$/;"	f	typeref:typename:size_t
mbedtls_mpi_core_mul	library/bignum_core.c	/^void mbedtls_mpi_core_mul(mbedtls_mpi_uint *X,$/;"	f	typeref:typename:void
mbedtls_mpi_core_random	library/bignum_core.c	/^int mbedtls_mpi_core_random(mbedtls_mpi_uint *X,$/;"	f	typeref:typename:int
mbedtls_mpi_core_read_be	library/bignum_core.c	/^int mbedtls_mpi_core_read_be(mbedtls_mpi_uint *X,$/;"	f	typeref:typename:int
mbedtls_mpi_core_read_le	library/bignum_core.c	/^int mbedtls_mpi_core_read_le(mbedtls_mpi_uint *X,$/;"	f	typeref:typename:int
mbedtls_mpi_core_shift_l	library/bignum_core.c	/^void mbedtls_mpi_core_shift_l(mbedtls_mpi_uint *X, size_t limbs,$/;"	f	typeref:typename:void
mbedtls_mpi_core_shift_r	library/bignum_core.c	/^void mbedtls_mpi_core_shift_r(mbedtls_mpi_uint *X, size_t limbs,$/;"	f	typeref:typename:void
mbedtls_mpi_core_sub	library/bignum_core.c	/^mbedtls_mpi_uint mbedtls_mpi_core_sub(mbedtls_mpi_uint *X,$/;"	f	typeref:typename:mbedtls_mpi_uint
mbedtls_mpi_core_sub_int	library/bignum_core.c	/^mbedtls_mpi_uint mbedtls_mpi_core_sub_int(mbedtls_mpi_uint *X,$/;"	f	typeref:typename:mbedtls_mpi_uint
mbedtls_mpi_core_to_mont_rep	library/bignum_core.c	/^void mbedtls_mpi_core_to_mont_rep(mbedtls_mpi_uint *X,$/;"	f	typeref:typename:void
mbedtls_mpi_core_uint_le_mpi	library/bignum_core.c	/^mbedtls_ct_condition_t mbedtls_mpi_core_uint_le_mpi(mbedtls_mpi_uint min,$/;"	f	typeref:typename:mbedtls_ct_condition_t
mbedtls_mpi_core_write_be	library/bignum_core.c	/^int mbedtls_mpi_core_write_be(const mbedtls_mpi_uint *X,$/;"	f	typeref:typename:int
mbedtls_mpi_core_write_le	library/bignum_core.c	/^int mbedtls_mpi_core_write_le(const mbedtls_mpi_uint *A,$/;"	f	typeref:typename:int
mbedtls_mpi_div_int	library/bignum.c	/^int mbedtls_mpi_div_int(mbedtls_mpi *Q, mbedtls_mpi *R,$/;"	f	typeref:typename:int
mbedtls_mpi_div_mpi	library/bignum.c	/^int mbedtls_mpi_div_mpi(mbedtls_mpi *Q, mbedtls_mpi *R, const mbedtls_mpi *A,$/;"	f	typeref:typename:int
mbedtls_mpi_exp_mod	library/bignum.c	/^int mbedtls_mpi_exp_mod(mbedtls_mpi *X, const mbedtls_mpi *A,$/;"	f	typeref:typename:int
mbedtls_mpi_fill_random	library/bignum.c	/^int mbedtls_mpi_fill_random(mbedtls_mpi *X, size_t size,$/;"	f	typeref:typename:int
mbedtls_mpi_free	library/bignum.c	/^void mbedtls_mpi_free(mbedtls_mpi *X)$/;"	f	typeref:typename:void
mbedtls_mpi_gcd	library/bignum.c	/^int mbedtls_mpi_gcd(mbedtls_mpi *G, const mbedtls_mpi *A, const mbedtls_mpi *B)$/;"	f	typeref:typename:int
mbedtls_mpi_gen_prime	library/bignum.c	/^int mbedtls_mpi_gen_prime(mbedtls_mpi *X, size_t nbits, int flags,$/;"	f	typeref:typename:int
mbedtls_mpi_get_bit	library/bignum.c	/^int mbedtls_mpi_get_bit(const mbedtls_mpi *X, size_t pos)$/;"	f	typeref:typename:int
mbedtls_mpi_grow	library/bignum.c	/^int mbedtls_mpi_grow(mbedtls_mpi *X, size_t nblimbs)$/;"	f	typeref:typename:int
mbedtls_mpi_init	library/bignum.c	/^void mbedtls_mpi_init(mbedtls_mpi *X)$/;"	f	typeref:typename:void
mbedtls_mpi_inv_mod	library/bignum.c	/^int mbedtls_mpi_inv_mod(mbedtls_mpi *X, const mbedtls_mpi *A, const mbedtls_mpi *N)$/;"	f	typeref:typename:int
mbedtls_mpi_is_prime_ext	library/bignum.c	/^int mbedtls_mpi_is_prime_ext(const mbedtls_mpi *X, int rounds,$/;"	f	typeref:typename:int
mbedtls_mpi_lsb	library/bignum.c	/^size_t mbedtls_mpi_lsb(const mbedtls_mpi *X)$/;"	f	typeref:typename:size_t
mbedtls_mpi_lset	library/bignum.c	/^int mbedtls_mpi_lset(mbedtls_mpi *X, mbedtls_mpi_sint z)$/;"	f	typeref:typename:int
mbedtls_mpi_lt_mpi_ct	library/bignum.c	/^int mbedtls_mpi_lt_mpi_ct(const mbedtls_mpi *X,$/;"	f	typeref:typename:int
mbedtls_mpi_mod_add	library/bignum_mod.c	/^int mbedtls_mpi_mod_add(mbedtls_mpi_mod_residue *X,$/;"	f	typeref:typename:int
mbedtls_mpi_mod_int	library/bignum.c	/^int mbedtls_mpi_mod_int(mbedtls_mpi_uint *r, const mbedtls_mpi *A, mbedtls_mpi_sint b)$/;"	f	typeref:typename:int
mbedtls_mpi_mod_inv	library/bignum_mod.c	/^int mbedtls_mpi_mod_inv(mbedtls_mpi_mod_residue *X,$/;"	f	typeref:typename:int
mbedtls_mpi_mod_inv_mont	library/bignum_mod.c	/^static int mbedtls_mpi_mod_inv_mont(mbedtls_mpi_mod_residue *X,$/;"	f	typeref:typename:int	file:
mbedtls_mpi_mod_inv_non_mont	library/bignum_mod.c	/^static int mbedtls_mpi_mod_inv_non_mont(mbedtls_mpi_mod_residue *X,$/;"	f	typeref:typename:int	file:
mbedtls_mpi_mod_modulus_free	library/bignum_mod.c	/^void mbedtls_mpi_mod_modulus_free(mbedtls_mpi_mod_modulus *N)$/;"	f	typeref:typename:void
mbedtls_mpi_mod_modulus_init	library/bignum_mod.c	/^void mbedtls_mpi_mod_modulus_init(mbedtls_mpi_mod_modulus *N)$/;"	f	typeref:typename:void
mbedtls_mpi_mod_modulus_setup	library/bignum_mod.c	/^int mbedtls_mpi_mod_modulus_setup(mbedtls_mpi_mod_modulus *N,$/;"	f	typeref:typename:int
mbedtls_mpi_mod_mpi	library/bignum.c	/^int mbedtls_mpi_mod_mpi(mbedtls_mpi *R, const mbedtls_mpi *A, const mbedtls_mpi *B)$/;"	f	typeref:typename:int
mbedtls_mpi_mod_mul	library/bignum_mod.c	/^int mbedtls_mpi_mod_mul(mbedtls_mpi_mod_residue *X,$/;"	f	typeref:typename:int
mbedtls_mpi_mod_optred_modulus_setup	library/bignum_mod.c	/^int mbedtls_mpi_mod_optred_modulus_setup(mbedtls_mpi_mod_modulus *N,$/;"	f	typeref:typename:int
mbedtls_mpi_mod_random	library/bignum_mod.c	/^int mbedtls_mpi_mod_random(mbedtls_mpi_mod_residue *X,$/;"	f	typeref:typename:int
mbedtls_mpi_mod_raw_add	library/bignum_mod_raw.c	/^void mbedtls_mpi_mod_raw_add(mbedtls_mpi_uint *X,$/;"	f	typeref:typename:void
mbedtls_mpi_mod_raw_canonical_to_modulus_rep	library/bignum_mod_raw.c	/^int mbedtls_mpi_mod_raw_canonical_to_modulus_rep($/;"	f	typeref:typename:int
mbedtls_mpi_mod_raw_cond_assign	library/bignum_mod_raw.c	/^void mbedtls_mpi_mod_raw_cond_assign(mbedtls_mpi_uint *X,$/;"	f	typeref:typename:void
mbedtls_mpi_mod_raw_cond_swap	library/bignum_mod_raw.c	/^void mbedtls_mpi_mod_raw_cond_swap(mbedtls_mpi_uint *X,$/;"	f	typeref:typename:void
mbedtls_mpi_mod_raw_fix_quasi_reduction	library/bignum_mod_raw.c	/^void mbedtls_mpi_mod_raw_fix_quasi_reduction(mbedtls_mpi_uint *X,$/;"	f	typeref:typename:MBEDTLS_STATIC_TESTABLE void
mbedtls_mpi_mod_raw_from_mont_rep	library/bignum_mod_raw.c	/^int mbedtls_mpi_mod_raw_from_mont_rep(mbedtls_mpi_uint *X,$/;"	f	typeref:typename:int
mbedtls_mpi_mod_raw_inv_prime	library/bignum_mod_raw.c	/^void mbedtls_mpi_mod_raw_inv_prime(mbedtls_mpi_uint *X,$/;"	f	typeref:typename:void
mbedtls_mpi_mod_raw_inv_prime_working_limbs	library/bignum_mod_raw.c	/^size_t mbedtls_mpi_mod_raw_inv_prime_working_limbs(size_t AN_limbs)$/;"	f	typeref:typename:size_t
mbedtls_mpi_mod_raw_modulus_to_canonical_rep	library/bignum_mod_raw.c	/^int mbedtls_mpi_mod_raw_modulus_to_canonical_rep($/;"	f	typeref:typename:int
mbedtls_mpi_mod_raw_mul	library/bignum_mod_raw.c	/^void mbedtls_mpi_mod_raw_mul(mbedtls_mpi_uint *X,$/;"	f	typeref:typename:void
mbedtls_mpi_mod_raw_neg	library/bignum_mod_raw.c	/^void mbedtls_mpi_mod_raw_neg(mbedtls_mpi_uint *X,$/;"	f	typeref:typename:void
mbedtls_mpi_mod_raw_random	library/bignum_mod_raw.c	/^int mbedtls_mpi_mod_raw_random(mbedtls_mpi_uint *X,$/;"	f	typeref:typename:int
mbedtls_mpi_mod_raw_read	library/bignum_mod_raw.c	/^int mbedtls_mpi_mod_raw_read(mbedtls_mpi_uint *X,$/;"	f	typeref:typename:int
mbedtls_mpi_mod_raw_sub	library/bignum_mod_raw.c	/^void mbedtls_mpi_mod_raw_sub(mbedtls_mpi_uint *X,$/;"	f	typeref:typename:void
mbedtls_mpi_mod_raw_to_mont_rep	library/bignum_mod_raw.c	/^int mbedtls_mpi_mod_raw_to_mont_rep(mbedtls_mpi_uint *X,$/;"	f	typeref:typename:int
mbedtls_mpi_mod_raw_write	library/bignum_mod_raw.c	/^int mbedtls_mpi_mod_raw_write(const mbedtls_mpi_uint *A,$/;"	f	typeref:typename:int
mbedtls_mpi_mod_read	library/bignum_mod.c	/^int mbedtls_mpi_mod_read(mbedtls_mpi_mod_residue *r,$/;"	f	typeref:typename:int
mbedtls_mpi_mod_residue_release	library/bignum_mod.c	/^void mbedtls_mpi_mod_residue_release(mbedtls_mpi_mod_residue *r)$/;"	f	typeref:typename:void
mbedtls_mpi_mod_residue_setup	library/bignum_mod.c	/^int mbedtls_mpi_mod_residue_setup(mbedtls_mpi_mod_residue *r,$/;"	f	typeref:typename:int
mbedtls_mpi_mod_sub	library/bignum_mod.c	/^int mbedtls_mpi_mod_sub(mbedtls_mpi_mod_residue *X,$/;"	f	typeref:typename:int
mbedtls_mpi_mod_write	library/bignum_mod.c	/^int mbedtls_mpi_mod_write(const mbedtls_mpi_mod_residue *r,$/;"	f	typeref:typename:int
mbedtls_mpi_mul_int	library/bignum.c	/^int mbedtls_mpi_mul_int(mbedtls_mpi *X, const mbedtls_mpi *A, mbedtls_mpi_uint b)$/;"	f	typeref:typename:int
mbedtls_mpi_mul_int_mod	library/ecp.c	/^static inline int mbedtls_mpi_mul_int_mod(const mbedtls_ecp_group *grp,$/;"	f	typeref:typename:MBEDTLS_MAYBE_UNUSED int	file:
mbedtls_mpi_mul_mod	library/ecp.c	/^static inline int mbedtls_mpi_mul_mod(const mbedtls_ecp_group *grp,$/;"	f	typeref:typename:int	file:
mbedtls_mpi_mul_mpi	library/bignum.c	/^int mbedtls_mpi_mul_mpi(mbedtls_mpi *X, const mbedtls_mpi *A, const mbedtls_mpi *B)$/;"	f	typeref:typename:int
mbedtls_mpi_random	library/bignum.c	/^int mbedtls_mpi_random(mbedtls_mpi *X,$/;"	f	typeref:typename:int
mbedtls_mpi_read_binary	library/bignum.c	/^int mbedtls_mpi_read_binary(mbedtls_mpi *X, const unsigned char *buf, size_t buflen)$/;"	f	typeref:typename:int
mbedtls_mpi_read_binary_le	library/bignum.c	/^int mbedtls_mpi_read_binary_le(mbedtls_mpi *X,$/;"	f	typeref:typename:int
mbedtls_mpi_read_file	library/bignum.c	/^int mbedtls_mpi_read_file(mbedtls_mpi *X, int radix, FILE *fin)$/;"	f	typeref:typename:int
mbedtls_mpi_read_string	library/bignum.c	/^int mbedtls_mpi_read_string(mbedtls_mpi *X, int radix, const char *s)$/;"	f	typeref:typename:int
mbedtls_mpi_resize_clear	library/bignum.c	/^static int mbedtls_mpi_resize_clear(mbedtls_mpi *X, size_t limbs)$/;"	f	typeref:typename:int	file:
mbedtls_mpi_safe_cond_assign	library/bignum.c	/^int mbedtls_mpi_safe_cond_assign(mbedtls_mpi *X,$/;"	f	typeref:typename:int
mbedtls_mpi_safe_cond_swap	library/bignum.c	/^int mbedtls_mpi_safe_cond_swap(mbedtls_mpi *X,$/;"	f	typeref:typename:int
mbedtls_mpi_self_test	library/bignum.c	/^int mbedtls_mpi_self_test(int verbose)$/;"	f	typeref:typename:int
mbedtls_mpi_set_bit	library/bignum.c	/^int mbedtls_mpi_set_bit(mbedtls_mpi *X, size_t pos, unsigned char val)$/;"	f	typeref:typename:int
mbedtls_mpi_shift_l	library/bignum.c	/^int mbedtls_mpi_shift_l(mbedtls_mpi *X, size_t count)$/;"	f	typeref:typename:int
mbedtls_mpi_shift_l_mod	library/ecp.c	/^static inline int mbedtls_mpi_shift_l_mod(const mbedtls_ecp_group *grp,$/;"	f	typeref:typename:MBEDTLS_MAYBE_UNUSED int	file:
mbedtls_mpi_shift_r	library/bignum.c	/^int mbedtls_mpi_shift_r(mbedtls_mpi *X, size_t count)$/;"	f	typeref:typename:int
mbedtls_mpi_shrink	library/bignum.c	/^int mbedtls_mpi_shrink(mbedtls_mpi *X, size_t nblimbs)$/;"	f	typeref:typename:int
mbedtls_mpi_size	library/bignum.c	/^size_t mbedtls_mpi_size(const mbedtls_mpi *X)$/;"	f	typeref:typename:size_t
mbedtls_mpi_sub_abs	library/bignum.c	/^int mbedtls_mpi_sub_abs(mbedtls_mpi *X, const mbedtls_mpi *A, const mbedtls_mpi *B)$/;"	f	typeref:typename:int
mbedtls_mpi_sub_int	library/bignum.c	/^int mbedtls_mpi_sub_int(mbedtls_mpi *X, const mbedtls_mpi *A, mbedtls_mpi_sint b)$/;"	f	typeref:typename:int
mbedtls_mpi_sub_int_mod	library/ecp.c	/^static inline int mbedtls_mpi_sub_int_mod(const mbedtls_ecp_group *grp,$/;"	f	typeref:typename:MBEDTLS_MAYBE_UNUSED int	file:
mbedtls_mpi_sub_mod	library/ecp.c	/^static inline int mbedtls_mpi_sub_mod(const mbedtls_ecp_group *grp,$/;"	f	typeref:typename:MBEDTLS_MAYBE_UNUSED int	file:
mbedtls_mpi_sub_mpi	library/bignum.c	/^int mbedtls_mpi_sub_mpi(mbedtls_mpi *X, const mbedtls_mpi *A, const mbedtls_mpi *B)$/;"	f	typeref:typename:int
mbedtls_mpi_swap	library/bignum.c	/^void mbedtls_mpi_swap(mbedtls_mpi *X, mbedtls_mpi *Y)$/;"	f	typeref:typename:void
mbedtls_mpi_write_binary	library/bignum.c	/^int mbedtls_mpi_write_binary(const mbedtls_mpi *X,$/;"	f	typeref:typename:int
mbedtls_mpi_write_binary_le	library/bignum.c	/^int mbedtls_mpi_write_binary_le(const mbedtls_mpi *X,$/;"	f	typeref:typename:int
mbedtls_mpi_write_file	library/bignum.c	/^int mbedtls_mpi_write_file(const char *p, const mbedtls_mpi *X, int radix, FILE *fout)$/;"	f	typeref:typename:int
mbedtls_mpi_write_string	library/bignum.c	/^int mbedtls_mpi_write_string(const mbedtls_mpi *X, int radix,$/;"	f	typeref:typename:int
mbedtls_mps_reader_commit	library/mps_reader.c	/^int mbedtls_mps_reader_commit(mbedtls_mps_reader *rd)$/;"	f	typeref:typename:int
mbedtls_mps_reader_feed	library/mps_reader.c	/^int mbedtls_mps_reader_feed(mbedtls_mps_reader *rd,$/;"	f	typeref:typename:int
mbedtls_mps_reader_free	library/mps_reader.c	/^int mbedtls_mps_reader_free(mbedtls_mps_reader *rd)$/;"	f	typeref:typename:int
mbedtls_mps_reader_get	library/mps_reader.c	/^int mbedtls_mps_reader_get(mbedtls_mps_reader *rd,$/;"	f	typeref:typename:int
mbedtls_mps_reader_init	library/mps_reader.c	/^int mbedtls_mps_reader_init(mbedtls_mps_reader *rd,$/;"	f	typeref:typename:int
mbedtls_mps_reader_reclaim	library/mps_reader.c	/^int mbedtls_mps_reader_reclaim(mbedtls_mps_reader *rd,$/;"	f	typeref:typename:int
mbedtls_mps_trace_color	library/mps_trace.c	/^void mbedtls_mps_trace_color(int id)$/;"	f	typeref:typename:void
mbedtls_mps_trace_dec_depth	library/mps_trace.c	/^void mbedtls_mps_trace_dec_depth()$/;"	f	typeref:typename:void
mbedtls_mps_trace_get_depth	library/mps_trace.c	/^int mbedtls_mps_trace_get_depth()$/;"	f	typeref:typename:int
mbedtls_mps_trace_inc_depth	library/mps_trace.c	/^void mbedtls_mps_trace_inc_depth()$/;"	f	typeref:typename:void
mbedtls_mps_trace_indent	library/mps_trace.c	/^void mbedtls_mps_trace_indent(int level, mbedtls_mps_trace_type ty)$/;"	f	typeref:typename:void
mbedtls_mps_trace_print_msg	library/mps_trace.c	/^void mbedtls_mps_trace_print_msg(int id, int line, const char *format, ...)$/;"	f	typeref:typename:void
mbedtls_ms_time	library/platform_util.c	/^mbedtls_ms_time_t mbedtls_ms_time(void)$/;"	f	typeref:typename:mbedtls_ms_time_t
mbedtls_net_accept	library/net_sockets.c	/^int mbedtls_net_accept(mbedtls_net_context *bind_ctx,$/;"	f	typeref:typename:int
mbedtls_net_bind	library/net_sockets.c	/^int mbedtls_net_bind(mbedtls_net_context *ctx, const char *bind_ip, const char *port, int proto)$/;"	f	typeref:typename:int
mbedtls_net_close	library/net_sockets.c	/^void mbedtls_net_close(mbedtls_net_context *ctx)$/;"	f	typeref:typename:void
mbedtls_net_connect	library/net_sockets.c	/^int mbedtls_net_connect(mbedtls_net_context *ctx, const char *host,$/;"	f	typeref:typename:int
mbedtls_net_free	library/net_sockets.c	/^void mbedtls_net_free(mbedtls_net_context *ctx)$/;"	f	typeref:typename:void
mbedtls_net_init	library/net_sockets.c	/^void mbedtls_net_init(mbedtls_net_context *ctx)$/;"	f	typeref:typename:void
mbedtls_net_poll	library/net_sockets.c	/^int mbedtls_net_poll(mbedtls_net_context *ctx, uint32_t rw, uint32_t timeout)$/;"	f	typeref:typename:int
mbedtls_net_recv	library/net_sockets.c	/^int mbedtls_net_recv(void *ctx, unsigned char *buf, size_t len)$/;"	f	typeref:typename:int
mbedtls_net_recv_timeout	library/net_sockets.c	/^int mbedtls_net_recv_timeout(void *ctx, unsigned char *buf,$/;"	f	typeref:typename:int
mbedtls_net_send	library/net_sockets.c	/^int mbedtls_net_send(void *ctx, const unsigned char *buf, size_t len)$/;"	f	typeref:typename:int
mbedtls_net_set_block	library/net_sockets.c	/^int mbedtls_net_set_block(mbedtls_net_context *ctx)$/;"	f	typeref:typename:int
mbedtls_net_set_nonblock	library/net_sockets.c	/^int mbedtls_net_set_nonblock(mbedtls_net_context *ctx)$/;"	f	typeref:typename:int
mbedtls_net_usleep	library/net_sockets.c	/^void mbedtls_net_usleep(unsigned long usec)$/;"	f	typeref:typename:void
mbedtls_nist_kw_free	library/nist_kw.c	/^void mbedtls_nist_kw_free(mbedtls_nist_kw_context *ctx)$/;"	f	typeref:typename:void
mbedtls_nist_kw_init	library/nist_kw.c	/^void mbedtls_nist_kw_init(mbedtls_nist_kw_context *ctx)$/;"	f	typeref:typename:void
mbedtls_nist_kw_self_test	library/nist_kw.c	/^int mbedtls_nist_kw_self_test(int verbose)$/;"	f	typeref:typename:int
mbedtls_nist_kw_setkey	library/nist_kw.c	/^int mbedtls_nist_kw_setkey(mbedtls_nist_kw_context *ctx,$/;"	f	typeref:typename:int
mbedtls_nist_kw_unwrap	library/nist_kw.c	/^int mbedtls_nist_kw_unwrap(mbedtls_nist_kw_context *ctx,$/;"	f	typeref:typename:int
mbedtls_nist_kw_wrap	library/nist_kw.c	/^int mbedtls_nist_kw_wrap(mbedtls_nist_kw_context *ctx,$/;"	f	typeref:typename:int
mbedtls_nv_seed_poll	library/entropy_poll.c	/^int mbedtls_nv_seed_poll(void *data,$/;"	f	typeref:typename:int
mbedtls_oid_from_numeric_string	library/oid.c	/^int mbedtls_oid_from_numeric_string(mbedtls_asn1_buf *oid,$/;"	f	typeref:typename:int
mbedtls_padlock_has_support	library/padlock.c	/^int mbedtls_padlock_has_support(int feature)$/;"	f	typeref:typename:int
mbedtls_padlock_xcryptcbc	library/padlock.c	/^int mbedtls_padlock_xcryptcbc(mbedtls_aes_context *ctx,$/;"	f	typeref:typename:int
mbedtls_padlock_xcryptecb	library/padlock.c	/^int mbedtls_padlock_xcryptecb(mbedtls_aes_context *ctx,$/;"	f	typeref:typename:int
mbedtls_pem_free	library/pem.c	/^void mbedtls_pem_free(mbedtls_pem_context *ctx)$/;"	f	typeref:typename:void
mbedtls_pem_get_buffer	include/mbedtls/pem.h	/^static inline const unsigned char *mbedtls_pem_get_buffer(mbedtls_pem_context *ctx, size_t *bufl/;"	f	typeref:typename:const unsigned char *
mbedtls_pem_init	library/pem.c	/^void mbedtls_pem_init(mbedtls_pem_context *ctx)$/;"	f	typeref:typename:void
mbedtls_pem_read_buffer	library/pem.c	/^int mbedtls_pem_read_buffer(mbedtls_pem_context *ctx, const char *header, const char *footer,$/;"	f	typeref:typename:int
mbedtls_pem_write_buffer	library/pem.c	/^int mbedtls_pem_write_buffer(const char *header, const char *footer,$/;"	f	typeref:typename:int
mbedtls_pk_can_do	library/pk.c	/^int mbedtls_pk_can_do(const mbedtls_pk_context *ctx, mbedtls_pk_type_t type)$/;"	f	typeref:typename:int
mbedtls_pk_can_do_ext	library/pk.c	/^int mbedtls_pk_can_do_ext(const mbedtls_pk_context *ctx, psa_algorithm_t alg,$/;"	f	typeref:typename:int
mbedtls_pk_check_pair	library/pk.c	/^int mbedtls_pk_check_pair(const mbedtls_pk_context *pub,$/;"	f	typeref:typename:int
mbedtls_pk_debug	library/pk.c	/^int mbedtls_pk_debug(const mbedtls_pk_context *ctx, mbedtls_pk_debug_item *items)$/;"	f	typeref:typename:int
mbedtls_pk_decrypt	library/pk.c	/^int mbedtls_pk_decrypt(mbedtls_pk_context *ctx,$/;"	f	typeref:typename:int
mbedtls_pk_ec	include/mbedtls/pk.h	/^static inline mbedtls_ecp_keypair *mbedtls_pk_ec(const mbedtls_pk_context pk)$/;"	f	typeref:typename:mbedtls_ecp_keypair *
mbedtls_pk_ec_ro	library/pk_internal.h	/^static inline const mbedtls_ecp_keypair *mbedtls_pk_ec_ro(const mbedtls_pk_context pk)$/;"	f	typeref:typename:const mbedtls_ecp_keypair *
mbedtls_pk_ec_rw	library/pk_internal.h	/^static inline mbedtls_ecp_keypair *mbedtls_pk_ec_rw(const mbedtls_pk_context pk)$/;"	f	typeref:typename:mbedtls_ecp_keypair *
mbedtls_pk_encrypt	library/pk.c	/^int mbedtls_pk_encrypt(mbedtls_pk_context *ctx,$/;"	f	typeref:typename:int
mbedtls_pk_free	library/pk.c	/^void mbedtls_pk_free(mbedtls_pk_context *ctx)$/;"	f	typeref:typename:void
mbedtls_pk_get_bitlen	library/pk.c	/^size_t mbedtls_pk_get_bitlen(const mbedtls_pk_context *ctx)$/;"	f	typeref:typename:size_t
mbedtls_pk_get_ec_group_id	library/pk_internal.h	/^static inline mbedtls_ecp_group_id mbedtls_pk_get_ec_group_id(const mbedtls_pk_context *pk)$/;"	f	typeref:typename:mbedtls_ecp_group_id
mbedtls_pk_get_len	include/mbedtls/pk.h	/^static inline size_t mbedtls_pk_get_len(const mbedtls_pk_context *ctx)$/;"	f	typeref:typename:size_t
mbedtls_pk_get_name	library/pk.c	/^const char *mbedtls_pk_get_name(const mbedtls_pk_context *ctx)$/;"	f	typeref:typename:const char *
mbedtls_pk_get_type	library/pk.c	/^mbedtls_pk_type_t mbedtls_pk_get_type(const mbedtls_pk_context *ctx)$/;"	f	typeref:typename:mbedtls_pk_type_t
mbedtls_pk_info_from_type	library/pk.c	/^const mbedtls_pk_info_t *mbedtls_pk_info_from_type(mbedtls_pk_type_t pk_type)$/;"	f	typeref:typename:const mbedtls_pk_info_t *
mbedtls_pk_init	library/pk.c	/^void mbedtls_pk_init(mbedtls_pk_context *ctx)$/;"	f	typeref:typename:void
mbedtls_pk_is_rfc8410	library/pk_internal.h	/^static inline int mbedtls_pk_is_rfc8410(const mbedtls_pk_context *pk)$/;"	f	typeref:typename:int
mbedtls_pk_load_file	library/pkparse.c	/^int mbedtls_pk_load_file(const char *path, unsigned char **buf, size_t *n)$/;"	f	typeref:typename:int
mbedtls_pk_parse_key	library/pkparse.c	/^int mbedtls_pk_parse_key(mbedtls_pk_context *pk,$/;"	f	typeref:typename:int
mbedtls_pk_parse_key_pkcs8_encrypted_der	library/pkparse.c	/^MBEDTLS_STATIC_TESTABLE int mbedtls_pk_parse_key_pkcs8_encrypted_der($/;"	f	typeref:typename:MBEDTLS_STATIC_TESTABLE int
mbedtls_pk_parse_keyfile	library/pkparse.c	/^int mbedtls_pk_parse_keyfile(mbedtls_pk_context *ctx,$/;"	f	typeref:typename:int
mbedtls_pk_parse_public_key	library/pkparse.c	/^int mbedtls_pk_parse_public_key(mbedtls_pk_context *ctx,$/;"	f	typeref:typename:int
mbedtls_pk_parse_public_keyfile	library/pkparse.c	/^int mbedtls_pk_parse_public_keyfile(mbedtls_pk_context *ctx, const char *path)$/;"	f	typeref:typename:int
mbedtls_pk_parse_subpubkey	library/pkparse.c	/^int mbedtls_pk_parse_subpubkey(unsigned char **p, const unsigned char *end,$/;"	f	typeref:typename:int
mbedtls_pk_psa_rsa_sign_ext	library/pk_wrap.c	/^int  mbedtls_pk_psa_rsa_sign_ext(psa_algorithm_t alg,$/;"	f	typeref:typename:int
mbedtls_pk_restart_free	library/pk.c	/^void mbedtls_pk_restart_free(mbedtls_pk_restart_ctx *ctx)$/;"	f	typeref:typename:void
mbedtls_pk_restart_init	library/pk.c	/^void mbedtls_pk_restart_init(mbedtls_pk_restart_ctx *ctx)$/;"	f	typeref:typename:void
mbedtls_pk_rsa	include/mbedtls/pk.h	/^static inline mbedtls_rsa_context *mbedtls_pk_rsa(const mbedtls_pk_context pk)$/;"	f	typeref:typename:mbedtls_rsa_context *
mbedtls_pk_setup	library/pk.c	/^int mbedtls_pk_setup(mbedtls_pk_context *ctx, const mbedtls_pk_info_t *info)$/;"	f	typeref:typename:int
mbedtls_pk_setup_opaque	library/pk.c	/^int mbedtls_pk_setup_opaque(mbedtls_pk_context *ctx,$/;"	f	typeref:typename:int
mbedtls_pk_setup_rsa_alt	library/pk.c	/^int mbedtls_pk_setup_rsa_alt(mbedtls_pk_context *ctx, void *key,$/;"	f	typeref:typename:int
mbedtls_pk_sign	library/pk.c	/^int mbedtls_pk_sign(mbedtls_pk_context *ctx, mbedtls_md_type_t md_alg,$/;"	f	typeref:typename:int
mbedtls_pk_sign_ext	library/pk.c	/^int mbedtls_pk_sign_ext(mbedtls_pk_type_t pk_type,$/;"	f	typeref:typename:int
mbedtls_pk_sign_restartable	library/pk.c	/^int mbedtls_pk_sign_restartable(mbedtls_pk_context *ctx,$/;"	f	typeref:typename:int
mbedtls_pk_verify	library/pk.c	/^int mbedtls_pk_verify(mbedtls_pk_context *ctx, mbedtls_md_type_t md_alg,$/;"	f	typeref:typename:int
mbedtls_pk_verify_ext	library/pk.c	/^int mbedtls_pk_verify_ext(mbedtls_pk_type_t type, const void *options,$/;"	f	typeref:typename:int
mbedtls_pk_verify_restartable	library/pk.c	/^int mbedtls_pk_verify_restartable(mbedtls_pk_context *ctx,$/;"	f	typeref:typename:int
mbedtls_pk_wrap_as_opaque	library/pk.c	/^int mbedtls_pk_wrap_as_opaque(mbedtls_pk_context *pk,$/;"	f	typeref:typename:int
mbedtls_pk_write_key_der	library/pkwrite.c	/^int mbedtls_pk_write_key_der(const mbedtls_pk_context *key, unsigned char *buf, size_t size)$/;"	f	typeref:typename:int
mbedtls_pk_write_key_pem	library/pkwrite.c	/^int mbedtls_pk_write_key_pem(const mbedtls_pk_context *key, unsigned char *buf, size_t size)$/;"	f	typeref:typename:int
mbedtls_pk_write_pubkey	library/pkwrite.c	/^int mbedtls_pk_write_pubkey(unsigned char **p, unsigned char *start,$/;"	f	typeref:typename:int
mbedtls_pk_write_pubkey_der	library/pkwrite.c	/^int mbedtls_pk_write_pubkey_der(const mbedtls_pk_context *key, unsigned char *buf, size_t size)$/;"	f	typeref:typename:int
mbedtls_pk_write_pubkey_pem	library/pkwrite.c	/^int mbedtls_pk_write_pubkey_pem(const mbedtls_pk_context *key, unsigned char *buf, size_t size)$/;"	f	typeref:typename:int
mbedtls_pkcs12_derivation	library/pkcs12.c	/^int mbedtls_pkcs12_derivation(unsigned char *data, size_t datalen,$/;"	f	typeref:typename:int
mbedtls_pkcs12_pbe	library/pkcs12.c	/^int mbedtls_pkcs12_pbe(mbedtls_asn1_buf *pbe_params, int mode,$/;"	f	typeref:typename:int
mbedtls_pkcs12_pbe_ext	library/pkcs12.c	/^int mbedtls_pkcs12_pbe_ext(mbedtls_asn1_buf *pbe_params, int mode,$/;"	f	typeref:typename:int
mbedtls_pkcs5_pbes2	library/pkcs5.c	/^int mbedtls_pkcs5_pbes2(const mbedtls_asn1_buf *pbe_params, int mode,$/;"	f	typeref:typename:int
mbedtls_pkcs5_pbes2_ext	library/pkcs5.c	/^int mbedtls_pkcs5_pbes2_ext(const mbedtls_asn1_buf *pbe_params, int mode,$/;"	f	typeref:typename:int
mbedtls_pkcs5_pbkdf2_hmac	library/pkcs5.c	/^int mbedtls_pkcs5_pbkdf2_hmac(mbedtls_md_context_t *ctx,$/;"	f	typeref:typename:int
mbedtls_pkcs5_pbkdf2_hmac_ext	library/pkcs5.c	/^int mbedtls_pkcs5_pbkdf2_hmac_ext(mbedtls_md_type_t md_alg,$/;"	f	typeref:typename:int
mbedtls_pkcs5_self_test	library/pkcs5.c	/^int mbedtls_pkcs5_self_test(int verbose)$/;"	f	typeref:typename:int
mbedtls_pkcs7_data_or_hash_verify	library/pkcs7.c	/^static int mbedtls_pkcs7_data_or_hash_verify(mbedtls_pkcs7 *pkcs7,$/;"	f	typeref:typename:int	file:
mbedtls_pkcs7_free	library/pkcs7.c	/^void mbedtls_pkcs7_free(mbedtls_pkcs7 *pkcs7)$/;"	f	typeref:typename:void
mbedtls_pkcs7_init	library/pkcs7.c	/^void mbedtls_pkcs7_init(mbedtls_pkcs7 *pkcs7)$/;"	f	typeref:typename:void
mbedtls_pkcs7_parse_der	library/pkcs7.c	/^int mbedtls_pkcs7_parse_der(mbedtls_pkcs7 *pkcs7, const unsigned char *buf,$/;"	f	typeref:typename:int
mbedtls_pkcs7_signed_data_verify	library/pkcs7.c	/^int mbedtls_pkcs7_signed_data_verify(mbedtls_pkcs7 *pkcs7,$/;"	f	typeref:typename:int
mbedtls_pkcs7_signed_hash_verify	library/pkcs7.c	/^int mbedtls_pkcs7_signed_hash_verify(mbedtls_pkcs7 *pkcs7,$/;"	f	typeref:typename:int
mbedtls_platform_entropy_poll	library/entropy_poll.c	/^int mbedtls_platform_entropy_poll(void *data, unsigned char *output, size_t len,$/;"	f	typeref:typename:int
mbedtls_platform_entropy_poll	library/entropy_poll.c	/^int mbedtls_platform_entropy_poll(void *data,$/;"	f	typeref:typename:int
mbedtls_platform_gmtime_r	library/platform_util.c	/^struct tm *mbedtls_platform_gmtime_r(const mbedtls_time_t *tt,$/;"	f	typeref:struct:tm *
mbedtls_platform_set_calloc_free	library/platform.c	/^int mbedtls_platform_set_calloc_free(void *(*calloc_func)(size_t, size_t),$/;"	f	typeref:typename:int
mbedtls_platform_set_exit	library/platform.c	/^int mbedtls_platform_set_exit(void (*exit_func)(int status))$/;"	f	typeref:typename:int
mbedtls_platform_set_fprintf	library/platform.c	/^int mbedtls_platform_set_fprintf(int (*fprintf_func)(FILE *, const char *, ...))$/;"	f	typeref:typename:int
mbedtls_platform_set_nv_seed	library/platform.c	/^int mbedtls_platform_set_nv_seed($/;"	f	typeref:typename:int
mbedtls_platform_set_printf	library/platform.c	/^int mbedtls_platform_set_printf(int (*printf_func)(const char *, ...))$/;"	f	typeref:typename:int
mbedtls_platform_set_setbuf	library/platform.c	/^int mbedtls_platform_set_setbuf(void (*setbuf_func)(FILE *stream, char *buf))$/;"	f	typeref:typename:int
mbedtls_platform_set_snprintf	library/platform.c	/^int mbedtls_platform_set_snprintf(int (*snprintf_func)(char *s, size_t n,$/;"	f	typeref:typename:int
mbedtls_platform_set_time	library/platform.c	/^int mbedtls_platform_set_time(mbedtls_time_t (*time_func)(mbedtls_time_t *timer))$/;"	f	typeref:typename:int
mbedtls_platform_set_vsnprintf	library/platform.c	/^int mbedtls_platform_set_vsnprintf(int (*vsnprintf_func)(char *s, size_t n,$/;"	f	typeref:typename:int
mbedtls_platform_setup	library/platform.c	/^int mbedtls_platform_setup(mbedtls_platform_context *ctx)$/;"	f	typeref:typename:int
mbedtls_platform_std_nv_seed_read	library/platform.c	/^int mbedtls_platform_std_nv_seed_read(unsigned char *buf, size_t buf_len)$/;"	f	typeref:typename:int
mbedtls_platform_std_nv_seed_write	library/platform.c	/^int mbedtls_platform_std_nv_seed_write(unsigned char *buf, size_t buf_len)$/;"	f	typeref:typename:int
mbedtls_platform_teardown	library/platform.c	/^void mbedtls_platform_teardown(mbedtls_platform_context *ctx)$/;"	f	typeref:typename:void
mbedtls_platform_win32_snprintf	library/platform.c	/^int mbedtls_platform_win32_snprintf(char *s, size_t n, const char *fmt, ...)$/;"	f	typeref:typename:int
mbedtls_platform_win32_vsnprintf	library/platform.c	/^int mbedtls_platform_win32_vsnprintf(char *s, size_t n, const char *fmt, va_list arg)$/;"	f	typeref:typename:int
mbedtls_platform_zeroize	library/platform_util.c	/^void mbedtls_platform_zeroize(void *buf, size_t len)$/;"	f	typeref:typename:void
mbedtls_poly1305_finish	library/poly1305.c	/^int mbedtls_poly1305_finish(mbedtls_poly1305_context *ctx,$/;"	f	typeref:typename:int
mbedtls_poly1305_free	library/poly1305.c	/^void mbedtls_poly1305_free(mbedtls_poly1305_context *ctx)$/;"	f	typeref:typename:void
mbedtls_poly1305_init	library/poly1305.c	/^void mbedtls_poly1305_init(mbedtls_poly1305_context *ctx)$/;"	f	typeref:typename:void
mbedtls_poly1305_mac	library/poly1305.c	/^int mbedtls_poly1305_mac(const unsigned char key[32],$/;"	f	typeref:typename:int
mbedtls_poly1305_self_test	library/poly1305.c	/^int mbedtls_poly1305_self_test(int verbose)$/;"	f	typeref:typename:int
mbedtls_poly1305_starts	library/poly1305.c	/^int mbedtls_poly1305_starts(mbedtls_poly1305_context *ctx,$/;"	f	typeref:typename:int
mbedtls_poly1305_update	library/poly1305.c	/^int mbedtls_poly1305_update(mbedtls_poly1305_context *ctx,$/;"	f	typeref:typename:int
mbedtls_print_supported_sig_algs	programs/ssl/ssl_test_common_source.c	/^void mbedtls_print_supported_sig_algs(void)$/;"	f	typeref:typename:void
mbedtls_psa_aead_abort	library/psa_crypto_aead.c	/^psa_status_t mbedtls_psa_aead_abort($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_aead_decrypt	library/psa_crypto_aead.c	/^psa_status_t mbedtls_psa_aead_decrypt($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_aead_decrypt_setup	library/psa_crypto_aead.c	/^psa_status_t mbedtls_psa_aead_decrypt_setup($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_aead_encrypt	library/psa_crypto_aead.c	/^psa_status_t mbedtls_psa_aead_encrypt($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_aead_encrypt_setup	library/psa_crypto_aead.c	/^psa_status_t mbedtls_psa_aead_encrypt_setup($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_aead_finish	library/psa_crypto_aead.c	/^psa_status_t mbedtls_psa_aead_finish($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_aead_set_lengths	library/psa_crypto_aead.c	/^psa_status_t mbedtls_psa_aead_set_lengths($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_aead_set_nonce	library/psa_crypto_aead.c	/^psa_status_t mbedtls_psa_aead_set_nonce($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_aead_update	library/psa_crypto_aead.c	/^psa_status_t mbedtls_psa_aead_update($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_aead_update_ad	library/psa_crypto_aead.c	/^psa_status_t mbedtls_psa_aead_update_ad($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_asymmetric_decrypt	library/psa_crypto_rsa.c	/^psa_status_t mbedtls_psa_asymmetric_decrypt(const psa_key_attributes_t *attributes,$/;"	f	typeref:typename:psa_status_t
mbedtls_psa_asymmetric_encrypt	library/psa_crypto_rsa.c	/^psa_status_t mbedtls_psa_asymmetric_encrypt(const psa_key_attributes_t *attributes,$/;"	f	typeref:typename:psa_status_t
mbedtls_psa_cipher_abort	library/psa_crypto_cipher.c	/^psa_status_t mbedtls_psa_cipher_abort($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_cipher_decrypt	library/psa_crypto_cipher.c	/^psa_status_t mbedtls_psa_cipher_decrypt($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_cipher_decrypt_setup	library/psa_crypto_cipher.c	/^psa_status_t mbedtls_psa_cipher_decrypt_setup($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_cipher_encrypt	library/psa_crypto_cipher.c	/^psa_status_t mbedtls_psa_cipher_encrypt($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_cipher_encrypt_setup	library/psa_crypto_cipher.c	/^psa_status_t mbedtls_psa_cipher_encrypt_setup($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_cipher_finish	library/psa_crypto_cipher.c	/^psa_status_t mbedtls_psa_cipher_finish($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_cipher_set_iv	library/psa_crypto_cipher.c	/^psa_status_t mbedtls_psa_cipher_set_iv($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_cipher_update	library/psa_crypto_cipher.c	/^psa_status_t mbedtls_psa_cipher_update($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_crypto_configure_entropy_sources	library/psa_crypto.c	/^psa_status_t mbedtls_psa_crypto_configure_entropy_sources($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_crypto_free	library/psa_crypto.c	/^void mbedtls_psa_crypto_free(void)$/;"	f	typeref:typename:void
mbedtls_psa_drbg_free	library/psa_crypto_random_impl.h	/^static inline void mbedtls_psa_drbg_free(mbedtls_psa_drbg_context_t *p_rng)$/;"	f	typeref:typename:void
mbedtls_psa_drbg_init	library/psa_crypto_random_impl.h	/^static inline void mbedtls_psa_drbg_init(mbedtls_psa_drbg_context_t *p_rng)$/;"	f	typeref:typename:void
mbedtls_psa_drbg_seed	library/psa_crypto_random_impl.h	/^static inline int mbedtls_psa_drbg_seed($/;"	f	typeref:typename:int
mbedtls_psa_ecdsa_sign_hash	library/psa_crypto_ecp.c	/^psa_status_t mbedtls_psa_ecdsa_sign_hash($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_ecdsa_verify_hash	library/psa_crypto_ecp.c	/^psa_status_t mbedtls_psa_ecdsa_verify_hash($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_ecjpake_read_round	library/ssl_tls.c	/^int mbedtls_psa_ecjpake_read_round($/;"	f	typeref:typename:int
mbedtls_psa_ecjpake_write_round	library/ssl_tls.c	/^int mbedtls_psa_ecjpake_write_round($/;"	f	typeref:typename:int
mbedtls_psa_ecp_export_key	library/psa_crypto_ecp.c	/^psa_status_t mbedtls_psa_ecp_export_key(psa_key_type_t type,$/;"	f	typeref:typename:psa_status_t
mbedtls_psa_ecp_export_public_key	library/psa_crypto_ecp.c	/^psa_status_t mbedtls_psa_ecp_export_public_key($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_ecp_generate_key	library/psa_crypto_ecp.c	/^psa_status_t mbedtls_psa_ecp_generate_key($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_ecp_import_key	library/psa_crypto_ecp.c	/^psa_status_t mbedtls_psa_ecp_import_key($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_ecp_load_public_part	library/psa_crypto_ecp.c	/^psa_status_t mbedtls_psa_ecp_load_public_part(mbedtls_ecp_keypair *ecp)$/;"	f	typeref:typename:psa_status_t
mbedtls_psa_ecp_load_representation	library/psa_crypto_ecp.c	/^psa_status_t mbedtls_psa_ecp_load_representation($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_external_get_random	tests/src/fake_external_rng_for_test.c	/^psa_status_t mbedtls_psa_external_get_random($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_ffdh_export_public_key	library/psa_crypto_ffdh.c	/^psa_status_t mbedtls_psa_ffdh_export_public_key($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_ffdh_generate_key	library/psa_crypto_ffdh.c	/^psa_status_t mbedtls_psa_ffdh_generate_key($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_ffdh_import_key	library/psa_crypto_ffdh.c	/^psa_status_t mbedtls_psa_ffdh_import_key($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_ffdh_key_agreement	library/psa_crypto_ffdh.c	/^psa_status_t mbedtls_psa_ffdh_key_agreement($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_ffdh_set_prime_generator	library/psa_crypto_ffdh.c	/^static psa_status_t mbedtls_psa_ffdh_set_prime_generator(size_t key_size,$/;"	f	typeref:typename:psa_status_t	file:
mbedtls_psa_get_random	library/psa_crypto.c	/^int mbedtls_psa_get_random(void *p_rng,$/;"	f	typeref:typename:int
mbedtls_psa_get_stats	library/psa_crypto_slot_management.c	/^void mbedtls_psa_get_stats(mbedtls_psa_stats_t *stats)$/;"	f	typeref:typename:void
mbedtls_psa_hash_abort	library/psa_crypto_hash.c	/^psa_status_t mbedtls_psa_hash_abort($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_hash_clone	library/psa_crypto_hash.c	/^psa_status_t mbedtls_psa_hash_clone($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_hash_compute	library/psa_crypto_hash.c	/^psa_status_t mbedtls_psa_hash_compute($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_hash_finish	library/psa_crypto_hash.c	/^psa_status_t mbedtls_psa_hash_finish($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_hash_setup	library/psa_crypto_hash.c	/^psa_status_t mbedtls_psa_hash_setup($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_hash_update	library/psa_crypto_hash.c	/^psa_status_t mbedtls_psa_hash_update($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_inject_entropy	library/psa_crypto.c	/^psa_status_t mbedtls_psa_inject_entropy(const uint8_t *seed,$/;"	f	typeref:typename:psa_status_t
mbedtls_psa_interruptible_set_max_ops	library/psa_crypto.c	/^void mbedtls_psa_interruptible_set_max_ops(uint32_t max_ops)$/;"	f	typeref:typename:void
mbedtls_psa_key_agreement_ecdh	library/psa_crypto_ecp.c	/^psa_status_t mbedtls_psa_key_agreement_ecdh($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_mac_abort	library/psa_crypto_mac.c	/^psa_status_t mbedtls_psa_mac_abort(mbedtls_psa_mac_operation_t *operation)$/;"	f	typeref:typename:psa_status_t
mbedtls_psa_mac_compute	library/psa_crypto_mac.c	/^psa_status_t mbedtls_psa_mac_compute($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_mac_sign_finish	library/psa_crypto_mac.c	/^psa_status_t mbedtls_psa_mac_sign_finish($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_mac_sign_setup	library/psa_crypto_mac.c	/^psa_status_t mbedtls_psa_mac_sign_setup($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_mac_update	library/psa_crypto_mac.c	/^psa_status_t mbedtls_psa_mac_update($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_mac_verify_finish	library/psa_crypto_mac.c	/^psa_status_t mbedtls_psa_mac_verify_finish($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_mac_verify_setup	library/psa_crypto_mac.c	/^psa_status_t mbedtls_psa_mac_verify_setup($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_pake_abort	library/psa_crypto_pake.c	/^psa_status_t mbedtls_psa_pake_abort(mbedtls_psa_pake_operation_t *operation)$/;"	f	typeref:typename:psa_status_t
mbedtls_psa_pake_get_implicit_key	library/psa_crypto_pake.c	/^psa_status_t mbedtls_psa_pake_get_implicit_key($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_pake_input	library/psa_crypto_pake.c	/^psa_status_t mbedtls_psa_pake_input(mbedtls_psa_pake_operation_t *operation,$/;"	f	typeref:typename:psa_status_t
mbedtls_psa_pake_input_internal	library/psa_crypto_pake.c	/^static psa_status_t mbedtls_psa_pake_input_internal($/;"	f	typeref:typename:psa_status_t	file:
mbedtls_psa_pake_output	library/psa_crypto_pake.c	/^psa_status_t mbedtls_psa_pake_output(mbedtls_psa_pake_operation_t *operation,$/;"	f	typeref:typename:psa_status_t
mbedtls_psa_pake_output_internal	library/psa_crypto_pake.c	/^static psa_status_t mbedtls_psa_pake_output_internal($/;"	f	typeref:typename:psa_status_t	file:
mbedtls_psa_pake_setup	library/psa_crypto_pake.c	/^psa_status_t mbedtls_psa_pake_setup(mbedtls_psa_pake_operation_t *operation,$/;"	f	typeref:typename:psa_status_t
mbedtls_psa_platform_get_builtin_key	tests/src/drivers/platform_builtin_keys.c	/^psa_status_t mbedtls_psa_platform_get_builtin_key($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_random_free	library/psa_crypto.c	/^static void mbedtls_psa_random_free(mbedtls_psa_random_context_t *rng)$/;"	f	typeref:typename:void	file:
mbedtls_psa_random_init	library/psa_crypto.c	/^static void mbedtls_psa_random_init(mbedtls_psa_random_context_t *rng)$/;"	f	typeref:typename:void	file:
mbedtls_psa_random_seed	library/psa_crypto.c	/^static psa_status_t mbedtls_psa_random_seed(mbedtls_psa_random_context_t *rng)$/;"	f	typeref:typename:psa_status_t	file:
mbedtls_psa_register_se_key	library/psa_crypto.c	/^psa_status_t mbedtls_psa_register_se_key($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_rsa_export_key	library/psa_crypto_rsa.c	/^psa_status_t mbedtls_psa_rsa_export_key(psa_key_type_t type,$/;"	f	typeref:typename:psa_status_t
mbedtls_psa_rsa_export_public_key	library/psa_crypto_rsa.c	/^psa_status_t mbedtls_psa_rsa_export_public_key($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_rsa_generate_key	library/psa_crypto_rsa.c	/^psa_status_t mbedtls_psa_rsa_generate_key($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_rsa_import_key	library/psa_crypto_rsa.c	/^psa_status_t mbedtls_psa_rsa_import_key($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_rsa_load_representation	library/psa_crypto_rsa.c	/^psa_status_t mbedtls_psa_rsa_load_representation($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_rsa_sign_hash	library/psa_crypto_rsa.c	/^psa_status_t mbedtls_psa_rsa_sign_hash($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_rsa_verify_hash	library/psa_crypto_rsa.c	/^psa_status_t mbedtls_psa_rsa_verify_hash($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_sign_hash_abort	library/psa_crypto.c	/^psa_status_t mbedtls_psa_sign_hash_abort($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_sign_hash_complete	library/psa_crypto.c	/^psa_status_t mbedtls_psa_sign_hash_complete($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_sign_hash_get_num_ops	library/psa_crypto.c	/^uint32_t mbedtls_psa_sign_hash_get_num_ops($/;"	f	typeref:typename:uint32_t
mbedtls_psa_sign_hash_start	library/psa_crypto.c	/^psa_status_t mbedtls_psa_sign_hash_start($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_storage_inject_entropy	library/psa_crypto_storage.c	/^psa_status_t mbedtls_psa_storage_inject_entropy(const unsigned char *seed,$/;"	f	typeref:typename:psa_status_t
mbedtls_psa_translate_cipher_mode	library/cipher.c	/^static inline psa_algorithm_t mbedtls_psa_translate_cipher_mode($/;"	f	typeref:typename:psa_algorithm_t	file:
mbedtls_psa_translate_cipher_type	library/cipher.c	/^static inline psa_key_type_t mbedtls_psa_translate_cipher_type($/;"	f	typeref:typename:psa_key_type_t	file:
mbedtls_psa_verify_hash_abort	library/psa_crypto.c	/^psa_status_t mbedtls_psa_verify_hash_abort($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_verify_hash_complete	library/psa_crypto.c	/^psa_status_t mbedtls_psa_verify_hash_complete($/;"	f	typeref:typename:psa_status_t
mbedtls_psa_verify_hash_get_num_ops	library/psa_crypto.c	/^uint32_t mbedtls_psa_verify_hash_get_num_ops($/;"	f	typeref:typename:uint32_t
mbedtls_psa_verify_hash_start	library/psa_crypto.c	/^psa_status_t mbedtls_psa_verify_hash_start($/;"	f	typeref:typename:psa_status_t
mbedtls_put_unaligned_uint16	library/alignment.h	/^inline void mbedtls_put_unaligned_uint16(void *p, uint16_t x)$/;"	f	typeref:typename:void
mbedtls_put_unaligned_uint32	library/alignment.h	/^inline void mbedtls_put_unaligned_uint32(void *p, uint32_t x)$/;"	f	typeref:typename:void
mbedtls_put_unaligned_uint64	library/alignment.h	/^inline void mbedtls_put_unaligned_uint64(void *p, uint64_t x)$/;"	f	typeref:typename:void
mbedtls_ripemd160	library/ripemd160.c	/^int mbedtls_ripemd160(const unsigned char *input,$/;"	f	typeref:typename:int
mbedtls_ripemd160_clone	library/ripemd160.c	/^void mbedtls_ripemd160_clone(mbedtls_ripemd160_context *dst,$/;"	f	typeref:typename:void
mbedtls_ripemd160_finish	library/ripemd160.c	/^int mbedtls_ripemd160_finish(mbedtls_ripemd160_context *ctx,$/;"	f	typeref:typename:int
mbedtls_ripemd160_free	library/ripemd160.c	/^void mbedtls_ripemd160_free(mbedtls_ripemd160_context *ctx)$/;"	f	typeref:typename:void
mbedtls_ripemd160_init	library/ripemd160.c	/^void mbedtls_ripemd160_init(mbedtls_ripemd160_context *ctx)$/;"	f	typeref:typename:void
mbedtls_ripemd160_self_test	library/ripemd160.c	/^int mbedtls_ripemd160_self_test(int verbose)$/;"	f	typeref:typename:int
mbedtls_ripemd160_starts	library/ripemd160.c	/^int mbedtls_ripemd160_starts(mbedtls_ripemd160_context *ctx)$/;"	f	typeref:typename:int
mbedtls_ripemd160_update	library/ripemd160.c	/^int mbedtls_ripemd160_update(mbedtls_ripemd160_context *ctx,$/;"	f	typeref:typename:int
mbedtls_rsa_check_privkey	library/rsa.c	/^int mbedtls_rsa_check_privkey(const mbedtls_rsa_context *ctx)$/;"	f	typeref:typename:int
mbedtls_rsa_check_pub_priv	library/rsa.c	/^int mbedtls_rsa_check_pub_priv(const mbedtls_rsa_context *pub,$/;"	f	typeref:typename:int
mbedtls_rsa_check_pubkey	library/rsa.c	/^int mbedtls_rsa_check_pubkey(const mbedtls_rsa_context *ctx)$/;"	f	typeref:typename:int
mbedtls_rsa_complete	library/rsa.c	/^int mbedtls_rsa_complete(mbedtls_rsa_context *ctx)$/;"	f	typeref:typename:int
mbedtls_rsa_copy	library/rsa.c	/^int mbedtls_rsa_copy(mbedtls_rsa_context *dst, const mbedtls_rsa_context *src)$/;"	f	typeref:typename:int
mbedtls_rsa_deduce_crt	library/rsa_alt_helpers.c	/^int mbedtls_rsa_deduce_crt(const mbedtls_mpi *P, const mbedtls_mpi *Q,$/;"	f	typeref:typename:int
mbedtls_rsa_deduce_primes	library/rsa_alt_helpers.c	/^int mbedtls_rsa_deduce_primes(mbedtls_mpi const *N,$/;"	f	typeref:typename:int
mbedtls_rsa_deduce_private_exponent	library/rsa_alt_helpers.c	/^int mbedtls_rsa_deduce_private_exponent(mbedtls_mpi const *P,$/;"	f	typeref:typename:int
mbedtls_rsa_export	library/rsa.c	/^int mbedtls_rsa_export(const mbedtls_rsa_context *ctx,$/;"	f	typeref:typename:int
mbedtls_rsa_export_crt	library/rsa.c	/^int mbedtls_rsa_export_crt(const mbedtls_rsa_context *ctx,$/;"	f	typeref:typename:int
mbedtls_rsa_export_raw	library/rsa.c	/^int mbedtls_rsa_export_raw(const mbedtls_rsa_context *ctx,$/;"	f	typeref:typename:int
mbedtls_rsa_free	library/rsa.c	/^void mbedtls_rsa_free(mbedtls_rsa_context *ctx)$/;"	f	typeref:typename:void
mbedtls_rsa_gen_key	library/rsa.c	/^int mbedtls_rsa_gen_key(mbedtls_rsa_context *ctx,$/;"	f	typeref:typename:int
mbedtls_rsa_get_len	library/rsa.c	/^size_t mbedtls_rsa_get_len(const mbedtls_rsa_context *ctx)$/;"	f	typeref:typename:size_t
mbedtls_rsa_get_md_alg	library/rsa.c	/^int mbedtls_rsa_get_md_alg(const mbedtls_rsa_context *ctx)$/;"	f	typeref:typename:int
mbedtls_rsa_get_padding_mode	library/rsa.c	/^int mbedtls_rsa_get_padding_mode(const mbedtls_rsa_context *ctx)$/;"	f	typeref:typename:int
mbedtls_rsa_import	library/rsa.c	/^int mbedtls_rsa_import(mbedtls_rsa_context *ctx,$/;"	f	typeref:typename:int
mbedtls_rsa_import_raw	library/rsa.c	/^int mbedtls_rsa_import_raw(mbedtls_rsa_context *ctx,$/;"	f	typeref:typename:int
mbedtls_rsa_init	library/rsa.c	/^void mbedtls_rsa_init(mbedtls_rsa_context *ctx)$/;"	f	typeref:typename:void
mbedtls_rsa_pkcs1_decrypt	library/rsa.c	/^int mbedtls_rsa_pkcs1_decrypt(mbedtls_rsa_context *ctx,$/;"	f	typeref:typename:int
mbedtls_rsa_pkcs1_encrypt	library/rsa.c	/^int mbedtls_rsa_pkcs1_encrypt(mbedtls_rsa_context *ctx,$/;"	f	typeref:typename:int
mbedtls_rsa_pkcs1_sign	library/rsa.c	/^int mbedtls_rsa_pkcs1_sign(mbedtls_rsa_context *ctx,$/;"	f	typeref:typename:int
mbedtls_rsa_pkcs1_verify	library/rsa.c	/^int mbedtls_rsa_pkcs1_verify(mbedtls_rsa_context *ctx,$/;"	f	typeref:typename:int
mbedtls_rsa_private	library/rsa.c	/^int mbedtls_rsa_private(mbedtls_rsa_context *ctx,$/;"	f	typeref:typename:int
mbedtls_rsa_public	library/rsa.c	/^int mbedtls_rsa_public(mbedtls_rsa_context *ctx,$/;"	f	typeref:typename:int
mbedtls_rsa_rsaes_oaep_decrypt	library/rsa.c	/^int mbedtls_rsa_rsaes_oaep_decrypt(mbedtls_rsa_context *ctx,$/;"	f	typeref:typename:int
mbedtls_rsa_rsaes_oaep_encrypt	library/rsa.c	/^int mbedtls_rsa_rsaes_oaep_encrypt(mbedtls_rsa_context *ctx,$/;"	f	typeref:typename:int
mbedtls_rsa_rsaes_pkcs1_v15_decrypt	library/rsa.c	/^int mbedtls_rsa_rsaes_pkcs1_v15_decrypt(mbedtls_rsa_context *ctx,$/;"	f	typeref:typename:int
mbedtls_rsa_rsaes_pkcs1_v15_encrypt	library/rsa.c	/^int mbedtls_rsa_rsaes_pkcs1_v15_encrypt(mbedtls_rsa_context *ctx,$/;"	f	typeref:typename:int
mbedtls_rsa_rsassa_pkcs1_v15_sign	library/rsa.c	/^int mbedtls_rsa_rsassa_pkcs1_v15_sign(mbedtls_rsa_context *ctx,$/;"	f	typeref:typename:int
mbedtls_rsa_rsassa_pkcs1_v15_verify	library/rsa.c	/^int mbedtls_rsa_rsassa_pkcs1_v15_verify(mbedtls_rsa_context *ctx,$/;"	f	typeref:typename:int
mbedtls_rsa_rsassa_pss_sign	library/rsa.c	/^int mbedtls_rsa_rsassa_pss_sign(mbedtls_rsa_context *ctx,$/;"	f	typeref:typename:int
mbedtls_rsa_rsassa_pss_sign_ext	library/rsa.c	/^int mbedtls_rsa_rsassa_pss_sign_ext(mbedtls_rsa_context *ctx,$/;"	f	typeref:typename:int
mbedtls_rsa_rsassa_pss_sign_no_mode_check	library/rsa.c	/^int mbedtls_rsa_rsassa_pss_sign_no_mode_check(mbedtls_rsa_context *ctx,$/;"	f	typeref:typename:int
mbedtls_rsa_rsassa_pss_verify	library/rsa.c	/^int mbedtls_rsa_rsassa_pss_verify(mbedtls_rsa_context *ctx,$/;"	f	typeref:typename:int
mbedtls_rsa_rsassa_pss_verify_ext	library/rsa.c	/^int mbedtls_rsa_rsassa_pss_verify_ext(mbedtls_rsa_context *ctx,$/;"	f	typeref:typename:int
mbedtls_rsa_self_test	library/rsa.c	/^int mbedtls_rsa_self_test(int verbose)$/;"	f	typeref:typename:int
mbedtls_rsa_set_padding	library/rsa.c	/^int mbedtls_rsa_set_padding(mbedtls_rsa_context *ctx, int padding,$/;"	f	typeref:typename:int
mbedtls_rsa_validate_crt	library/rsa_alt_helpers.c	/^int mbedtls_rsa_validate_crt(const mbedtls_mpi *P,  const mbedtls_mpi *Q,$/;"	f	typeref:typename:int
mbedtls_rsa_validate_params	library/rsa_alt_helpers.c	/^int mbedtls_rsa_validate_params(const mbedtls_mpi *N, const mbedtls_mpi *P,$/;"	f	typeref:typename:int
mbedtls_set_alarm	programs/test/benchmark.c	/^static void mbedtls_set_alarm(int seconds)$/;"	f	typeref:typename:void	file:
mbedtls_set_key_owner_id	include/psa/crypto_struct.h	/^static inline void mbedtls_set_key_owner_id(psa_key_attributes_t *attributes,$/;"	f	typeref:typename:void
mbedtls_sha1	library/sha1.c	/^int mbedtls_sha1(const unsigned char *input,$/;"	f	typeref:typename:int
mbedtls_sha1_clone	library/sha1.c	/^void mbedtls_sha1_clone(mbedtls_sha1_context *dst,$/;"	f	typeref:typename:void
mbedtls_sha1_finish	library/sha1.c	/^int mbedtls_sha1_finish(mbedtls_sha1_context *ctx,$/;"	f	typeref:typename:int
mbedtls_sha1_free	library/sha1.c	/^void mbedtls_sha1_free(mbedtls_sha1_context *ctx)$/;"	f	typeref:typename:void
mbedtls_sha1_init	library/sha1.c	/^void mbedtls_sha1_init(mbedtls_sha1_context *ctx)$/;"	f	typeref:typename:void
mbedtls_sha1_self_test	library/sha1.c	/^int mbedtls_sha1_self_test(int verbose)$/;"	f	typeref:typename:int
mbedtls_sha1_starts	library/sha1.c	/^int mbedtls_sha1_starts(mbedtls_sha1_context *ctx)$/;"	f	typeref:typename:int
mbedtls_sha1_update	library/sha1.c	/^int mbedtls_sha1_update(mbedtls_sha1_context *ctx,$/;"	f	typeref:typename:int
mbedtls_sha224_self_test	library/sha256.c	/^int mbedtls_sha224_self_test(int verbose)$/;"	f	typeref:typename:int
mbedtls_sha256	library/sha256.c	/^int mbedtls_sha256(const unsigned char *input,$/;"	f	typeref:typename:int
mbedtls_sha256_clone	library/sha256.c	/^void mbedtls_sha256_clone(mbedtls_sha256_context *dst,$/;"	f	typeref:typename:void
mbedtls_sha256_common_self_test	library/sha256.c	/^static int mbedtls_sha256_common_self_test(int verbose, int is224)$/;"	f	typeref:typename:int	file:
mbedtls_sha256_finish	library/sha256.c	/^int mbedtls_sha256_finish(mbedtls_sha256_context *ctx,$/;"	f	typeref:typename:int
mbedtls_sha256_free	library/sha256.c	/^void mbedtls_sha256_free(mbedtls_sha256_context *ctx)$/;"	f	typeref:typename:void
mbedtls_sha256_init	library/sha256.c	/^void mbedtls_sha256_init(mbedtls_sha256_context *ctx)$/;"	f	typeref:typename:void
mbedtls_sha256_self_test	library/sha256.c	/^int mbedtls_sha256_self_test(int verbose)$/;"	f	typeref:typename:int
mbedtls_sha256_starts	library/sha256.c	/^int mbedtls_sha256_starts(mbedtls_sha256_context *ctx, int is224)$/;"	f	typeref:typename:int
mbedtls_sha256_update	library/sha256.c	/^int mbedtls_sha256_update(mbedtls_sha256_context *ctx,$/;"	f	typeref:typename:int
mbedtls_sha3	library/sha3.c	/^int mbedtls_sha3(mbedtls_sha3_id id, const uint8_t *input,$/;"	f	typeref:typename:int
mbedtls_sha384_self_test	library/sha512.c	/^int mbedtls_sha384_self_test(int verbose)$/;"	f	typeref:typename:int
mbedtls_sha3_clone	library/sha3.c	/^void mbedtls_sha3_clone(mbedtls_sha3_context *dst,$/;"	f	typeref:typename:void
mbedtls_sha3_finish	library/sha3.c	/^int mbedtls_sha3_finish(mbedtls_sha3_context *ctx,$/;"	f	typeref:typename:int
mbedtls_sha3_free	library/sha3.c	/^void mbedtls_sha3_free(mbedtls_sha3_context *ctx)$/;"	f	typeref:typename:void
mbedtls_sha3_init	library/sha3.c	/^void mbedtls_sha3_init(mbedtls_sha3_context *ctx)$/;"	f	typeref:typename:void
mbedtls_sha3_kat_test	library/sha3.c	/^static int mbedtls_sha3_kat_test(int verbose,$/;"	f	typeref:typename:int	file:
mbedtls_sha3_long_kat_test	library/sha3.c	/^static int mbedtls_sha3_long_kat_test(int verbose,$/;"	f	typeref:typename:int	file:
mbedtls_sha3_self_test	library/sha3.c	/^int mbedtls_sha3_self_test(int verbose)$/;"	f	typeref:typename:int
mbedtls_sha3_starts	library/sha3.c	/^int mbedtls_sha3_starts(mbedtls_sha3_context *ctx, mbedtls_sha3_id id)$/;"	f	typeref:typename:int
mbedtls_sha3_update	library/sha3.c	/^int mbedtls_sha3_update(mbedtls_sha3_context *ctx,$/;"	f	typeref:typename:int
mbedtls_sha512	library/sha512.c	/^int mbedtls_sha512(const unsigned char *input,$/;"	f	typeref:typename:int
mbedtls_sha512_clone	library/sha512.c	/^void mbedtls_sha512_clone(mbedtls_sha512_context *dst,$/;"	f	typeref:typename:void
mbedtls_sha512_common_self_test	library/sha512.c	/^static int mbedtls_sha512_common_self_test(int verbose, int is384)$/;"	f	typeref:typename:int	file:
mbedtls_sha512_finish	library/sha512.c	/^int mbedtls_sha512_finish(mbedtls_sha512_context *ctx,$/;"	f	typeref:typename:int
mbedtls_sha512_free	library/sha512.c	/^void mbedtls_sha512_free(mbedtls_sha512_context *ctx)$/;"	f	typeref:typename:void
mbedtls_sha512_init	library/sha512.c	/^void mbedtls_sha512_init(mbedtls_sha512_context *ctx)$/;"	f	typeref:typename:void
mbedtls_sha512_self_test	library/sha512.c	/^int mbedtls_sha512_self_test(int verbose)$/;"	f	typeref:typename:int
mbedtls_sha512_starts	library/sha512.c	/^int mbedtls_sha512_starts(mbedtls_sha512_context *ctx, int is384)$/;"	f	typeref:typename:int
mbedtls_sha512_update	library/sha512.c	/^int mbedtls_sha512_update(mbedtls_sha512_context *ctx,$/;"	f	typeref:typename:int
mbedtls_ssl_add_hs_hdr_to_checksum	library/ssl_tls.c	/^int mbedtls_ssl_add_hs_hdr_to_checksum(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
mbedtls_ssl_add_hs_msg_to_checksum	library/ssl_tls.c	/^int mbedtls_ssl_add_hs_msg_to_checksum(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
mbedtls_ssl_buffering_free	library/ssl_msg.c	/^void mbedtls_ssl_buffering_free(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:void
mbedtls_ssl_cache_free	library/ssl_cache.c	/^void mbedtls_ssl_cache_free(mbedtls_ssl_cache_context *cache)$/;"	f	typeref:typename:void
mbedtls_ssl_cache_get	library/ssl_cache.c	/^int mbedtls_ssl_cache_get(void *data,$/;"	f	typeref:typename:int
mbedtls_ssl_cache_get_timeout	include/mbedtls/ssl_cache.h	/^static inline int mbedtls_ssl_cache_get_timeout(mbedtls_ssl_cache_context *cache)$/;"	f	typeref:typename:int
mbedtls_ssl_cache_init	library/ssl_cache.c	/^void mbedtls_ssl_cache_init(mbedtls_ssl_cache_context *cache)$/;"	f	typeref:typename:void
mbedtls_ssl_cache_remove	library/ssl_cache.c	/^int mbedtls_ssl_cache_remove(void *data,$/;"	f	typeref:typename:int
mbedtls_ssl_cache_set	library/ssl_cache.c	/^int mbedtls_ssl_cache_set(void *data,$/;"	f	typeref:typename:int
mbedtls_ssl_cache_set_max_entries	library/ssl_cache.c	/^void mbedtls_ssl_cache_set_max_entries(mbedtls_ssl_cache_context *cache, int max)$/;"	f	typeref:typename:void
mbedtls_ssl_cache_set_timeout	library/ssl_cache.c	/^void mbedtls_ssl_cache_set_timeout(mbedtls_ssl_cache_context *cache, int timeout)$/;"	f	typeref:typename:void
mbedtls_ssl_check_cert_usage	library/ssl_tls.c	/^int mbedtls_ssl_check_cert_usage(const mbedtls_x509_crt *cert,$/;"	f	typeref:typename:int
mbedtls_ssl_check_curve	library/ssl_tls.c	/^int mbedtls_ssl_check_curve(const mbedtls_ssl_context *ssl, mbedtls_ecp_group_id grp_id)$/;"	f	typeref:typename:int
mbedtls_ssl_check_curve_tls_id	library/ssl_tls.c	/^int mbedtls_ssl_check_curve_tls_id(const mbedtls_ssl_context *ssl, uint16_t tls_id)$/;"	f	typeref:typename:int
mbedtls_ssl_check_dtls_clihlo_cookie	library/ssl_msg.c	/^int mbedtls_ssl_check_dtls_clihlo_cookie($/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL MBEDTLS_STATIC_TESTABLE int
mbedtls_ssl_check_pending	library/ssl_msg.c	/^int mbedtls_ssl_check_pending(const mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_check_record	library/ssl_msg.c	/^int mbedtls_ssl_check_record(mbedtls_ssl_context const *ssl,$/;"	f	typeref:typename:int
mbedtls_ssl_check_srtp_profile_value	library/ssl_misc.h	/^static inline mbedtls_ssl_srtp_profile mbedtls_ssl_check_srtp_profile_value$/;"	f	typeref:typename:mbedtls_ssl_srtp_profile
mbedtls_ssl_check_timer	library/ssl_msg.c	/^int mbedtls_ssl_check_timer(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_chk_buf_ptr	library/ssl_misc.h	/^static inline int mbedtls_ssl_chk_buf_ptr(const uint8_t *cur,$/;"	f	typeref:typename:int
mbedtls_ssl_cipher_to_psa	library/ssl_tls.c	/^psa_status_t mbedtls_ssl_cipher_to_psa(mbedtls_cipher_type_t mbedtls_cipher_type,$/;"	f	typeref:typename:psa_status_t
mbedtls_ssl_ciphersuite_cert_req_allowed	include/mbedtls/ssl_ciphersuites.h	/^static inline int mbedtls_ssl_ciphersuite_cert_req_allowed(const mbedtls_ssl_ciphersuite_t *info/;"	f	typeref:typename:int
mbedtls_ssl_ciphersuite_from_id	library/ssl_ciphersuites.c	/^const mbedtls_ssl_ciphersuite_t *mbedtls_ssl_ciphersuite_from_id(int ciphersuite)$/;"	f	typeref:typename:const mbedtls_ssl_ciphersuite_t *
mbedtls_ssl_ciphersuite_from_string	library/ssl_ciphersuites.c	/^const mbedtls_ssl_ciphersuite_t *mbedtls_ssl_ciphersuite_from_string($/;"	f	typeref:typename:const mbedtls_ssl_ciphersuite_t *
mbedtls_ssl_ciphersuite_get_cipher_key_bitlen	library/ssl_ciphersuites.c	/^size_t mbedtls_ssl_ciphersuite_get_cipher_key_bitlen(const mbedtls_ssl_ciphersuite_t *info)$/;"	f	typeref:typename:size_t
mbedtls_ssl_ciphersuite_get_name	include/mbedtls/ssl_ciphersuites.h	/^static inline const char *mbedtls_ssl_ciphersuite_get_name(const mbedtls_ssl_ciphersuite_t *info/;"	f	typeref:typename:const char *
mbedtls_ssl_ciphersuite_has_pfs	include/mbedtls/ssl_ciphersuites.h	/^static inline int mbedtls_ssl_ciphersuite_has_pfs(const mbedtls_ssl_ciphersuite_t *info)$/;"	f	typeref:typename:int
mbedtls_ssl_ciphersuite_no_pfs	include/mbedtls/ssl_ciphersuites.h	/^static inline int mbedtls_ssl_ciphersuite_no_pfs(const mbedtls_ssl_ciphersuite_t *info)$/;"	f	typeref:typename:int
mbedtls_ssl_ciphersuite_uses_dhe	include/mbedtls/ssl_ciphersuites.h	/^static inline int mbedtls_ssl_ciphersuite_uses_dhe(const mbedtls_ssl_ciphersuite_t *info)$/;"	f	typeref:typename:int
mbedtls_ssl_ciphersuite_uses_ec	library/ssl_ciphersuites.c	/^int mbedtls_ssl_ciphersuite_uses_ec(const mbedtls_ssl_ciphersuite_t *info)$/;"	f	typeref:typename:int
mbedtls_ssl_ciphersuite_uses_ecdh	include/mbedtls/ssl_ciphersuites.h	/^static inline int mbedtls_ssl_ciphersuite_uses_ecdh(const mbedtls_ssl_ciphersuite_t *info)$/;"	f	typeref:typename:int
mbedtls_ssl_ciphersuite_uses_ecdhe	include/mbedtls/ssl_ciphersuites.h	/^static inline int mbedtls_ssl_ciphersuite_uses_ecdhe(const mbedtls_ssl_ciphersuite_t *info)$/;"	f	typeref:typename:int
mbedtls_ssl_ciphersuite_uses_psk	library/ssl_ciphersuites.c	/^int mbedtls_ssl_ciphersuite_uses_psk(const mbedtls_ssl_ciphersuite_t *info)$/;"	f	typeref:typename:int
mbedtls_ssl_ciphersuite_uses_server_signature	include/mbedtls/ssl_ciphersuites.h	/^static inline int mbedtls_ssl_ciphersuite_uses_server_signature($/;"	f	typeref:typename:int
mbedtls_ssl_ciphersuite_uses_srv_cert	include/mbedtls/ssl_ciphersuites.h	/^static inline int mbedtls_ssl_ciphersuite_uses_srv_cert(const mbedtls_ssl_ciphersuite_t *info)$/;"	f	typeref:typename:int
mbedtls_ssl_close_notify	library/ssl_msg.c	/^int mbedtls_ssl_close_notify(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_cmp_chk_buf_ptr_fail_args	library/ssl_tls.c	/^int mbedtls_ssl_cmp_chk_buf_ptr_fail_args(mbedtls_ssl_chk_buf_ptr_args *args)$/;"	f	typeref:typename:int
mbedtls_ssl_conf_alpn_protocols	library/ssl_tls.c	/^int mbedtls_ssl_conf_alpn_protocols(mbedtls_ssl_config *conf, const char **protos)$/;"	f	typeref:typename:int
mbedtls_ssl_conf_async_private_cb	library/ssl_tls.c	/^void mbedtls_ssl_conf_async_private_cb($/;"	f	typeref:typename:void
mbedtls_ssl_conf_authmode	library/ssl_tls.c	/^void mbedtls_ssl_conf_authmode(mbedtls_ssl_config *conf, int authmode)$/;"	f	typeref:typename:void
mbedtls_ssl_conf_ca_cb	library/ssl_tls.c	/^void mbedtls_ssl_conf_ca_cb(mbedtls_ssl_config *conf,$/;"	f	typeref:typename:void
mbedtls_ssl_conf_ca_chain	library/ssl_tls.c	/^void mbedtls_ssl_conf_ca_chain(mbedtls_ssl_config *conf,$/;"	f	typeref:typename:void
mbedtls_ssl_conf_cert_cb	include/mbedtls/ssl.h	/^static inline void mbedtls_ssl_conf_cert_cb(mbedtls_ssl_config *conf,$/;"	f	typeref:typename:void
mbedtls_ssl_conf_cert_profile	library/ssl_tls.c	/^void mbedtls_ssl_conf_cert_profile(mbedtls_ssl_config *conf,$/;"	f	typeref:typename:void
mbedtls_ssl_conf_cert_req_ca_list	library/ssl_tls.c	/^void mbedtls_ssl_conf_cert_req_ca_list(mbedtls_ssl_config *conf,$/;"	f	typeref:typename:void
mbedtls_ssl_conf_cid	library/ssl_tls.c	/^int mbedtls_ssl_conf_cid(mbedtls_ssl_config *conf,$/;"	f	typeref:typename:int
mbedtls_ssl_conf_ciphersuites	library/ssl_tls.c	/^void mbedtls_ssl_conf_ciphersuites(mbedtls_ssl_config *conf,$/;"	f	typeref:typename:void
mbedtls_ssl_conf_curves	library/ssl_tls.c	/^void mbedtls_ssl_conf_curves(mbedtls_ssl_config *conf,$/;"	f	typeref:typename:void
mbedtls_ssl_conf_dbg	library/ssl_tls.c	/^void mbedtls_ssl_conf_dbg(mbedtls_ssl_config *conf,$/;"	f	typeref:typename:void
mbedtls_ssl_conf_dh_param_bin	library/ssl_tls.c	/^int mbedtls_ssl_conf_dh_param_bin(mbedtls_ssl_config *conf,$/;"	f	typeref:typename:int
mbedtls_ssl_conf_dh_param_ctx	library/ssl_tls.c	/^int mbedtls_ssl_conf_dh_param_ctx(mbedtls_ssl_config *conf, mbedtls_dhm_context *dhm_ctx)$/;"	f	typeref:typename:int
mbedtls_ssl_conf_dhm_min_bitlen	library/ssl_tls.c	/^void mbedtls_ssl_conf_dhm_min_bitlen(mbedtls_ssl_config *conf,$/;"	f	typeref:typename:void
mbedtls_ssl_conf_dn_hints	include/mbedtls/ssl.h	/^void mbedtls_ssl_conf_dn_hints(mbedtls_ssl_config *conf,$/;"	f	typeref:typename:void
mbedtls_ssl_conf_dtls_anti_replay	library/ssl_tls.c	/^void mbedtls_ssl_conf_dtls_anti_replay(mbedtls_ssl_config *conf, char mode)$/;"	f	typeref:typename:void
mbedtls_ssl_conf_dtls_badmac_limit	library/ssl_tls.c	/^void mbedtls_ssl_conf_dtls_badmac_limit(mbedtls_ssl_config *conf, unsigned limit)$/;"	f	typeref:typename:void
mbedtls_ssl_conf_dtls_cookies	library/ssl_tls12_server.c	/^void mbedtls_ssl_conf_dtls_cookies(mbedtls_ssl_config *conf,$/;"	f	typeref:typename:void
mbedtls_ssl_conf_dtls_srtp_protection_profiles	library/ssl_tls.c	/^int mbedtls_ssl_conf_dtls_srtp_protection_profiles(mbedtls_ssl_config *conf,$/;"	f	typeref:typename:int
mbedtls_ssl_conf_early_data	library/ssl_tls.c	/^void mbedtls_ssl_conf_early_data(mbedtls_ssl_config *conf,$/;"	f	typeref:typename:void
mbedtls_ssl_conf_encrypt_then_mac	library/ssl_tls.c	/^void mbedtls_ssl_conf_encrypt_then_mac(mbedtls_ssl_config *conf, char etm)$/;"	f	typeref:typename:void
mbedtls_ssl_conf_endpoint	library/ssl_tls.c	/^void mbedtls_ssl_conf_endpoint(mbedtls_ssl_config *conf, int endpoint)$/;"	f	typeref:typename:void
mbedtls_ssl_conf_extended_master_secret	library/ssl_tls.c	/^void mbedtls_ssl_conf_extended_master_secret(mbedtls_ssl_config *conf, char ems)$/;"	f	typeref:typename:void
mbedtls_ssl_conf_get_async_config_data	library/ssl_tls.c	/^void *mbedtls_ssl_conf_get_async_config_data(const mbedtls_ssl_config *conf)$/;"	f	typeref:typename:void *
mbedtls_ssl_conf_get_endpoint	include/mbedtls/ssl.h	/^static inline int mbedtls_ssl_conf_get_endpoint(const mbedtls_ssl_config *conf)$/;"	f	typeref:typename:int
mbedtls_ssl_conf_get_user_data_n	include/mbedtls/ssl.h	/^static inline uintptr_t mbedtls_ssl_conf_get_user_data_n($/;"	f	typeref:typename:uintptr_t
mbedtls_ssl_conf_get_user_data_p	include/mbedtls/ssl.h	/^static inline void *mbedtls_ssl_conf_get_user_data_p($/;"	f	typeref:typename:void *
mbedtls_ssl_conf_groups	library/ssl_tls.c	/^void mbedtls_ssl_conf_groups(mbedtls_ssl_config *conf,$/;"	f	typeref:typename:void
mbedtls_ssl_conf_handshake_timeout	library/ssl_tls.c	/^void mbedtls_ssl_conf_handshake_timeout(mbedtls_ssl_config *conf,$/;"	f	typeref:typename:void
mbedtls_ssl_conf_has_static_psk	library/ssl_tls.c	/^int mbedtls_ssl_conf_has_static_psk(mbedtls_ssl_config const *conf)$/;"	f	typeref:typename:int
mbedtls_ssl_conf_is_hybrid_tls12_tls13	library/ssl_misc.h	/^static inline int mbedtls_ssl_conf_is_hybrid_tls12_tls13(const mbedtls_ssl_config *conf)$/;"	f	typeref:typename:int
mbedtls_ssl_conf_is_tls12_enabled	library/ssl_misc.h	/^static inline int mbedtls_ssl_conf_is_tls12_enabled(const mbedtls_ssl_config *conf)$/;"	f	typeref:typename:int
mbedtls_ssl_conf_is_tls12_only	library/ssl_misc.h	/^static inline int mbedtls_ssl_conf_is_tls12_only(const mbedtls_ssl_config *conf)$/;"	f	typeref:typename:int
mbedtls_ssl_conf_is_tls13_enabled	library/ssl_misc.h	/^static inline int mbedtls_ssl_conf_is_tls13_enabled(const mbedtls_ssl_config *conf)$/;"	f	typeref:typename:int
mbedtls_ssl_conf_is_tls13_only	library/ssl_misc.h	/^static inline int mbedtls_ssl_conf_is_tls13_only(const mbedtls_ssl_config *conf)$/;"	f	typeref:typename:int
mbedtls_ssl_conf_legacy_renegotiation	library/ssl_tls.c	/^void mbedtls_ssl_conf_legacy_renegotiation(mbedtls_ssl_config *conf, int allow_legacy)$/;"	f	typeref:typename:void
mbedtls_ssl_conf_max_early_data_size	library/ssl_tls.c	/^void mbedtls_ssl_conf_max_early_data_size($/;"	f	typeref:typename:void
mbedtls_ssl_conf_max_frag_len	library/ssl_tls.c	/^int mbedtls_ssl_conf_max_frag_len(mbedtls_ssl_config *conf, unsigned char mfl_code)$/;"	f	typeref:typename:int
mbedtls_ssl_conf_max_tls_version	include/mbedtls/ssl.h	/^static inline void mbedtls_ssl_conf_max_tls_version(mbedtls_ssl_config *conf,$/;"	f	typeref:typename:void
mbedtls_ssl_conf_max_version	library/ssl_tls.c	/^void mbedtls_ssl_conf_max_version(mbedtls_ssl_config *conf, int major, int minor)$/;"	f	typeref:typename:void
mbedtls_ssl_conf_min_tls_version	include/mbedtls/ssl.h	/^static inline void mbedtls_ssl_conf_min_tls_version(mbedtls_ssl_config *conf,$/;"	f	typeref:typename:void
mbedtls_ssl_conf_min_version	library/ssl_tls.c	/^void mbedtls_ssl_conf_min_version(mbedtls_ssl_config *conf, int major, int minor)$/;"	f	typeref:typename:void
mbedtls_ssl_conf_new_session_tickets	library/ssl_tls.c	/^void mbedtls_ssl_conf_new_session_tickets(mbedtls_ssl_config *conf,$/;"	f	typeref:typename:void
mbedtls_ssl_conf_own_cert	library/ssl_tls.c	/^int mbedtls_ssl_conf_own_cert(mbedtls_ssl_config *conf,$/;"	f	typeref:typename:int
mbedtls_ssl_conf_preference_order	library/ssl_tls12_server.c	/^void mbedtls_ssl_conf_preference_order(mbedtls_ssl_config *conf, int order)$/;"	f	typeref:typename:void
mbedtls_ssl_conf_psk	library/ssl_tls.c	/^int mbedtls_ssl_conf_psk(mbedtls_ssl_config *conf,$/;"	f	typeref:typename:int
mbedtls_ssl_conf_psk_cb	library/ssl_tls.c	/^void mbedtls_ssl_conf_psk_cb(mbedtls_ssl_config *conf,$/;"	f	typeref:typename:void
mbedtls_ssl_conf_psk_opaque	library/ssl_tls.c	/^int mbedtls_ssl_conf_psk_opaque(mbedtls_ssl_config *conf,$/;"	f	typeref:typename:int
mbedtls_ssl_conf_read_timeout	library/ssl_tls.c	/^void mbedtls_ssl_conf_read_timeout(mbedtls_ssl_config *conf, uint32_t timeout)$/;"	f	typeref:typename:void
mbedtls_ssl_conf_renegotiation	library/ssl_tls.c	/^void mbedtls_ssl_conf_renegotiation(mbedtls_ssl_config *conf, int renegotiation)$/;"	f	typeref:typename:void
mbedtls_ssl_conf_renegotiation_enforced	library/ssl_tls.c	/^void mbedtls_ssl_conf_renegotiation_enforced(mbedtls_ssl_config *conf, int max_records)$/;"	f	typeref:typename:void
mbedtls_ssl_conf_renegotiation_period	library/ssl_tls.c	/^void mbedtls_ssl_conf_renegotiation_period(mbedtls_ssl_config *conf,$/;"	f	typeref:typename:void
mbedtls_ssl_conf_rng	library/ssl_tls.c	/^void mbedtls_ssl_conf_rng(mbedtls_ssl_config *conf,$/;"	f	typeref:typename:void
mbedtls_ssl_conf_session_cache	library/ssl_tls.c	/^void mbedtls_ssl_conf_session_cache(mbedtls_ssl_config *conf,$/;"	f	typeref:typename:void
mbedtls_ssl_conf_session_tickets	library/ssl_tls.c	/^void mbedtls_ssl_conf_session_tickets(mbedtls_ssl_config *conf, int use_tickets)$/;"	f	typeref:typename:void
mbedtls_ssl_conf_session_tickets_cb	library/ssl_tls.c	/^void mbedtls_ssl_conf_session_tickets_cb(mbedtls_ssl_config *conf,$/;"	f	typeref:typename:void
mbedtls_ssl_conf_set_user_data_n	include/mbedtls/ssl.h	/^static inline void mbedtls_ssl_conf_set_user_data_n($/;"	f	typeref:typename:void
mbedtls_ssl_conf_set_user_data_p	include/mbedtls/ssl.h	/^static inline void mbedtls_ssl_conf_set_user_data_p($/;"	f	typeref:typename:void
mbedtls_ssl_conf_sig_algs	library/ssl_tls.c	/^void mbedtls_ssl_conf_sig_algs(mbedtls_ssl_config *conf,$/;"	f	typeref:typename:void
mbedtls_ssl_conf_sig_hashes	library/ssl_tls.c	/^void mbedtls_ssl_conf_sig_hashes(mbedtls_ssl_config *conf,$/;"	f	typeref:typename:void
mbedtls_ssl_conf_sni	library/ssl_tls.c	/^void mbedtls_ssl_conf_sni(mbedtls_ssl_config *conf,$/;"	f	typeref:typename:void
mbedtls_ssl_conf_srtp_mki_value_supported	library/ssl_tls.c	/^void mbedtls_ssl_conf_srtp_mki_value_supported(mbedtls_ssl_config *conf,$/;"	f	typeref:typename:void
mbedtls_ssl_conf_tls13_check_kex_modes	library/ssl_misc.h	/^static inline unsigned mbedtls_ssl_conf_tls13_check_kex_modes(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:unsigned
mbedtls_ssl_conf_tls13_ephemeral_enabled	library/ssl_misc.h	/^static inline int mbedtls_ssl_conf_tls13_ephemeral_enabled(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_conf_tls13_key_exchange_modes	library/ssl_tls.c	/^void mbedtls_ssl_conf_tls13_key_exchange_modes(mbedtls_ssl_config *conf,$/;"	f	typeref:typename:void
mbedtls_ssl_conf_tls13_psk_enabled	library/ssl_misc.h	/^static inline int mbedtls_ssl_conf_tls13_psk_enabled(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_conf_tls13_psk_ephemeral_enabled	library/ssl_misc.h	/^static inline int mbedtls_ssl_conf_tls13_psk_ephemeral_enabled(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_conf_tls13_some_ephemeral_enabled	library/ssl_misc.h	/^static inline int mbedtls_ssl_conf_tls13_some_ephemeral_enabled(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_conf_tls13_some_psk_enabled	library/ssl_misc.h	/^static inline int mbedtls_ssl_conf_tls13_some_psk_enabled(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_conf_transport	library/ssl_tls.c	/^void mbedtls_ssl_conf_transport(mbedtls_ssl_config *conf, int transport)$/;"	f	typeref:typename:void
mbedtls_ssl_conf_verify	library/ssl_tls.c	/^void mbedtls_ssl_conf_verify(mbedtls_ssl_config *conf,$/;"	f	typeref:typename:void
mbedtls_ssl_config_defaults	library/ssl_tls.c	/^int mbedtls_ssl_config_defaults(mbedtls_ssl_config *conf,$/;"	f	typeref:typename:int
mbedtls_ssl_config_free	library/ssl_tls.c	/^void mbedtls_ssl_config_free(mbedtls_ssl_config *conf)$/;"	f	typeref:typename:void
mbedtls_ssl_config_init	library/ssl_tls.c	/^void mbedtls_ssl_config_init(mbedtls_ssl_config *conf)$/;"	f	typeref:typename:void
mbedtls_ssl_context_get_config	include/mbedtls/ssl.h	/^static inline const mbedtls_ssl_config *mbedtls_ssl_context_get_config($/;"	f	typeref:typename:const mbedtls_ssl_config *
mbedtls_ssl_context_load	library/ssl_tls.c	/^int mbedtls_ssl_context_load(mbedtls_ssl_context *context,$/;"	f	typeref:typename:int
mbedtls_ssl_context_save	library/ssl_tls.c	/^int mbedtls_ssl_context_save(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
mbedtls_ssl_cookie_check	library/ssl_cookie.c	/^int mbedtls_ssl_cookie_check(void *p_ctx,$/;"	f	typeref:typename:int
mbedtls_ssl_cookie_free	library/ssl_cookie.c	/^void mbedtls_ssl_cookie_free(mbedtls_ssl_cookie_ctx *ctx)$/;"	f	typeref:typename:void
mbedtls_ssl_cookie_init	library/ssl_cookie.c	/^void mbedtls_ssl_cookie_init(mbedtls_ssl_cookie_ctx *ctx)$/;"	f	typeref:typename:void
mbedtls_ssl_cookie_set_timeout	library/ssl_cookie.c	/^void mbedtls_ssl_cookie_set_timeout(mbedtls_ssl_cookie_ctx *ctx, unsigned long delay)$/;"	f	typeref:typename:void
mbedtls_ssl_cookie_setup	library/ssl_cookie.c	/^int mbedtls_ssl_cookie_setup(mbedtls_ssl_cookie_ctx *ctx,$/;"	f	typeref:typename:int
mbedtls_ssl_cookie_write	library/ssl_cookie.c	/^int mbedtls_ssl_cookie_write(void *p_ctx,$/;"	f	typeref:typename:int
mbedtls_ssl_decrypt_buf	library/ssl_msg.c	/^int mbedtls_ssl_decrypt_buf(mbedtls_ssl_context const *ssl,$/;"	f	typeref:typename:int
mbedtls_ssl_derive_keys	library/ssl_tls.c	/^int mbedtls_ssl_derive_keys(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_dtls_record_replay_check	library/ssl_msg.c	/^static int mbedtls_ssl_dtls_record_replay_check(mbedtls_ssl_context *ssl, uint8_t *record_in_ctr/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
mbedtls_ssl_dtls_replay_check	library/ssl_msg.c	/^int mbedtls_ssl_dtls_replay_check(mbedtls_ssl_context const *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_dtls_replay_reset	library/ssl_msg.c	/^void mbedtls_ssl_dtls_replay_reset(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:void
mbedtls_ssl_dtls_replay_update	library/ssl_msg.c	/^void mbedtls_ssl_dtls_replay_update(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:void
mbedtls_ssl_dtls_srtp_set_mki_value	library/ssl_tls.c	/^int mbedtls_ssl_dtls_srtp_set_mki_value(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
mbedtls_ssl_encrypt_buf	library/ssl_msg.c	/^int mbedtls_ssl_encrypt_buf(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
mbedtls_ssl_ep_len	library/ssl_misc.h	/^static inline size_t mbedtls_ssl_ep_len(const mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:size_t
mbedtls_ssl_fetch_input	library/ssl_msg.c	/^int mbedtls_ssl_fetch_input(mbedtls_ssl_context *ssl, size_t nb_want)$/;"	f	typeref:typename:int
mbedtls_ssl_finish_handshake_msg	library/ssl_msg.c	/^int mbedtls_ssl_finish_handshake_msg(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
mbedtls_ssl_flight_free	library/ssl_msg.c	/^void mbedtls_ssl_flight_free(mbedtls_ssl_flight_item *flight)$/;"	f	typeref:typename:void
mbedtls_ssl_flight_transmit	library/ssl_msg.c	/^int mbedtls_ssl_flight_transmit(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_flush_output	library/ssl_msg.c	/^int mbedtls_ssl_flush_output(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_free	library/ssl_tls.c	/^void mbedtls_ssl_free(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:void
mbedtls_ssl_get_actual_mode	library/ssl_tls.c	/^static mbedtls_ssl_mode_t mbedtls_ssl_get_actual_mode($/;"	f	typeref:typename:mbedtls_ssl_mode_t	file:
mbedtls_ssl_get_alpn_protocol	library/ssl_tls.c	/^const char *mbedtls_ssl_get_alpn_protocol(const mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:const char *
mbedtls_ssl_get_async_operation_data	library/ssl_tls.c	/^void *mbedtls_ssl_get_async_operation_data(const mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:void *
mbedtls_ssl_get_base_mode	library/ssl_tls.c	/^static mbedtls_ssl_mode_t mbedtls_ssl_get_base_mode($/;"	f	typeref:typename:mbedtls_ssl_mode_t	file:
mbedtls_ssl_get_bytes_avail	library/ssl_msg.c	/^size_t mbedtls_ssl_get_bytes_avail(const mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:size_t
mbedtls_ssl_get_ciphersuite	library/ssl_tls.c	/^const char *mbedtls_ssl_get_ciphersuite(const mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:const char *
mbedtls_ssl_get_ciphersuite_id	library/ssl_ciphersuites.c	/^int mbedtls_ssl_get_ciphersuite_id(const char *ciphersuite_name)$/;"	f	typeref:typename:int
mbedtls_ssl_get_ciphersuite_id_from_ssl	library/ssl_tls.c	/^int mbedtls_ssl_get_ciphersuite_id_from_ssl(const mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_get_ciphersuite_name	library/ssl_ciphersuites.c	/^const char *mbedtls_ssl_get_ciphersuite_name(const int ciphersuite_id)$/;"	f	typeref:typename:const char *
mbedtls_ssl_get_ciphersuite_sig_alg	library/ssl_ciphersuites.c	/^mbedtls_pk_type_t mbedtls_ssl_get_ciphersuite_sig_alg(const mbedtls_ssl_ciphersuite_t *info)$/;"	f	typeref:typename:mbedtls_pk_type_t
mbedtls_ssl_get_ciphersuite_sig_pk_alg	library/ssl_ciphersuites.c	/^mbedtls_pk_type_t mbedtls_ssl_get_ciphersuite_sig_pk_alg(const mbedtls_ssl_ciphersuite_t *info)$/;"	f	typeref:typename:mbedtls_pk_type_t
mbedtls_ssl_get_ciphersuite_sig_pk_psa_alg	library/ssl_ciphersuites.c	/^psa_algorithm_t mbedtls_ssl_get_ciphersuite_sig_pk_psa_alg(const mbedtls_ssl_ciphersuite_t *info/;"	f	typeref:typename:psa_algorithm_t
mbedtls_ssl_get_ciphersuite_sig_pk_psa_usage	library/ssl_ciphersuites.c	/^psa_key_usage_t mbedtls_ssl_get_ciphersuite_sig_pk_psa_usage(const mbedtls_ssl_ciphersuite_t *in/;"	f	typeref:typename:psa_key_usage_t
mbedtls_ssl_get_current_mtu	library/ssl_tls.c	/^size_t mbedtls_ssl_get_current_mtu(const mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:size_t
mbedtls_ssl_get_curve_name_from_tls_id	library/ssl_tls.c	/^const char *mbedtls_ssl_get_curve_name_from_tls_id(uint16_t tls_id)$/;"	f	typeref:typename:const char *
mbedtls_ssl_get_curve_tls_id_from_name	programs/ssl/ssl_test_lib.c	/^static uint16_t mbedtls_ssl_get_curve_tls_id_from_name(const char *name)$/;"	f	typeref:typename:uint16_t	file:
mbedtls_ssl_get_dtls_srtp_negotiation_result	library/ssl_tls.c	/^void mbedtls_ssl_get_dtls_srtp_negotiation_result(const mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:void
mbedtls_ssl_get_ecp_group_id_from_tls_id	library/ssl_tls.c	/^mbedtls_ecp_group_id mbedtls_ssl_get_ecp_group_id_from_tls_id(uint16_t tls_id)$/;"	f	typeref:typename:mbedtls_ecp_group_id
mbedtls_ssl_get_extension_id	library/ssl_tls.c	/^uint32_t mbedtls_ssl_get_extension_id(unsigned int extension_type)$/;"	f	typeref:typename:uint32_t
mbedtls_ssl_get_extension_mask	library/ssl_tls.c	/^uint32_t mbedtls_ssl_get_extension_mask(unsigned int extension_type)$/;"	f	typeref:typename:uint32_t
mbedtls_ssl_get_extension_name	library/ssl_tls.c	/^const char *mbedtls_ssl_get_extension_name(unsigned int extension_type)$/;"	f	typeref:typename:const char *
mbedtls_ssl_get_groups	library/ssl_misc.h	/^static inline const void *mbedtls_ssl_get_groups(const mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:const void *
mbedtls_ssl_get_handshake_transcript	library/ssl_tls.c	/^int mbedtls_ssl_get_handshake_transcript(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
mbedtls_ssl_get_hostname	include/mbedtls/ssl.h	/^static inline const char *mbedtls_ssl_get_hostname(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:const char *
mbedtls_ssl_get_hs_sni	library/ssl_tls.c	/^const unsigned char *mbedtls_ssl_get_hs_sni(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:const unsigned char *
mbedtls_ssl_get_input_buflen	library/ssl_misc.h	/^static inline size_t mbedtls_ssl_get_input_buflen(const mbedtls_ssl_context *ctx)$/;"	f	typeref:typename:size_t
mbedtls_ssl_get_input_max_frag_len	library/ssl_tls.c	/^size_t mbedtls_ssl_get_input_max_frag_len(const mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:size_t
mbedtls_ssl_get_key_exchange_md_tls1_2	library/ssl_tls.c	/^int mbedtls_ssl_get_key_exchange_md_tls1_2(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
mbedtls_ssl_get_max_in_record_payload	library/ssl_tls.c	/^int mbedtls_ssl_get_max_in_record_payload(const mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_get_max_out_record_payload	library/ssl_tls.c	/^int mbedtls_ssl_get_max_out_record_payload(const mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_get_mode_from_ciphersuite	library/ssl_tls.c	/^mbedtls_ssl_mode_t mbedtls_ssl_get_mode_from_ciphersuite($/;"	f	typeref:typename:mbedtls_ssl_mode_t
mbedtls_ssl_get_mode_from_transform	library/ssl_tls.c	/^mbedtls_ssl_mode_t mbedtls_ssl_get_mode_from_transform($/;"	f	typeref:typename:mbedtls_ssl_mode_t
mbedtls_ssl_get_opaque_psk	library/ssl_misc.h	/^static inline mbedtls_svc_key_id_t mbedtls_ssl_get_opaque_psk($/;"	f	typeref:typename:mbedtls_svc_key_id_t
mbedtls_ssl_get_output_buflen	library/ssl_misc.h	/^static inline size_t mbedtls_ssl_get_output_buflen(const mbedtls_ssl_context *ctx)$/;"	f	typeref:typename:size_t
mbedtls_ssl_get_output_max_frag_len	library/ssl_tls.c	/^size_t mbedtls_ssl_get_output_max_frag_len(const mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:size_t
mbedtls_ssl_get_own_cid	library/ssl_tls.c	/^int mbedtls_ssl_get_own_cid(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
mbedtls_ssl_get_peer_cert	library/ssl_tls.c	/^const mbedtls_x509_crt *mbedtls_ssl_get_peer_cert(const mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:const mbedtls_x509_crt *
mbedtls_ssl_get_peer_cid	library/ssl_tls.c	/^int mbedtls_ssl_get_peer_cid(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
mbedtls_ssl_get_pk_type_and_md_alg_from_sig_alg	library/ssl_misc.h	/^static inline int mbedtls_ssl_get_pk_type_and_md_alg_from_sig_alg($/;"	f	typeref:typename:int
mbedtls_ssl_get_psa_curve_info_from_tls_id	library/ssl_tls.c	/^int mbedtls_ssl_get_psa_curve_info_from_tls_id(uint16_t tls_id,$/;"	f	typeref:typename:int
mbedtls_ssl_get_psa_ffdh_info_from_tls_id	library/ssl_tls13_generic.c	/^static psa_status_t  mbedtls_ssl_get_psa_ffdh_info_from_tls_id($/;"	f	typeref:typename:psa_status_t	file:
mbedtls_ssl_get_psk	library/ssl_misc.h	/^static inline int mbedtls_ssl_get_psk(const mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
mbedtls_ssl_get_record_expansion	library/ssl_msg.c	/^int mbedtls_ssl_get_record_expansion(const mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_get_session	library/ssl_tls.c	/^int mbedtls_ssl_get_session(const mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
mbedtls_ssl_get_sig_algs	library/ssl_misc.h	/^static inline const void *mbedtls_ssl_get_sig_algs($/;"	f	typeref:typename:const void *
mbedtls_ssl_get_srtp_profile_as_string	include/mbedtls/ssl.h	/^static inline const char *mbedtls_ssl_get_srtp_profile_as_string(mbedtls_ssl_srtp_profile profil/;"	f	typeref:typename:const char *
mbedtls_ssl_get_tls_id_from_ecp_group_id	library/ssl_tls.c	/^uint16_t mbedtls_ssl_get_tls_id_from_ecp_group_id(mbedtls_ecp_group_id grp_id)$/;"	f	typeref:typename:uint16_t
mbedtls_ssl_get_user_data_n	include/mbedtls/ssl.h	/^static inline uintptr_t mbedtls_ssl_get_user_data_n($/;"	f	typeref:typename:uintptr_t
mbedtls_ssl_get_user_data_p	include/mbedtls/ssl.h	/^static inline void *mbedtls_ssl_get_user_data_p($/;"	f	typeref:typename:void *
mbedtls_ssl_get_verify_result	library/ssl_tls.c	/^uint32_t mbedtls_ssl_get_verify_result(const mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:uint32_t
mbedtls_ssl_get_version	library/ssl_tls.c	/^const char *mbedtls_ssl_get_version(const mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:const char *
mbedtls_ssl_get_version_number	include/mbedtls/ssl.h	/^static inline mbedtls_ssl_protocol_version mbedtls_ssl_get_version_number($/;"	f	typeref:typename:mbedtls_ssl_protocol_version
mbedtls_ssl_handle_message_type	library/ssl_msg.c	/^int mbedtls_ssl_handle_message_type(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_handle_pending_alert	library/ssl_msg.c	/^int mbedtls_ssl_handle_pending_alert(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_handshake	library/ssl_tls.c	/^int mbedtls_ssl_handshake(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_handshake_client_step	library/ssl_tls12_client.c	/^int mbedtls_ssl_handshake_client_step(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_handshake_free	library/ssl_tls.c	/^void mbedtls_ssl_handshake_free(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:void
mbedtls_ssl_handshake_server_step	library/ssl_tls12_server.c	/^int mbedtls_ssl_handshake_server_step(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_handshake_set_state	library/ssl_misc.h	/^static inline void mbedtls_ssl_handshake_set_state(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:void
mbedtls_ssl_handshake_step	library/ssl_tls.c	/^int mbedtls_ssl_handshake_step(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_handshake_wrapup	library/ssl_tls.c	/^void mbedtls_ssl_handshake_wrapup(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:void
mbedtls_ssl_handshake_wrapup_free_hs_transform	library/ssl_tls.c	/^void mbedtls_ssl_handshake_wrapup_free_hs_transform(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:void
mbedtls_ssl_hash_from_md_alg	library/ssl_tls.c	/^unsigned char mbedtls_ssl_hash_from_md_alg(int md)$/;"	f	typeref:typename:unsigned char
mbedtls_ssl_hs_hdr_len	library/ssl_misc.h	/^static inline size_t mbedtls_ssl_hs_hdr_len(const mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:size_t
mbedtls_ssl_in_hdr_len	library/ssl_misc.h	/^static inline size_t mbedtls_ssl_in_hdr_len(const mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:size_t
mbedtls_ssl_init	library/ssl_tls.c	/^void mbedtls_ssl_init(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:void
mbedtls_ssl_is_handshake_over	include/mbedtls/ssl.h	/^static inline int mbedtls_ssl_is_handshake_over(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_list_ciphersuites	library/ssl_ciphersuites.c	/^const int *mbedtls_ssl_list_ciphersuites(void)$/;"	f	typeref:typename:const int *
mbedtls_ssl_md_alg_from_hash	library/ssl_tls.c	/^mbedtls_md_type_t mbedtls_ssl_md_alg_from_hash(unsigned char hash)$/;"	f	typeref:typename:mbedtls_md_type_t
mbedtls_ssl_named_group_is_offered	library/ssl_misc.h	/^static inline int mbedtls_ssl_named_group_is_offered($/;"	f	typeref:typename:int
mbedtls_ssl_named_group_is_supported	library/ssl_misc.h	/^static inline int mbedtls_ssl_named_group_is_supported(uint16_t named_group)$/;"	f	typeref:typename:int
mbedtls_ssl_optimize_checksum	library/ssl_tls.c	/^void mbedtls_ssl_optimize_checksum(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:void
mbedtls_ssl_out_hdr_len	library/ssl_misc.h	/^static inline size_t mbedtls_ssl_out_hdr_len(const mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:size_t
mbedtls_ssl_own_cert	library/ssl_misc.h	/^static inline mbedtls_x509_crt *mbedtls_ssl_own_cert(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:mbedtls_x509_crt *
mbedtls_ssl_own_key	library/ssl_misc.h	/^static inline mbedtls_pk_context *mbedtls_ssl_own_key(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:mbedtls_pk_context *
mbedtls_ssl_parse_alpn_ext	library/ssl_tls.c	/^int mbedtls_ssl_parse_alpn_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int
mbedtls_ssl_parse_certificate	library/ssl_tls.c	/^int mbedtls_ssl_parse_certificate(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_parse_change_cipher_spec	library/ssl_msg.c	/^int mbedtls_ssl_parse_change_cipher_spec(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_parse_finished	library/ssl_tls.c	/^int mbedtls_ssl_parse_finished(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_parse_server_name_ext	library/ssl_tls.c	/^int mbedtls_ssl_parse_server_name_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int
mbedtls_ssl_parse_sig_alg_ext	library/ssl_tls.c	/^int mbedtls_ssl_parse_sig_alg_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
mbedtls_ssl_pend_fatal_alert	library/ssl_msg.c	/^void mbedtls_ssl_pend_fatal_alert(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:void
mbedtls_ssl_pk_alg_from_sig	library/ssl_tls.c	/^mbedtls_pk_type_t mbedtls_ssl_pk_alg_from_sig(unsigned char sig)$/;"	f	typeref:typename:mbedtls_pk_type_t
mbedtls_ssl_prepare_handshake_record	library/ssl_msg.c	/^int mbedtls_ssl_prepare_handshake_record(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_print_extension	library/ssl_tls.c	/^void mbedtls_ssl_print_extension(const mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:void
mbedtls_ssl_print_extensions	library/ssl_tls.c	/^void mbedtls_ssl_print_extensions(const mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:void
mbedtls_ssl_print_supported_groups_list	programs/ssl/ssl_test_lib.c	/^static void mbedtls_ssl_print_supported_groups_list(void)$/;"	f	typeref:typename:void	file:
mbedtls_ssl_print_ticket_flags	library/ssl_tls.c	/^void mbedtls_ssl_print_ticket_flags(const mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:void
mbedtls_ssl_psk_derive_premaster	library/ssl_tls.c	/^int mbedtls_ssl_psk_derive_premaster(mbedtls_ssl_context *ssl, mbedtls_key_exchange_type_t key_e/;"	f	typeref:typename:int
mbedtls_ssl_read	library/ssl_msg.c	/^int mbedtls_ssl_read(mbedtls_ssl_context *ssl, unsigned char *buf, size_t len)$/;"	f	typeref:typename:int
mbedtls_ssl_read_fragment	tests/src/test_helpers/ssl_helpers.c	/^int mbedtls_ssl_read_fragment(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
mbedtls_ssl_read_record	library/ssl_msg.c	/^int mbedtls_ssl_read_record(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
mbedtls_ssl_read_version	library/ssl_msg.c	/^uint16_t mbedtls_ssl_read_version(const unsigned char version[2],$/;"	f	typeref:typename:uint16_t
mbedtls_ssl_recv_flight_completed	library/ssl_msg.c	/^void mbedtls_ssl_recv_flight_completed(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:void
mbedtls_ssl_renegotiate	library/ssl_tls.c	/^int mbedtls_ssl_renegotiate(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_resend	library/ssl_msg.c	/^int mbedtls_ssl_resend(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_resend_hello_request	library/ssl_tls.c	/^int mbedtls_ssl_resend_hello_request(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_reset_checksum	library/ssl_tls.c	/^int mbedtls_ssl_reset_checksum(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_reset_chk_buf_ptr_fail_args	library/ssl_tls.c	/^void mbedtls_ssl_reset_chk_buf_ptr_fail_args(void)$/;"	f	typeref:typename:void
mbedtls_ssl_reset_in_out_pointers	library/ssl_msg.c	/^void mbedtls_ssl_reset_in_out_pointers(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:void
mbedtls_ssl_reset_transcript_for_hrr	library/ssl_tls13_generic.c	/^int mbedtls_ssl_reset_transcript_for_hrr(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_send_alert_message	library/ssl_msg.c	/^int mbedtls_ssl_send_alert_message(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
mbedtls_ssl_send_fatal_handshake_failure	library/ssl_msg.c	/^int mbedtls_ssl_send_fatal_handshake_failure(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_send_flight_completed	library/ssl_msg.c	/^void mbedtls_ssl_send_flight_completed(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:void
mbedtls_ssl_session_check_ticket_flags	library/ssl_misc.h	/^static inline unsigned int mbedtls_ssl_session_check_ticket_flags($/;"	f	typeref:typename:unsigned int
mbedtls_ssl_session_clear_ticket_flags	library/ssl_misc.h	/^static inline void mbedtls_ssl_session_clear_ticket_flags($/;"	f	typeref:typename:void
mbedtls_ssl_session_copy	library/ssl_tls.c	/^int mbedtls_ssl_session_copy(mbedtls_ssl_session *dst,$/;"	f	typeref:typename:int
mbedtls_ssl_session_free	library/ssl_tls.c	/^void mbedtls_ssl_session_free(mbedtls_ssl_session *session)$/;"	f	typeref:typename:void
mbedtls_ssl_session_get_ticket_flags	library/ssl_misc.h	/^static inline unsigned int mbedtls_ssl_session_get_ticket_flags($/;"	f	typeref:typename:unsigned int
mbedtls_ssl_session_init	library/ssl_tls.c	/^void mbedtls_ssl_session_init(mbedtls_ssl_session *session)$/;"	f	typeref:typename:void
mbedtls_ssl_session_load	library/ssl_tls.c	/^int mbedtls_ssl_session_load(mbedtls_ssl_session *session,$/;"	f	typeref:typename:int
mbedtls_ssl_session_reset	library/ssl_tls.c	/^int mbedtls_ssl_session_reset(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_session_reset_int	library/ssl_tls.c	/^int mbedtls_ssl_session_reset_int(mbedtls_ssl_context *ssl, int partial)$/;"	f	typeref:typename:int
mbedtls_ssl_session_reset_msg_layer	library/ssl_tls.c	/^void mbedtls_ssl_session_reset_msg_layer(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:void
mbedtls_ssl_session_save	library/ssl_tls.c	/^int mbedtls_ssl_session_save(const mbedtls_ssl_session *session,$/;"	f	typeref:typename:int
mbedtls_ssl_session_set_hostname	library/ssl_tls.c	/^int mbedtls_ssl_session_set_hostname(mbedtls_ssl_session *session,$/;"	f	typeref:typename:int
mbedtls_ssl_session_set_ticket_flags	library/ssl_misc.h	/^static inline void mbedtls_ssl_session_set_ticket_flags($/;"	f	typeref:typename:void
mbedtls_ssl_session_ticket_allow_early_data	library/ssl_misc.h	/^static inline unsigned int mbedtls_ssl_session_ticket_allow_early_data($/;"	f	typeref:typename:unsigned int
mbedtls_ssl_session_ticket_allow_psk	library/ssl_misc.h	/^static inline unsigned int mbedtls_ssl_session_ticket_allow_psk($/;"	f	typeref:typename:unsigned int
mbedtls_ssl_session_ticket_allow_psk_ephemeral	library/ssl_misc.h	/^static inline unsigned int mbedtls_ssl_session_ticket_allow_psk_ephemeral($/;"	f	typeref:typename:unsigned int
mbedtls_ssl_set_async_operation_data	library/ssl_tls.c	/^void mbedtls_ssl_set_async_operation_data(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:void
mbedtls_ssl_set_bio	library/ssl_tls.c	/^void mbedtls_ssl_set_bio(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:void
mbedtls_ssl_set_calc_verify_md	library/ssl_tls.c	/^int mbedtls_ssl_set_calc_verify_md(mbedtls_ssl_context *ssl, int md)$/;"	f	typeref:typename:int
mbedtls_ssl_set_chk_buf_ptr_fail_args	library/ssl_tls.c	/^void mbedtls_ssl_set_chk_buf_ptr_fail_args($/;"	f	typeref:typename:void
mbedtls_ssl_set_cid	library/ssl_tls.c	/^int mbedtls_ssl_set_cid(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
mbedtls_ssl_set_client_transport_id	library/ssl_tls12_server.c	/^int mbedtls_ssl_set_client_transport_id(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
mbedtls_ssl_set_datagram_packing	library/ssl_tls.c	/^void mbedtls_ssl_set_datagram_packing(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:void
mbedtls_ssl_set_export_keys_cb	library/ssl_tls.c	/^void mbedtls_ssl_set_export_keys_cb(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:void
mbedtls_ssl_set_hostname	library/ssl_tls.c	/^int mbedtls_ssl_set_hostname(mbedtls_ssl_context *ssl, const char *hostname)$/;"	f	typeref:typename:int
mbedtls_ssl_set_hs_authmode	library/ssl_tls.c	/^void mbedtls_ssl_set_hs_authmode(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:void
mbedtls_ssl_set_hs_ca_chain	library/ssl_tls.c	/^void mbedtls_ssl_set_hs_ca_chain(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:void
mbedtls_ssl_set_hs_dn_hints	library/ssl_tls.c	/^void mbedtls_ssl_set_hs_dn_hints(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:void
mbedtls_ssl_set_hs_ecjpake_password	library/ssl_tls.c	/^int mbedtls_ssl_set_hs_ecjpake_password(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
mbedtls_ssl_set_hs_ecjpake_password_common	library/ssl_tls.c	/^static psa_status_t mbedtls_ssl_set_hs_ecjpake_password_common($/;"	f	typeref:typename:psa_status_t	file:
mbedtls_ssl_set_hs_ecjpake_password_opaque	library/ssl_tls.c	/^int mbedtls_ssl_set_hs_ecjpake_password_opaque(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
mbedtls_ssl_set_hs_own_cert	library/ssl_tls.c	/^int mbedtls_ssl_set_hs_own_cert(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
mbedtls_ssl_set_hs_psk	library/ssl_tls.c	/^int mbedtls_ssl_set_hs_psk(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
mbedtls_ssl_set_hs_psk_opaque	library/ssl_tls.c	/^int mbedtls_ssl_set_hs_psk_opaque(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
mbedtls_ssl_set_inbound_transform	library/ssl_msg.c	/^void mbedtls_ssl_set_inbound_transform(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:void
mbedtls_ssl_set_mtu	library/ssl_tls.c	/^void mbedtls_ssl_set_mtu(mbedtls_ssl_context *ssl, uint16_t mtu)$/;"	f	typeref:typename:void
mbedtls_ssl_set_outbound_transform	library/ssl_msg.c	/^void mbedtls_ssl_set_outbound_transform(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:void
mbedtls_ssl_set_session	library/ssl_tls.c	/^int mbedtls_ssl_set_session(mbedtls_ssl_context *ssl, const mbedtls_ssl_session *session)$/;"	f	typeref:typename:int
mbedtls_ssl_set_timer	library/ssl_msg.c	/^void mbedtls_ssl_set_timer(mbedtls_ssl_context *ssl, uint32_t millisecs)$/;"	f	typeref:typename:void
mbedtls_ssl_set_timer_cb	library/ssl_tls.c	/^void mbedtls_ssl_set_timer_cb(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:void
mbedtls_ssl_set_user_data_n	include/mbedtls/ssl.h	/^static inline void mbedtls_ssl_set_user_data_n($/;"	f	typeref:typename:void
mbedtls_ssl_set_user_data_p	include/mbedtls/ssl.h	/^static inline void mbedtls_ssl_set_user_data_p($/;"	f	typeref:typename:void
mbedtls_ssl_set_verify	library/ssl_tls.c	/^void mbedtls_ssl_set_verify(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:void
mbedtls_ssl_setup	library/ssl_tls.c	/^int mbedtls_ssl_setup(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
mbedtls_ssl_sig_alg_is_offered	library/ssl_misc.h	/^static inline int mbedtls_ssl_sig_alg_is_offered(const mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
mbedtls_ssl_sig_alg_is_received	library/ssl_misc.h	/^static inline int mbedtls_ssl_sig_alg_is_received(const mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
mbedtls_ssl_sig_alg_is_supported	library/ssl_misc.h	/^static inline int mbedtls_ssl_sig_alg_is_supported($/;"	f	typeref:typename:int
mbedtls_ssl_sig_from_pk	library/ssl_tls.c	/^unsigned char mbedtls_ssl_sig_from_pk(mbedtls_pk_context *pk)$/;"	f	typeref:typename:unsigned char
mbedtls_ssl_sig_from_pk_alg	library/ssl_tls.c	/^unsigned char mbedtls_ssl_sig_from_pk_alg(mbedtls_pk_type_t type)$/;"	f	typeref:typename:unsigned char
mbedtls_ssl_start_handshake_msg	library/ssl_msg.c	/^int mbedtls_ssl_start_handshake_msg(mbedtls_ssl_context *ssl, unsigned char hs_type,$/;"	f	typeref:typename:int
mbedtls_ssl_start_renegotiation	library/ssl_tls.c	/^int mbedtls_ssl_start_renegotiation(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_ticket_free	library/ssl_ticket.c	/^void mbedtls_ssl_ticket_free(mbedtls_ssl_ticket_context *ctx)$/;"	f	typeref:typename:void
mbedtls_ssl_ticket_init	library/ssl_ticket.c	/^void mbedtls_ssl_ticket_init(mbedtls_ssl_ticket_context *ctx)$/;"	f	typeref:typename:void
mbedtls_ssl_ticket_parse	library/ssl_ticket.c	/^int mbedtls_ssl_ticket_parse(void *p_ticket,$/;"	f	typeref:typename:int
mbedtls_ssl_ticket_rotate	library/ssl_ticket.c	/^int mbedtls_ssl_ticket_rotate(mbedtls_ssl_ticket_context *ctx,$/;"	f	typeref:typename:int
mbedtls_ssl_ticket_setup	library/ssl_ticket.c	/^int mbedtls_ssl_ticket_setup(mbedtls_ssl_ticket_context *ctx,$/;"	f	typeref:typename:int
mbedtls_ssl_ticket_write	library/ssl_ticket.c	/^int mbedtls_ssl_ticket_write(void *p_ticket,$/;"	f	typeref:typename:int
mbedtls_ssl_tls12_get_preferred_hash_for_sig_alg	library/ssl_tls.c	/^unsigned int mbedtls_ssl_tls12_get_preferred_hash_for_sig_alg($/;"	f	typeref:typename:unsigned int
mbedtls_ssl_tls12_named_group_is_ecdhe	library/ssl_misc.h	/^static inline int mbedtls_ssl_tls12_named_group_is_ecdhe(uint16_t named_group)$/;"	f	typeref:typename:int
mbedtls_ssl_tls12_sig_alg_is_supported	library/ssl_misc.h	/^static inline int mbedtls_ssl_tls12_sig_alg_is_supported($/;"	f	typeref:typename:int
mbedtls_ssl_tls12_write_client_hello_exts	library/ssl_tls12_client.c	/^int mbedtls_ssl_tls12_write_client_hello_exts(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
mbedtls_ssl_tls13_calculate_verify_data	library/ssl_tls13_keys.c	/^int mbedtls_ssl_tls13_calculate_verify_data(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
mbedtls_ssl_tls13_check_kex_modes	library/ssl_misc.h	/^static inline unsigned mbedtls_ssl_tls13_check_kex_modes(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:unsigned
mbedtls_ssl_tls13_check_received_extension	library/ssl_tls13_generic.c	/^int mbedtls_ssl_tls13_check_received_extension($/;"	f	typeref:typename:int
mbedtls_ssl_tls13_check_sig_alg_cert_key_match	library/ssl_tls13_generic.c	/^int mbedtls_ssl_tls13_check_sig_alg_cert_key_match(uint16_t sig_alg,$/;"	f	typeref:typename:int
mbedtls_ssl_tls13_cipher_suite_is_offered	library/ssl_misc.h	/^static inline int mbedtls_ssl_tls13_cipher_suite_is_offered($/;"	f	typeref:typename:int
mbedtls_ssl_tls13_compute_application_transform	library/ssl_tls13_keys.c	/^int mbedtls_ssl_tls13_compute_application_transform(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_tls13_compute_early_transform	library/ssl_tls13_keys.c	/^int mbedtls_ssl_tls13_compute_early_transform(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_tls13_compute_handshake_transform	library/ssl_tls13_keys.c	/^int mbedtls_ssl_tls13_compute_handshake_transform(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_tls13_compute_resumption_master_secret	library/ssl_tls13_keys.c	/^int mbedtls_ssl_tls13_compute_resumption_master_secret(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_tls13_create_psk_binder	library/ssl_tls13_keys.c	/^int mbedtls_ssl_tls13_create_psk_binder(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
mbedtls_ssl_tls13_derive_application_secrets	library/ssl_tls13_keys.c	/^int mbedtls_ssl_tls13_derive_application_secrets($/;"	f	typeref:typename:int
mbedtls_ssl_tls13_derive_early_secrets	library/ssl_tls13_keys.c	/^int mbedtls_ssl_tls13_derive_early_secrets($/;"	f	typeref:typename:int
mbedtls_ssl_tls13_derive_handshake_secrets	library/ssl_tls13_keys.c	/^int mbedtls_ssl_tls13_derive_handshake_secrets($/;"	f	typeref:typename:int
mbedtls_ssl_tls13_derive_resumption_master_secret	library/ssl_tls13_keys.c	/^int mbedtls_ssl_tls13_derive_resumption_master_secret($/;"	f	typeref:typename:int
mbedtls_ssl_tls13_derive_secret	library/ssl_tls13_keys.c	/^int mbedtls_ssl_tls13_derive_secret($/;"	f	typeref:typename:int
mbedtls_ssl_tls13_ephemeral_enabled	library/ssl_misc.h	/^static inline int mbedtls_ssl_tls13_ephemeral_enabled(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_tls13_evolve_secret	library/ssl_tls13_keys.c	/^int mbedtls_ssl_tls13_evolve_secret($/;"	f	typeref:typename:int
mbedtls_ssl_tls13_export_handshake_psk	library/ssl_tls13_keys.c	/^int mbedtls_ssl_tls13_export_handshake_psk(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
mbedtls_ssl_tls13_fetch_handshake_msg	library/ssl_tls13_generic.c	/^int mbedtls_ssl_tls13_fetch_handshake_msg(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
mbedtls_ssl_tls13_finalize_client_hello	library/ssl_tls13_client.c	/^int mbedtls_ssl_tls13_finalize_client_hello(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_tls13_generate_and_write_xxdh_key_exchange	library/ssl_tls13_generic.c	/^int mbedtls_ssl_tls13_generate_and_write_xxdh_key_exchange($/;"	f	typeref:typename:int
mbedtls_ssl_tls13_handshake_client_step	library/ssl_tls13_client.c	/^int mbedtls_ssl_tls13_handshake_client_step(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_tls13_handshake_server_step	library/ssl_tls13_server.c	/^int mbedtls_ssl_tls13_handshake_server_step(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_tls13_handshake_wrapup	library/ssl_tls13_generic.c	/^void mbedtls_ssl_tls13_handshake_wrapup(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:void
mbedtls_ssl_tls13_hkdf_expand_label	library/ssl_tls13_keys.c	/^int mbedtls_ssl_tls13_hkdf_expand_label($/;"	f	typeref:typename:int
mbedtls_ssl_tls13_is_supported_versions_ext_present_in_exts	library/ssl_tls13_generic.c	/^int mbedtls_ssl_tls13_is_supported_versions_ext_present_in_exts($/;"	f	typeref:typename:int
mbedtls_ssl_tls13_key_exchange_mode_check	library/ssl_misc.h	/^static inline int mbedtls_ssl_tls13_key_exchange_mode_check($/;"	f	typeref:typename:int
mbedtls_ssl_tls13_key_exchange_mode_with_ephemeral	library/ssl_misc.h	/^static inline int mbedtls_ssl_tls13_key_exchange_mode_with_ephemeral($/;"	f	typeref:typename:int
mbedtls_ssl_tls13_key_exchange_mode_with_psk	library/ssl_misc.h	/^static inline int mbedtls_ssl_tls13_key_exchange_mode_with_psk($/;"	f	typeref:typename:int
mbedtls_ssl_tls13_key_schedule_stage_early	library/ssl_tls13_keys.c	/^int mbedtls_ssl_tls13_key_schedule_stage_early(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_tls13_make_traffic_keys	library/ssl_tls13_keys.c	/^int mbedtls_ssl_tls13_make_traffic_keys($/;"	f	typeref:typename:int
mbedtls_ssl_tls13_named_group_is_ecdhe	library/ssl_misc.h	/^static inline int mbedtls_ssl_tls13_named_group_is_ecdhe(uint16_t named_group)$/;"	f	typeref:typename:int
mbedtls_ssl_tls13_named_group_is_ffdh	library/ssl_misc.h	/^static inline int mbedtls_ssl_tls13_named_group_is_ffdh(uint16_t named_group)$/;"	f	typeref:typename:int
mbedtls_ssl_tls13_parse_certificate	library/ssl_tls13_generic.c	/^int mbedtls_ssl_tls13_parse_certificate(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL MBEDTLS_STATIC_TESTABLE int
mbedtls_ssl_tls13_parse_record_size_limit_ext	library/ssl_tls13_generic.c	/^int mbedtls_ssl_tls13_parse_record_size_limit_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int
mbedtls_ssl_tls13_populate_transform	library/ssl_tls13_keys.c	/^int mbedtls_ssl_tls13_populate_transform($/;"	f	typeref:typename:int
mbedtls_ssl_tls13_process_certificate	library/ssl_tls13_generic.c	/^int mbedtls_ssl_tls13_process_certificate(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_tls13_process_certificate_verify	library/ssl_tls13_generic.c	/^int mbedtls_ssl_tls13_process_certificate_verify(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_tls13_process_finished_message	library/ssl_tls13_generic.c	/^int mbedtls_ssl_tls13_process_finished_message(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_tls13_psk_enabled	library/ssl_misc.h	/^static inline int mbedtls_ssl_tls13_psk_enabled(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_tls13_psk_ephemeral_enabled	library/ssl_misc.h	/^static inline int mbedtls_ssl_tls13_psk_ephemeral_enabled($/;"	f	typeref:typename:int
mbedtls_ssl_tls13_read_public_xxdhe_share	library/ssl_tls13_generic.c	/^int mbedtls_ssl_tls13_read_public_xxdhe_share(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
mbedtls_ssl_tls13_set_hs_sent_ext_mask	library/ssl_misc.h	/^static inline void mbedtls_ssl_tls13_set_hs_sent_ext_mask($/;"	f	typeref:typename:void
mbedtls_ssl_tls13_sig_alg_for_cert_verify_is_supported	library/ssl_misc.h	/^static inline int mbedtls_ssl_tls13_sig_alg_for_cert_verify_is_supported($/;"	f	typeref:typename:int
mbedtls_ssl_tls13_sig_alg_is_supported	library/ssl_misc.h	/^static inline int mbedtls_ssl_tls13_sig_alg_is_supported($/;"	f	typeref:typename:int
mbedtls_ssl_tls13_some_ephemeral_enabled	library/ssl_misc.h	/^static inline int mbedtls_ssl_tls13_some_ephemeral_enabled(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_tls13_some_psk_enabled	library/ssl_misc.h	/^static inline int mbedtls_ssl_tls13_some_psk_enabled(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_tls13_write_binders_of_pre_shared_key_ext	library/ssl_tls13_client.c	/^int mbedtls_ssl_tls13_write_binders_of_pre_shared_key_ext($/;"	f	typeref:typename:int
mbedtls_ssl_tls13_write_certificate	library/ssl_tls13_generic.c	/^int mbedtls_ssl_tls13_write_certificate(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_tls13_write_certificate_verify	library/ssl_tls13_generic.c	/^int mbedtls_ssl_tls13_write_certificate_verify(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_tls13_write_change_cipher_spec	library/ssl_tls13_generic.c	/^int mbedtls_ssl_tls13_write_change_cipher_spec(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_tls13_write_client_hello_exts	library/ssl_tls13_client.c	/^int mbedtls_ssl_tls13_write_client_hello_exts(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
mbedtls_ssl_tls13_write_early_data_ext	library/ssl_tls13_generic.c	/^int mbedtls_ssl_tls13_write_early_data_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
mbedtls_ssl_tls13_write_finished_message	library/ssl_tls13_generic.c	/^int mbedtls_ssl_tls13_write_finished_message(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_tls13_write_identities_of_pre_shared_key_ext	library/ssl_tls13_client.c	/^int mbedtls_ssl_tls13_write_identities_of_pre_shared_key_ext($/;"	f	typeref:typename:int
mbedtls_ssl_tls_prf	library/ssl_tls.c	/^int  mbedtls_ssl_tls_prf(const mbedtls_tls_prf_types prf,$/;"	f	typeref:typename:int
mbedtls_ssl_transform_free	library/ssl_msg.c	/^void mbedtls_ssl_transform_free(mbedtls_ssl_transform *transform)$/;"	f	typeref:typename:void
mbedtls_ssl_transform_init	library/ssl_tls.c	/^void mbedtls_ssl_transform_init(mbedtls_ssl_transform *transform)$/;"	f	typeref:typename:void
mbedtls_ssl_transform_uses_aead	library/ssl_misc.h	/^static inline int mbedtls_ssl_transform_uses_aead($/;"	f	typeref:typename:int
mbedtls_ssl_update_handshake_status	library/ssl_msg.c	/^int mbedtls_ssl_update_handshake_status(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_update_in_pointers	library/ssl_msg.c	/^void mbedtls_ssl_update_in_pointers(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:void
mbedtls_ssl_update_out_pointers	library/ssl_msg.c	/^void mbedtls_ssl_update_out_pointers(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:void
mbedtls_ssl_validate_ciphersuite	library/ssl_tls.c	/^int mbedtls_ssl_validate_ciphersuite($/;"	f	typeref:typename:int
mbedtls_ssl_write	library/ssl_msg.c	/^int mbedtls_ssl_write(mbedtls_ssl_context *ssl, const unsigned char *buf, size_t len)$/;"	f	typeref:typename:int
mbedtls_ssl_write_alpn_ext	library/ssl_tls.c	/^int mbedtls_ssl_write_alpn_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
mbedtls_ssl_write_certificate	library/ssl_tls.c	/^int mbedtls_ssl_write_certificate(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_write_change_cipher_spec	library/ssl_msg.c	/^int mbedtls_ssl_write_change_cipher_spec(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_write_client_hello	library/ssl_client.c	/^int mbedtls_ssl_write_client_hello(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_write_finished	library/ssl_tls.c	/^int mbedtls_ssl_write_finished(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_write_fragment	tests/src/test_helpers/ssl_helpers.c	/^int mbedtls_ssl_write_fragment(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
mbedtls_ssl_write_handshake_msg	library/ssl_misc.h	/^static inline int mbedtls_ssl_write_handshake_msg(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int
mbedtls_ssl_write_handshake_msg_ext	library/ssl_msg.c	/^int mbedtls_ssl_write_handshake_msg_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
mbedtls_ssl_write_record	library/ssl_msg.c	/^int mbedtls_ssl_write_record(mbedtls_ssl_context *ssl, int force_flush)$/;"	f	typeref:typename:int
mbedtls_ssl_write_sig_alg_ext	library/ssl_tls.c	/^int mbedtls_ssl_write_sig_alg_ext(mbedtls_ssl_context *ssl, unsigned char *buf,$/;"	f	typeref:typename:int
mbedtls_ssl_write_version	library/ssl_msg.c	/^void mbedtls_ssl_write_version(unsigned char version[2], int transport,$/;"	f	typeref:typename:void
mbedtls_status_is_ssl_in_progress	programs/ssl/ssl_server2.c	/^static int mbedtls_status_is_ssl_in_progress(int ret)$/;"	f	typeref:typename:int	file:
mbedtls_svc_key_id_equal	include/psa/crypto_values.h	/^static inline int mbedtls_svc_key_id_equal(mbedtls_svc_key_id_t id1,$/;"	f	typeref:typename:int
mbedtls_svc_key_id_is_null	include/psa/crypto_values.h	/^static inline int mbedtls_svc_key_id_is_null(mbedtls_svc_key_id_t key)$/;"	f	typeref:typename:int
mbedtls_svc_key_id_make	include/psa/crypto_values.h	/^static inline mbedtls_svc_key_id_t mbedtls_svc_key_id_make($/;"	f	typeref:typename:mbedtls_svc_key_id_t
mbedtls_test_ascii2uc	tests/src/helpers.c	/^int mbedtls_test_ascii2uc(const char c, unsigned char *uc)$/;"	f	typeref:typename:int
mbedtls_test_asn1_skip_integer	tests/src/asn1_helpers.c	/^int mbedtls_test_asn1_skip_integer(unsigned char **p, const unsigned char *end,$/;"	f	typeref:typename:int
mbedtls_test_disable_insecure_external_rng	tests/src/fake_external_rng_for_test.c	/^void mbedtls_test_disable_insecure_external_rng(void)$/;"	f	typeref:typename:void
mbedtls_test_driver_aead_hooks_init	tests/include/test/drivers/aead.h	/^mbedtls_test_driver_aead_hooks_init(void)$/;"	f	typeref:typename:mbedtls_test_driver_aead_hooks_t
mbedtls_test_driver_asymmetric_encryption_hooks_init	tests/include/test/drivers/asymmetric_encryption.h	/^mbedtls_test_driver_asymmetric_encryption_hooks_init(void)$/;"	f	typeref:typename:mbedtls_test_driver_asymmetric_encryption_hooks_t
mbedtls_test_driver_cipher_hooks_init	tests/include/test/drivers/cipher.h	/^mbedtls_test_driver_cipher_hooks_init(void)$/;"	f	typeref:typename:mbedtls_test_driver_cipher_hooks_t
mbedtls_test_driver_hash_hooks_init	tests/include/test/drivers/hash.h	/^mbedtls_test_driver_hash_hooks_init(void)$/;"	f	typeref:typename:mbedtls_test_driver_hash_hooks_t
mbedtls_test_driver_key_agreement_hooks_init	tests/include/test/drivers/key_agreement.h	/^mbedtls_test_driver_key_agreement_hooks_init(void)$/;"	f	typeref:typename:mbedtls_test_driver_key_agreement_hooks_t
mbedtls_test_driver_key_management_hooks_init	tests/include/test/drivers/key_management.h	/^mbedtls_test_driver_key_management_hooks_init(void)$/;"	f	typeref:typename:mbedtls_test_driver_key_management_hooks_t
mbedtls_test_driver_mac_hooks_init	tests/include/test/drivers/mac.h	/^mbedtls_test_driver_mac_hooks_init(void)$/;"	f	typeref:typename:mbedtls_test_driver_mac_hooks_t
mbedtls_test_driver_pake_hooks_init	tests/include/test/drivers/pake.h	/^mbedtls_test_driver_pake_hooks_init(void)$/;"	f	typeref:typename:mbedtls_test_driver_pake_hooks_t
mbedtls_test_driver_signature_hooks_init	tests/include/test/drivers/signature.h	/^mbedtls_test_driver_signature_hooks_init(void)$/;"	f	typeref:typename:mbedtls_test_driver_signature_hooks_t
mbedtls_test_enable_insecure_external_rng	tests/src/fake_external_rng_for_test.c	/^void mbedtls_test_enable_insecure_external_rng(void)$/;"	f	typeref:typename:void
mbedtls_test_equal	tests/src/helpers.c	/^int mbedtls_test_equal(const char *test, int line_no, const char *filename,$/;"	f	typeref:typename:int
mbedtls_test_err_add_check	tests/src/helpers.c	/^void mbedtls_test_err_add_check(int high, int low,$/;"	f	typeref:typename:void
mbedtls_test_fail	tests/src/helpers.c	/^void mbedtls_test_fail(const char *test, int line_no, const char *filename)$/;"	f	typeref:typename:void
mbedtls_test_fail_if_psa_leaking	tests/src/psa_crypto_helpers.c	/^int mbedtls_test_fail_if_psa_leaking(int line_no, const char *filename)$/;"	f	typeref:typename:int
mbedtls_test_free_handshake_options	tests/src/test_helpers/ssl_helpers.c	/^void mbedtls_test_free_handshake_options($/;"	f	typeref:typename:void
mbedtls_test_helper_is_psa_leaking	tests/src/psa_crypto_helpers.c	/^const char *mbedtls_test_helper_is_psa_leaking(void)$/;"	f	typeref:typename:const char *
mbedtls_test_hexcmp	tests/src/helpers.c	/^int mbedtls_test_hexcmp(uint8_t *a, uint8_t *b,$/;"	f	typeref:typename:int
mbedtls_test_hexify	tests/src/helpers.c	/^void mbedtls_test_hexify(unsigned char *obuf,$/;"	f	typeref:typename:void
mbedtls_test_info_reset	tests/src/helpers.c	/^void mbedtls_test_info_reset(void)$/;"	f	typeref:typename:void
mbedtls_test_init_handshake_options	tests/src/test_helpers/ssl_helpers.c	/^void mbedtls_test_init_handshake_options($/;"	f	typeref:typename:void
mbedtls_test_inject_entropy_restore	tests/src/psa_crypto_helpers.c	/^int mbedtls_test_inject_entropy_restore(void)$/;"	f	typeref:typename:int
mbedtls_test_inject_entropy_seed_read	tests/src/psa_crypto_helpers.c	/^int mbedtls_test_inject_entropy_seed_read(unsigned char *buf, size_t len)$/;"	f	typeref:typename:int
mbedtls_test_inject_entropy_seed_write	tests/src/psa_crypto_helpers.c	/^int mbedtls_test_inject_entropy_seed_write(unsigned char *buf, size_t len)$/;"	f	typeref:typename:int
mbedtls_test_le_s	tests/src/helpers.c	/^int mbedtls_test_le_s(const char *test, int line_no, const char *filename,$/;"	f	typeref:typename:int
mbedtls_test_le_u	tests/src/helpers.c	/^int mbedtls_test_le_u(const char *test, int line_no, const char *filename,$/;"	f	typeref:typename:int
mbedtls_test_message_socket_close	tests/src/test_helpers/ssl_helpers.c	/^void mbedtls_test_message_socket_close($/;"	f	typeref:typename:void
mbedtls_test_message_socket_init	tests/src/test_helpers/ssl_helpers.c	/^void mbedtls_test_message_socket_init($/;"	f	typeref:typename:void
mbedtls_test_message_socket_setup	tests/src/test_helpers/ssl_helpers.c	/^int mbedtls_test_message_socket_setup($/;"	f	typeref:typename:int
mbedtls_test_mock_socket_close	tests/src/test_helpers/ssl_helpers.c	/^void mbedtls_test_mock_socket_close(mbedtls_test_mock_socket *socket)$/;"	f	typeref:typename:void
mbedtls_test_mock_socket_connect	tests/src/test_helpers/ssl_helpers.c	/^int mbedtls_test_mock_socket_connect(mbedtls_test_mock_socket *peer1,$/;"	f	typeref:typename:int
mbedtls_test_mock_socket_init	tests/src/test_helpers/ssl_helpers.c	/^void mbedtls_test_mock_socket_init(mbedtls_test_mock_socket *socket)$/;"	f	typeref:typename:void
mbedtls_test_mock_tcp_recv_b	tests/src/test_helpers/ssl_helpers.c	/^int mbedtls_test_mock_tcp_recv_b(void *ctx, unsigned char *buf, size_t len)$/;"	f	typeref:typename:int
mbedtls_test_mock_tcp_recv_msg	tests/src/test_helpers/ssl_helpers.c	/^int mbedtls_test_mock_tcp_recv_msg(void *ctx,$/;"	f	typeref:typename:int
mbedtls_test_mock_tcp_recv_nb	tests/src/test_helpers/ssl_helpers.c	/^int mbedtls_test_mock_tcp_recv_nb(void *ctx, unsigned char *buf, size_t len)$/;"	f	typeref:typename:int
mbedtls_test_mock_tcp_send_b	tests/src/test_helpers/ssl_helpers.c	/^int mbedtls_test_mock_tcp_send_b(void *ctx,$/;"	f	typeref:typename:int
mbedtls_test_mock_tcp_send_msg	tests/src/test_helpers/ssl_helpers.c	/^int mbedtls_test_mock_tcp_send_msg(void *ctx,$/;"	f	typeref:typename:int
mbedtls_test_mock_tcp_send_nb	tests/src/test_helpers/ssl_helpers.c	/^int mbedtls_test_mock_tcp_send_nb(void *ctx,$/;"	f	typeref:typename:int
mbedtls_test_move_handshake_to_state	tests/src/test_helpers/ssl_helpers.c	/^int mbedtls_test_move_handshake_to_state(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
mbedtls_test_mpi_mod_modulus_free_with_limbs	tests/src/bignum_helpers.c	/^void mbedtls_test_mpi_mod_modulus_free_with_limbs(mbedtls_mpi_mod_modulus *N)$/;"	f	typeref:typename:void
mbedtls_test_mutex_usage_check	tests/src/threading_helpers.c	/^void mbedtls_test_mutex_usage_check(void)$/;"	f	typeref:typename:void
mbedtls_test_mutex_usage_end	tests/src/threading_helpers.c	/^void mbedtls_test_mutex_usage_end(void)$/;"	f	typeref:typename:void
mbedtls_test_mutex_usage_error	tests/src/threading_helpers.c	/^static void mbedtls_test_mutex_usage_error(mbedtls_threading_mutex_t *mutex,$/;"	f	typeref:typename:void	file:
mbedtls_test_mutex_usage_init	tests/src/threading_helpers.c	/^void mbedtls_test_mutex_usage_init(void)$/;"	f	typeref:typename:void
mbedtls_test_opaque_asymmetric_decrypt	tests/src/drivers/test_driver_asymmetric_encryption.c	/^psa_status_t mbedtls_test_opaque_asymmetric_decrypt($/;"	f	typeref:typename:psa_status_t
mbedtls_test_opaque_asymmetric_encrypt	tests/src/drivers/test_driver_asymmetric_encryption.c	/^psa_status_t mbedtls_test_opaque_asymmetric_encrypt($/;"	f	typeref:typename:psa_status_t
mbedtls_test_opaque_cipher_abort	tests/src/drivers/test_driver_cipher.c	/^psa_status_t mbedtls_test_opaque_cipher_abort($/;"	f	typeref:typename:psa_status_t
mbedtls_test_opaque_cipher_decrypt	tests/src/drivers/test_driver_cipher.c	/^psa_status_t mbedtls_test_opaque_cipher_decrypt($/;"	f	typeref:typename:psa_status_t
mbedtls_test_opaque_cipher_decrypt_setup	tests/src/drivers/test_driver_cipher.c	/^psa_status_t mbedtls_test_opaque_cipher_decrypt_setup($/;"	f	typeref:typename:psa_status_t
mbedtls_test_opaque_cipher_encrypt	tests/src/drivers/test_driver_cipher.c	/^psa_status_t mbedtls_test_opaque_cipher_encrypt($/;"	f	typeref:typename:psa_status_t
mbedtls_test_opaque_cipher_encrypt_setup	tests/src/drivers/test_driver_cipher.c	/^psa_status_t mbedtls_test_opaque_cipher_encrypt_setup($/;"	f	typeref:typename:psa_status_t
mbedtls_test_opaque_cipher_finish	tests/src/drivers/test_driver_cipher.c	/^psa_status_t mbedtls_test_opaque_cipher_finish($/;"	f	typeref:typename:psa_status_t
mbedtls_test_opaque_cipher_set_iv	tests/src/drivers/test_driver_cipher.c	/^psa_status_t mbedtls_test_opaque_cipher_set_iv($/;"	f	typeref:typename:psa_status_t
mbedtls_test_opaque_cipher_update	tests/src/drivers/test_driver_cipher.c	/^psa_status_t mbedtls_test_opaque_cipher_update($/;"	f	typeref:typename:psa_status_t
mbedtls_test_opaque_copy_key	tests/src/drivers/test_driver_key_management.c	/^psa_status_t mbedtls_test_opaque_copy_key($/;"	f	typeref:typename:psa_status_t
mbedtls_test_opaque_export_key	tests/src/drivers/test_driver_key_management.c	/^psa_status_t mbedtls_test_opaque_export_key($/;"	f	typeref:typename:psa_status_t
mbedtls_test_opaque_export_public_key	tests/src/drivers/test_driver_key_management.c	/^psa_status_t mbedtls_test_opaque_export_public_key($/;"	f	typeref:typename:psa_status_t
mbedtls_test_opaque_free	tests/src/drivers/test_driver_key_management.c	/^void mbedtls_test_opaque_free(void)$/;"	f	typeref:typename:void
mbedtls_test_opaque_generate_key	tests/src/drivers/test_driver_key_management.c	/^psa_status_t mbedtls_test_opaque_generate_key($/;"	f	typeref:typename:psa_status_t
mbedtls_test_opaque_get_base_size	tests/src/drivers/test_driver_key_management.c	/^static size_t mbedtls_test_opaque_get_base_size()$/;"	f	typeref:typename:size_t	file:
mbedtls_test_opaque_get_builtin_key	tests/src/drivers/test_driver_key_management.c	/^psa_status_t mbedtls_test_opaque_get_builtin_key($/;"	f	typeref:typename:psa_status_t
mbedtls_test_opaque_import_key	tests/src/drivers/test_driver_key_management.c	/^psa_status_t mbedtls_test_opaque_import_key($/;"	f	typeref:typename:psa_status_t
mbedtls_test_opaque_init	tests/src/drivers/test_driver_key_management.c	/^psa_status_t mbedtls_test_opaque_init(void)$/;"	f	typeref:typename:psa_status_t
mbedtls_test_opaque_key_agreement	tests/src/drivers/test_driver_key_agreement.c	/^psa_status_t mbedtls_test_opaque_key_agreement($/;"	f	typeref:typename:psa_status_t
mbedtls_test_opaque_mac_abort	tests/src/drivers/test_driver_mac.c	/^psa_status_t mbedtls_test_opaque_mac_abort($/;"	f	typeref:typename:psa_status_t
mbedtls_test_opaque_mac_compute	tests/src/drivers/test_driver_mac.c	/^psa_status_t mbedtls_test_opaque_mac_compute($/;"	f	typeref:typename:psa_status_t
mbedtls_test_opaque_mac_sign_finish	tests/src/drivers/test_driver_mac.c	/^psa_status_t mbedtls_test_opaque_mac_sign_finish($/;"	f	typeref:typename:psa_status_t
mbedtls_test_opaque_mac_sign_setup	tests/src/drivers/test_driver_mac.c	/^psa_status_t mbedtls_test_opaque_mac_sign_setup($/;"	f	typeref:typename:psa_status_t
mbedtls_test_opaque_mac_update	tests/src/drivers/test_driver_mac.c	/^psa_status_t mbedtls_test_opaque_mac_update($/;"	f	typeref:typename:psa_status_t
mbedtls_test_opaque_mac_verify_finish	tests/src/drivers/test_driver_mac.c	/^psa_status_t mbedtls_test_opaque_mac_verify_finish($/;"	f	typeref:typename:psa_status_t
mbedtls_test_opaque_mac_verify_setup	tests/src/drivers/test_driver_mac.c	/^psa_status_t mbedtls_test_opaque_mac_verify_setup($/;"	f	typeref:typename:psa_status_t
mbedtls_test_opaque_signature_sign_hash	tests/src/drivers/test_driver_signature.c	/^psa_status_t mbedtls_test_opaque_signature_sign_hash($/;"	f	typeref:typename:psa_status_t
mbedtls_test_opaque_signature_sign_message	tests/src/drivers/test_driver_signature.c	/^psa_status_t mbedtls_test_opaque_signature_sign_message($/;"	f	typeref:typename:psa_status_t
mbedtls_test_opaque_signature_verify_hash	tests/src/drivers/test_driver_signature.c	/^psa_status_t mbedtls_test_opaque_signature_verify_hash($/;"	f	typeref:typename:psa_status_t
mbedtls_test_opaque_signature_verify_message	tests/src/drivers/test_driver_signature.c	/^psa_status_t mbedtls_test_opaque_signature_verify_message($/;"	f	typeref:typename:psa_status_t
mbedtls_test_opaque_size_function	tests/src/drivers/test_driver_key_management.c	/^size_t mbedtls_test_opaque_size_function($/;"	f	typeref:typename:size_t
mbedtls_test_opaque_unwrap_key	tests/src/drivers/test_driver_key_management.c	/^static psa_status_t mbedtls_test_opaque_unwrap_key($/;"	f	typeref:typename:psa_status_t	file:
mbedtls_test_opaque_wrap_key	tests/src/drivers/test_driver_key_management.c	/^static psa_status_t mbedtls_test_opaque_wrap_key($/;"	f	typeref:typename:psa_status_t	file:
mbedtls_test_parse_binary_string	tests/src/psa_crypto_helpers.c	/^uint64_t mbedtls_test_parse_binary_string(data_t *bin_string)$/;"	f	typeref:typename:uint64_t
mbedtls_test_platform_setup	tests/src/helpers.c	/^int mbedtls_test_platform_setup(void)$/;"	f	typeref:typename:int
mbedtls_test_platform_teardown	tests/src/helpers.c	/^void mbedtls_test_platform_teardown(void)$/;"	f	typeref:typename:void
mbedtls_test_psa_cipher_encrypt_helper	tests/src/test_helpers/ssl_helpers.c	/^int mbedtls_test_psa_cipher_encrypt_helper(mbedtls_ssl_transform *transform,$/;"	f	typeref:typename:int
mbedtls_test_psa_exercise_key	tests/src/psa_exercise_key.c	/^int mbedtls_test_psa_exercise_key(mbedtls_svc_key_id_t key,$/;"	f	typeref:typename:int
mbedtls_test_psa_exported_key_sanity_check	tests/src/psa_exercise_key.c	/^int mbedtls_test_psa_exported_key_sanity_check($/;"	f	typeref:typename:int
mbedtls_test_psa_key_agreement_with_self	tests/src/psa_exercise_key.c	/^psa_status_t mbedtls_test_psa_key_agreement_with_self($/;"	f	typeref:typename:psa_status_t
mbedtls_test_psa_purge_key_cache	tests/src/psa_crypto_helpers.c	/^void mbedtls_test_psa_purge_key_cache(void)$/;"	f	typeref:typename:void
mbedtls_test_psa_purge_key_storage	tests/src/psa_crypto_helpers.c	/^void mbedtls_test_psa_purge_key_storage(void)$/;"	f	typeref:typename:void
mbedtls_test_psa_raw_key_agreement_with_self	tests/src/psa_exercise_key.c	/^psa_status_t mbedtls_test_psa_raw_key_agreement_with_self($/;"	f	typeref:typename:psa_status_t
mbedtls_test_psa_setup_key_derivation_wrap	tests/src/psa_exercise_key.c	/^int mbedtls_test_psa_setup_key_derivation_wrap($/;"	f	typeref:typename:int
mbedtls_test_psa_usage_to_exercise	tests/src/psa_exercise_key.c	/^psa_key_usage_t mbedtls_test_psa_usage_to_exercise(psa_key_type_t type,$/;"	f	typeref:typename:psa_key_usage_t
mbedtls_test_read_mpi	tests/src/bignum_helpers.c	/^int mbedtls_test_read_mpi(mbedtls_mpi *X, const char *s)$/;"	f	typeref:typename:int
mbedtls_test_read_mpi_core	tests/src/bignum_helpers.c	/^int mbedtls_test_read_mpi_core(mbedtls_mpi_uint **pX, size_t *plimbs,$/;"	f	typeref:typename:int
mbedtls_test_read_mpi_modulus	tests/src/bignum_helpers.c	/^int mbedtls_test_read_mpi_modulus(mbedtls_mpi_mod_modulus *N,$/;"	f	typeref:typename:int
mbedtls_test_record_status	tests/src/psa_crypto_helpers.c	/^psa_status_t mbedtls_test_record_status(psa_status_t status,$/;"	f	typeref:typename:psa_status_t
mbedtls_test_rnd_buffer_rand	tests/src/random.c	/^int mbedtls_test_rnd_buffer_rand(void *rng_state,$/;"	f	typeref:typename:int
mbedtls_test_rnd_pseudo_rand	tests/src/random.c	/^int mbedtls_test_rnd_pseudo_rand(void *rng_state,$/;"	f	typeref:typename:int
mbedtls_test_rnd_std_rand	tests/src/random.c	/^int mbedtls_test_rnd_std_rand(void *rng_state,$/;"	f	typeref:typename:int
mbedtls_test_rnd_zero_rand	tests/src/random.c	/^int mbedtls_test_rnd_zero_rand(void *rng_state,$/;"	f	typeref:typename:int
mbedtls_test_set_step	tests/src/helpers.c	/^void mbedtls_test_set_step(unsigned long step)$/;"	f	typeref:typename:void
mbedtls_test_skip	tests/src/helpers.c	/^void mbedtls_test_skip(const char *test, int line_no, const char *filename)$/;"	f	typeref:typename:void
mbedtls_test_ssl_buffer_free	tests/src/test_helpers/ssl_helpers.c	/^void mbedtls_test_ssl_buffer_free(mbedtls_test_ssl_buffer *buf)$/;"	f	typeref:typename:void
mbedtls_test_ssl_buffer_get	tests/src/test_helpers/ssl_helpers.c	/^int mbedtls_test_ssl_buffer_get(mbedtls_test_ssl_buffer *buf,$/;"	f	typeref:typename:int
mbedtls_test_ssl_buffer_init	tests/src/test_helpers/ssl_helpers.c	/^void mbedtls_test_ssl_buffer_init(mbedtls_test_ssl_buffer *buf)$/;"	f	typeref:typename:void
mbedtls_test_ssl_buffer_put	tests/src/test_helpers/ssl_helpers.c	/^int mbedtls_test_ssl_buffer_put(mbedtls_test_ssl_buffer *buf,$/;"	f	typeref:typename:int
mbedtls_test_ssl_buffer_setup	tests/src/test_helpers/ssl_helpers.c	/^int mbedtls_test_ssl_buffer_setup(mbedtls_test_ssl_buffer *buf,$/;"	f	typeref:typename:int
mbedtls_test_ssl_build_transforms	tests/src/test_helpers/ssl_helpers.c	/^int mbedtls_test_ssl_build_transforms(mbedtls_ssl_transform *t_in,$/;"	f	typeref:typename:int
mbedtls_test_ssl_cipher_info_from_type	tests/src/test_helpers/ssl_helpers.c	/^static void mbedtls_test_ssl_cipher_info_from_type(mbedtls_cipher_type_t cipher_type,$/;"	f	typeref:typename:void	file:
mbedtls_test_ssl_endpoint_certificate_init	tests/src/test_helpers/ssl_helpers.c	/^int mbedtls_test_ssl_endpoint_certificate_init(mbedtls_test_ssl_endpoint *ep,$/;"	f	typeref:typename:int
mbedtls_test_ssl_endpoint_free	tests/src/test_helpers/ssl_helpers.c	/^void mbedtls_test_ssl_endpoint_free($/;"	f	typeref:typename:void
mbedtls_test_ssl_endpoint_init	tests/src/test_helpers/ssl_helpers.c	/^int mbedtls_test_ssl_endpoint_init($/;"	f	typeref:typename:int
mbedtls_test_ssl_exchange_data	tests/src/test_helpers/ssl_helpers.c	/^int mbedtls_test_ssl_exchange_data($/;"	f	typeref:typename:int
mbedtls_test_ssl_log_analyzer	tests/src/test_helpers/ssl_helpers.c	/^void mbedtls_test_ssl_log_analyzer(void *ctx, int level,$/;"	f	typeref:typename:void
mbedtls_test_ssl_message_queue_free	tests/src/test_helpers/ssl_helpers.c	/^void mbedtls_test_ssl_message_queue_free($/;"	f	typeref:typename:void
mbedtls_test_ssl_message_queue_pop_info	tests/src/test_helpers/ssl_helpers.c	/^int mbedtls_test_ssl_message_queue_pop_info($/;"	f	typeref:typename:int
mbedtls_test_ssl_message_queue_push_info	tests/src/test_helpers/ssl_helpers.c	/^int mbedtls_test_ssl_message_queue_push_info($/;"	f	typeref:typename:int
mbedtls_test_ssl_message_queue_setup	tests/src/test_helpers/ssl_helpers.c	/^int mbedtls_test_ssl_message_queue_setup($/;"	f	typeref:typename:int
mbedtls_test_ssl_perform_handshake	tests/src/test_helpers/ssl_helpers.c	/^void mbedtls_test_ssl_perform_handshake($/;"	f	typeref:typename:void
mbedtls_test_ssl_prepare_record_mac	tests/src/test_helpers/ssl_helpers.c	/^int mbedtls_test_ssl_prepare_record_mac(mbedtls_record *record,$/;"	f	typeref:typename:int
mbedtls_test_ssl_tls12_populate_session	tests/src/test_helpers/ssl_helpers.c	/^int mbedtls_test_ssl_tls12_populate_session(mbedtls_ssl_session *session,$/;"	f	typeref:typename:int
mbedtls_test_ssl_tls13_populate_session	tests/src/test_helpers/ssl_helpers.c	/^int mbedtls_test_ssl_tls13_populate_session(mbedtls_ssl_session *session,$/;"	f	typeref:typename:int
mbedtls_test_transparent_aead_abort	tests/src/drivers/test_driver_aead.c	/^psa_status_t mbedtls_test_transparent_aead_abort($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_aead_decrypt	tests/src/drivers/test_driver_aead.c	/^psa_status_t mbedtls_test_transparent_aead_decrypt($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_aead_decrypt_setup	tests/src/drivers/test_driver_aead.c	/^psa_status_t mbedtls_test_transparent_aead_decrypt_setup($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_aead_encrypt	tests/src/drivers/test_driver_aead.c	/^psa_status_t mbedtls_test_transparent_aead_encrypt($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_aead_encrypt_setup	tests/src/drivers/test_driver_aead.c	/^psa_status_t mbedtls_test_transparent_aead_encrypt_setup($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_aead_finish	tests/src/drivers/test_driver_aead.c	/^psa_status_t mbedtls_test_transparent_aead_finish($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_aead_set_lengths	tests/src/drivers/test_driver_aead.c	/^psa_status_t mbedtls_test_transparent_aead_set_lengths($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_aead_set_nonce	tests/src/drivers/test_driver_aead.c	/^psa_status_t mbedtls_test_transparent_aead_set_nonce($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_aead_update	tests/src/drivers/test_driver_aead.c	/^psa_status_t mbedtls_test_transparent_aead_update($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_aead_update_ad	tests/src/drivers/test_driver_aead.c	/^psa_status_t mbedtls_test_transparent_aead_update_ad($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_aead_verify	tests/src/drivers/test_driver_aead.c	/^psa_status_t mbedtls_test_transparent_aead_verify($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_asymmetric_decrypt	tests/src/drivers/test_driver_asymmetric_encryption.c	/^psa_status_t mbedtls_test_transparent_asymmetric_decrypt($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_asymmetric_encrypt	tests/src/drivers/test_driver_asymmetric_encryption.c	/^psa_status_t mbedtls_test_transparent_asymmetric_encrypt($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_cipher_abort	tests/src/drivers/test_driver_cipher.c	/^psa_status_t mbedtls_test_transparent_cipher_abort($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_cipher_decrypt	tests/src/drivers/test_driver_cipher.c	/^psa_status_t mbedtls_test_transparent_cipher_decrypt($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_cipher_decrypt_setup	tests/src/drivers/test_driver_cipher.c	/^psa_status_t mbedtls_test_transparent_cipher_decrypt_setup($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_cipher_encrypt	tests/src/drivers/test_driver_cipher.c	/^psa_status_t mbedtls_test_transparent_cipher_encrypt($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_cipher_encrypt_setup	tests/src/drivers/test_driver_cipher.c	/^psa_status_t mbedtls_test_transparent_cipher_encrypt_setup($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_cipher_finish	tests/src/drivers/test_driver_cipher.c	/^psa_status_t mbedtls_test_transparent_cipher_finish($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_cipher_set_iv	tests/src/drivers/test_driver_cipher.c	/^psa_status_t mbedtls_test_transparent_cipher_set_iv($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_cipher_update	tests/src/drivers/test_driver_cipher.c	/^psa_status_t mbedtls_test_transparent_cipher_update($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_export_public_key	tests/src/drivers/test_driver_key_management.c	/^psa_status_t mbedtls_test_transparent_export_public_key($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_free	tests/src/drivers/test_driver_key_management.c	/^void mbedtls_test_transparent_free(void)$/;"	f	typeref:typename:void
mbedtls_test_transparent_generate_key	tests/src/drivers/test_driver_key_management.c	/^psa_status_t mbedtls_test_transparent_generate_key($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_hash_abort	tests/src/drivers/hash.c	/^psa_status_t mbedtls_test_transparent_hash_abort($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_hash_clone	tests/src/drivers/hash.c	/^psa_status_t mbedtls_test_transparent_hash_clone($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_hash_compute	tests/src/drivers/hash.c	/^psa_status_t mbedtls_test_transparent_hash_compute($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_hash_finish	tests/src/drivers/hash.c	/^psa_status_t mbedtls_test_transparent_hash_finish($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_hash_setup	tests/src/drivers/hash.c	/^psa_status_t mbedtls_test_transparent_hash_setup($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_hash_update	tests/src/drivers/hash.c	/^psa_status_t mbedtls_test_transparent_hash_update($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_import_key	tests/src/drivers/test_driver_key_management.c	/^psa_status_t mbedtls_test_transparent_import_key($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_init	tests/src/drivers/test_driver_key_management.c	/^psa_status_t mbedtls_test_transparent_init(void)$/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_key_agreement	tests/src/drivers/test_driver_key_agreement.c	/^psa_status_t mbedtls_test_transparent_key_agreement($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_mac_abort	tests/src/drivers/test_driver_mac.c	/^psa_status_t mbedtls_test_transparent_mac_abort($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_mac_compute	tests/src/drivers/test_driver_mac.c	/^psa_status_t mbedtls_test_transparent_mac_compute($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_mac_sign_finish	tests/src/drivers/test_driver_mac.c	/^psa_status_t mbedtls_test_transparent_mac_sign_finish($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_mac_sign_setup	tests/src/drivers/test_driver_mac.c	/^psa_status_t mbedtls_test_transparent_mac_sign_setup($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_mac_update	tests/src/drivers/test_driver_mac.c	/^psa_status_t mbedtls_test_transparent_mac_update($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_mac_verify_finish	tests/src/drivers/test_driver_mac.c	/^psa_status_t mbedtls_test_transparent_mac_verify_finish($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_mac_verify_setup	tests/src/drivers/test_driver_mac.c	/^psa_status_t mbedtls_test_transparent_mac_verify_setup($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_pake_abort	tests/src/drivers/test_driver_pake.c	/^psa_status_t mbedtls_test_transparent_pake_abort($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_pake_get_implicit_key	tests/src/drivers/test_driver_pake.c	/^psa_status_t mbedtls_test_transparent_pake_get_implicit_key($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_pake_input	tests/src/drivers/test_driver_pake.c	/^psa_status_t mbedtls_test_transparent_pake_input($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_pake_output	tests/src/drivers/test_driver_pake.c	/^psa_status_t mbedtls_test_transparent_pake_output($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_pake_setup	tests/src/drivers/test_driver_pake.c	/^psa_status_t mbedtls_test_transparent_pake_setup($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_signature_sign_hash	tests/src/drivers/test_driver_signature.c	/^psa_status_t mbedtls_test_transparent_signature_sign_hash($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_signature_sign_message	tests/src/drivers/test_driver_signature.c	/^psa_status_t mbedtls_test_transparent_signature_sign_message($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_signature_verify_hash	tests/src/drivers/test_driver_signature.c	/^psa_status_t mbedtls_test_transparent_signature_verify_hash($/;"	f	typeref:typename:psa_status_t
mbedtls_test_transparent_signature_verify_message	tests/src/drivers/test_driver_signature.c	/^psa_status_t mbedtls_test_transparent_signature_verify_message($/;"	f	typeref:typename:psa_status_t
mbedtls_test_tweak_tls13_certificate_msg_vector_len	tests/src/test_helpers/ssl_helpers.c	/^int mbedtls_test_tweak_tls13_certificate_msg_vector_len($/;"	f	typeref:typename:int
mbedtls_test_unhexify	tests/src/helpers.c	/^int mbedtls_test_unhexify(unsigned char *obuf,$/;"	f	typeref:typename:int
mbedtls_test_unhexify_alloc	tests/src/helpers.c	/^unsigned char *mbedtls_test_unhexify_alloc(const char *ibuf, size_t *olen)$/;"	f	typeref:typename:unsigned char *
mbedtls_test_update_key_usage_flags	tests/src/psa_crypto_helpers.c	/^psa_key_usage_t mbedtls_test_update_key_usage_flags(psa_key_usage_t usage_flags)$/;"	f	typeref:typename:psa_key_usage_t
mbedtls_test_uses_key_id	tests/src/psa_crypto_helpers.c	/^int mbedtls_test_uses_key_id(mbedtls_svc_key_id_t key_id)$/;"	f	typeref:typename:int
mbedtls_test_wrap_mutex_free	tests/src/threading_helpers.c	/^static void mbedtls_test_wrap_mutex_free(mbedtls_threading_mutex_t *mutex)$/;"	f	typeref:typename:void	file:
mbedtls_test_wrap_mutex_init	tests/src/threading_helpers.c	/^static void mbedtls_test_wrap_mutex_init(mbedtls_threading_mutex_t *mutex)$/;"	f	typeref:typename:void	file:
mbedtls_test_wrap_mutex_lock	tests/src/threading_helpers.c	/^static int mbedtls_test_wrap_mutex_lock(mbedtls_threading_mutex_t *mutex)$/;"	f	typeref:typename:int	file:
mbedtls_test_wrap_mutex_unlock	tests/src/threading_helpers.c	/^static int mbedtls_test_wrap_mutex_unlock(mbedtls_threading_mutex_t *mutex)$/;"	f	typeref:typename:int	file:
mbedtls_test_zero_alloc	tests/src/helpers.c	/^unsigned char *mbedtls_test_zero_alloc(size_t len)$/;"	f	typeref:typename:unsigned char *
mbedtls_threading_free_alt	library/threading.c	/^void mbedtls_threading_free_alt(void)$/;"	f	typeref:typename:void
mbedtls_threading_set_alt	library/threading.c	/^void mbedtls_threading_set_alt(void (*mutex_init)(mbedtls_threading_mutex_t *),$/;"	f	typeref:typename:void
mbedtls_timing_get_delay	library/timing.c	/^int mbedtls_timing_get_delay(void *data)$/;"	f	typeref:typename:int
mbedtls_timing_get_final_delay	library/timing.c	/^uint32_t mbedtls_timing_get_final_delay($/;"	f	typeref:typename:uint32_t
mbedtls_timing_get_timer	library/timing.c	/^unsigned long mbedtls_timing_get_timer(struct mbedtls_timing_hr_time *val, int reset)$/;"	f	typeref:typename:unsigned long
mbedtls_timing_hardclock	programs/test/benchmark.c	/^static unsigned long mbedtls_timing_hardclock(void)$/;"	f	typeref:typename:unsigned long	file:
mbedtls_timing_set_delay	library/timing.c	/^void mbedtls_timing_set_delay(void *data, uint32_t int_ms, uint32_t fin_ms)$/;"	f	typeref:typename:void
mbedtls_to_psa_error	library/psa_crypto.c	/^psa_status_t mbedtls_to_psa_error(int ret)$/;"	f	typeref:typename:psa_status_t
mbedtls_version_get_number	library/version.c	/^unsigned int mbedtls_version_get_number(void)$/;"	f	typeref:typename:unsigned int
mbedtls_version_get_string	library/version.c	/^void mbedtls_version_get_string(char *string)$/;"	f	typeref:typename:void
mbedtls_version_get_string_full	library/version.c	/^void mbedtls_version_get_string_full(char *string)$/;"	f	typeref:typename:void
mbedtls_x25519_calc_secret	3rdparty/everest/library/x25519.c	/^int mbedtls_x25519_calc_secret( mbedtls_x25519_context *ctx, size_t *olen,$/;"	f	typeref:typename:int
mbedtls_x25519_free	3rdparty/everest/library/x25519.c	/^void mbedtls_x25519_free( mbedtls_x25519_context *ctx )$/;"	f	typeref:typename:void
mbedtls_x25519_get_params	3rdparty/everest/library/x25519.c	/^int mbedtls_x25519_get_params( mbedtls_x25519_context *ctx, const mbedtls_ecp_keypair *key,$/;"	f	typeref:typename:int
mbedtls_x25519_init	3rdparty/everest/library/x25519.c	/^void mbedtls_x25519_init( mbedtls_x25519_context *ctx )$/;"	f	typeref:typename:void
mbedtls_x25519_make_params	3rdparty/everest/library/x25519.c	/^int mbedtls_x25519_make_params( mbedtls_x25519_context *ctx, size_t *olen,$/;"	f	typeref:typename:int
mbedtls_x25519_make_public	3rdparty/everest/library/x25519.c	/^int mbedtls_x25519_make_public( mbedtls_x25519_context *ctx, size_t *olen,$/;"	f	typeref:typename:int
mbedtls_x25519_read_params	3rdparty/everest/library/x25519.c	/^int mbedtls_x25519_read_params( mbedtls_x25519_context *ctx,$/;"	f	typeref:typename:int
mbedtls_x25519_read_public	3rdparty/everest/library/x25519.c	/^int mbedtls_x25519_read_public( mbedtls_x25519_context *ctx,$/;"	f	typeref:typename:int
mbedtls_x509_crl_free	library/x509_crl.c	/^void mbedtls_x509_crl_free(mbedtls_x509_crl *crl)$/;"	f	typeref:typename:void
mbedtls_x509_crl_info	library/x509_crl.c	/^int mbedtls_x509_crl_info(char *buf, size_t size, const char *prefix,$/;"	f	typeref:typename:int
mbedtls_x509_crl_init	library/x509_crl.c	/^void mbedtls_x509_crl_init(mbedtls_x509_crl *crl)$/;"	f	typeref:typename:void
mbedtls_x509_crl_parse	library/x509_crl.c	/^int mbedtls_x509_crl_parse(mbedtls_x509_crl *chain, const unsigned char *buf, size_t buflen)$/;"	f	typeref:typename:int
mbedtls_x509_crl_parse_der	library/x509_crl.c	/^int mbedtls_x509_crl_parse_der(mbedtls_x509_crl *chain,$/;"	f	typeref:typename:int
mbedtls_x509_crl_parse_file	library/x509_crl.c	/^int mbedtls_x509_crl_parse_file(mbedtls_x509_crl *chain, const char *path)$/;"	f	typeref:typename:int
mbedtls_x509_crt_check_extended_key_usage	library/x509_crt.c	/^int mbedtls_x509_crt_check_extended_key_usage(const mbedtls_x509_crt *crt,$/;"	f	typeref:typename:int
mbedtls_x509_crt_check_key_usage	library/x509_crt.c	/^int mbedtls_x509_crt_check_key_usage(const mbedtls_x509_crt *crt,$/;"	f	typeref:typename:int
mbedtls_x509_crt_free	library/x509_crt.c	/^void mbedtls_x509_crt_free(mbedtls_x509_crt *crt)$/;"	f	typeref:typename:void
mbedtls_x509_crt_has_ext_type	include/mbedtls/x509_crt.h	/^static inline int mbedtls_x509_crt_has_ext_type(const mbedtls_x509_crt *ctx,$/;"	f	typeref:typename:int
mbedtls_x509_crt_info	library/x509_crt.c	/^int mbedtls_x509_crt_info(char *buf, size_t size, const char *prefix,$/;"	f	typeref:typename:int
mbedtls_x509_crt_init	library/x509_crt.c	/^void mbedtls_x509_crt_init(mbedtls_x509_crt *crt)$/;"	f	typeref:typename:void
mbedtls_x509_crt_is_revoked	library/x509_crt.c	/^int mbedtls_x509_crt_is_revoked(const mbedtls_x509_crt *crt, const mbedtls_x509_crl *crl)$/;"	f	typeref:typename:int
mbedtls_x509_crt_parse	library/x509_crt.c	/^int mbedtls_x509_crt_parse(mbedtls_x509_crt *chain,$/;"	f	typeref:typename:int
mbedtls_x509_crt_parse_cn_inet_pton	library/x509_crt.c	/^size_t mbedtls_x509_crt_parse_cn_inet_pton(const char *cn, void *dst)$/;"	f	typeref:typename:size_t
mbedtls_x509_crt_parse_der	library/x509_crt.c	/^int mbedtls_x509_crt_parse_der(mbedtls_x509_crt *chain,$/;"	f	typeref:typename:int
mbedtls_x509_crt_parse_der_internal	library/x509_crt.c	/^static int mbedtls_x509_crt_parse_der_internal(mbedtls_x509_crt *chain,$/;"	f	typeref:typename:int	file:
mbedtls_x509_crt_parse_der_nocopy	library/x509_crt.c	/^int mbedtls_x509_crt_parse_der_nocopy(mbedtls_x509_crt *chain,$/;"	f	typeref:typename:int
mbedtls_x509_crt_parse_der_with_ext_cb	library/x509_crt.c	/^int mbedtls_x509_crt_parse_der_with_ext_cb(mbedtls_x509_crt *chain,$/;"	f	typeref:typename:int
mbedtls_x509_crt_parse_file	library/x509_crt.c	/^int mbedtls_x509_crt_parse_file(mbedtls_x509_crt *chain, const char *path)$/;"	f	typeref:typename:int
mbedtls_x509_crt_parse_path	library/x509_crt.c	/^int mbedtls_x509_crt_parse_path(mbedtls_x509_crt *chain, const char *path)$/;"	f	typeref:typename:int
mbedtls_x509_crt_restart_free	library/x509_crt.c	/^void mbedtls_x509_crt_restart_free(mbedtls_x509_crt_restart_ctx *ctx)$/;"	f	typeref:typename:void
mbedtls_x509_crt_restart_init	library/x509_crt.c	/^void mbedtls_x509_crt_restart_init(mbedtls_x509_crt_restart_ctx *ctx)$/;"	f	typeref:typename:void
mbedtls_x509_crt_verify	library/x509_crt.c	/^int mbedtls_x509_crt_verify(mbedtls_x509_crt *crt,$/;"	f	typeref:typename:int
mbedtls_x509_crt_verify_info	library/x509_crt.c	/^int mbedtls_x509_crt_verify_info(char *buf, size_t size, const char *prefix,$/;"	f	typeref:typename:int
mbedtls_x509_crt_verify_restartable	library/x509_crt.c	/^int mbedtls_x509_crt_verify_restartable(mbedtls_x509_crt *crt,$/;"	f	typeref:typename:int
mbedtls_x509_crt_verify_with_ca_cb	library/x509_crt.c	/^int mbedtls_x509_crt_verify_with_ca_cb(mbedtls_x509_crt *crt,$/;"	f	typeref:typename:int
mbedtls_x509_crt_verify_with_profile	library/x509_crt.c	/^int mbedtls_x509_crt_verify_with_profile(mbedtls_x509_crt *crt,$/;"	f	typeref:typename:int
mbedtls_x509_csr_free	library/x509_csr.c	/^void mbedtls_x509_csr_free(mbedtls_x509_csr *csr)$/;"	f	typeref:typename:void
mbedtls_x509_csr_info	library/x509_csr.c	/^int mbedtls_x509_csr_info(char *buf, size_t size, const char *prefix,$/;"	f	typeref:typename:int
mbedtls_x509_csr_init	library/x509_csr.c	/^void mbedtls_x509_csr_init(mbedtls_x509_csr *csr)$/;"	f	typeref:typename:void
mbedtls_x509_csr_parse	library/x509_csr.c	/^int mbedtls_x509_csr_parse(mbedtls_x509_csr *csr, const unsigned char *buf, size_t buflen)$/;"	f	typeref:typename:int
mbedtls_x509_csr_parse_der	library/x509_csr.c	/^int mbedtls_x509_csr_parse_der(mbedtls_x509_csr *csr,$/;"	f	typeref:typename:int
mbedtls_x509_csr_parse_der_internal	library/x509_csr.c	/^static int mbedtls_x509_csr_parse_der_internal(mbedtls_x509_csr *csr,$/;"	f	typeref:typename:int	file:
mbedtls_x509_csr_parse_der_with_ext_cb	library/x509_csr.c	/^int mbedtls_x509_csr_parse_der_with_ext_cb(mbedtls_x509_csr *csr,$/;"	f	typeref:typename:int
mbedtls_x509_csr_parse_file	library/x509_csr.c	/^int mbedtls_x509_csr_parse_file(mbedtls_x509_csr *csr, const char *path)$/;"	f	typeref:typename:int
mbedtls_x509_dn_get_next	include/mbedtls/x509.h	/^static inline mbedtls_x509_name *mbedtls_x509_dn_get_next($/;"	f	typeref:typename:mbedtls_x509_name *
mbedtls_x509_dn_gets	library/x509.c	/^int mbedtls_x509_dn_gets(char *buf, size_t size, const mbedtls_x509_name *dn)$/;"	f	typeref:typename:int
mbedtls_x509_free_subject_alt_name	library/x509.c	/^void mbedtls_x509_free_subject_alt_name(mbedtls_x509_subject_alternative_name *san)$/;"	f	typeref:typename:void
mbedtls_x509_get_alg	library/x509.c	/^int mbedtls_x509_get_alg(unsigned char **p, const unsigned char *end,$/;"	f	typeref:typename:int
mbedtls_x509_get_alg_null	library/x509.c	/^int mbedtls_x509_get_alg_null(unsigned char **p, const unsigned char *end,$/;"	f	typeref:typename:int
mbedtls_x509_get_ext	library/x509.c	/^int mbedtls_x509_get_ext(unsigned char **p, const unsigned char *end,$/;"	f	typeref:typename:int
mbedtls_x509_get_key_usage	library/x509.c	/^int mbedtls_x509_get_key_usage(unsigned char **p,$/;"	f	typeref:typename:int
mbedtls_x509_get_name	library/x509.c	/^int mbedtls_x509_get_name(unsigned char **p, const unsigned char *end,$/;"	f	typeref:typename:int
mbedtls_x509_get_ns_cert_type	library/x509.c	/^int mbedtls_x509_get_ns_cert_type(unsigned char **p,$/;"	f	typeref:typename:int
mbedtls_x509_get_rsassa_pss_params	library/x509.c	/^int mbedtls_x509_get_rsassa_pss_params(const mbedtls_x509_buf *params,$/;"	f	typeref:typename:int
mbedtls_x509_get_serial	library/x509.c	/^int mbedtls_x509_get_serial(unsigned char **p, const unsigned char *end,$/;"	f	typeref:typename:int
mbedtls_x509_get_sig	library/x509.c	/^int mbedtls_x509_get_sig(unsigned char **p, const unsigned char *end, mbedtls_x509_buf *sig)$/;"	f	typeref:typename:int
mbedtls_x509_get_sig_alg	library/x509.c	/^int mbedtls_x509_get_sig_alg(const mbedtls_x509_buf *sig_oid, const mbedtls_x509_buf *sig_params/;"	f	typeref:typename:int
mbedtls_x509_get_subject_alt_name	library/x509.c	/^int mbedtls_x509_get_subject_alt_name(unsigned char **p,$/;"	f	typeref:typename:int
mbedtls_x509_get_subject_alt_name_ext	library/x509.c	/^int mbedtls_x509_get_subject_alt_name_ext(unsigned char **p,$/;"	f	typeref:typename:int
mbedtls_x509_get_time	library/x509.c	/^int mbedtls_x509_get_time(unsigned char **p, const unsigned char *end,$/;"	f	typeref:typename:int
mbedtls_x509_info_cert_type	library/x509.c	/^int mbedtls_x509_info_cert_type(char **buf, size_t *size,$/;"	f	typeref:typename:int
mbedtls_x509_info_key_usage	library/x509.c	/^int mbedtls_x509_info_key_usage(char **buf, size_t *size,$/;"	f	typeref:typename:int
mbedtls_x509_info_subject_alt_name	library/x509.c	/^int mbedtls_x509_info_subject_alt_name(char **buf, size_t *size,$/;"	f	typeref:typename:int
mbedtls_x509_key_size_helper	library/x509.c	/^int mbedtls_x509_key_size_helper(char *buf, size_t buf_size, const char *name)$/;"	f	typeref:typename:int
mbedtls_x509_parse_subject_alt_name	library/x509.c	/^int mbedtls_x509_parse_subject_alt_name(const mbedtls_x509_buf *san_buf,$/;"	f	typeref:typename:int
mbedtls_x509_serial_gets	library/x509.c	/^int mbedtls_x509_serial_gets(char *buf, size_t size, const mbedtls_x509_buf *serial)$/;"	f	typeref:typename:int
mbedtls_x509_set_extension	library/x509_create.c	/^int mbedtls_x509_set_extension(mbedtls_asn1_named_data **head, const char *oid, size_t oid_len,$/;"	f	typeref:typename:int
mbedtls_x509_sig_alg_gets	library/x509.c	/^int mbedtls_x509_sig_alg_gets(char *buf, size_t size, const mbedtls_x509_buf *sig_oid,$/;"	f	typeref:typename:int
mbedtls_x509_string_to_names	library/x509_create.c	/^int mbedtls_x509_string_to_names(mbedtls_asn1_named_data **head, const char *name)$/;"	f	typeref:typename:int
mbedtls_x509_time_cmp	library/x509.c	/^int mbedtls_x509_time_cmp(const mbedtls_x509_time *t1,$/;"	f	typeref:typename:int
mbedtls_x509_time_gmtime	library/x509.c	/^int mbedtls_x509_time_gmtime(mbedtls_time_t tt, mbedtls_x509_time *now)$/;"	f	typeref:typename:int
mbedtls_x509_time_is_future	library/x509.c	/^int mbedtls_x509_time_is_future(const mbedtls_x509_time *from)$/;"	f	typeref:typename:int
mbedtls_x509_time_is_past	library/x509.c	/^int mbedtls_x509_time_is_past(const mbedtls_x509_time *to)$/;"	f	typeref:typename:int
mbedtls_x509_write_extensions	library/x509_create.c	/^int mbedtls_x509_write_extensions(unsigned char **p, unsigned char *start,$/;"	f	typeref:typename:int
mbedtls_x509_write_names	library/x509_create.c	/^int mbedtls_x509_write_names(unsigned char **p, unsigned char *start,$/;"	f	typeref:typename:int
mbedtls_x509_write_set_san_common	library/x509write.c	/^int mbedtls_x509_write_set_san_common(mbedtls_asn1_named_data **extensions,$/;"	f	typeref:typename:int
mbedtls_x509_write_sig	library/x509_create.c	/^int mbedtls_x509_write_sig(unsigned char **p, unsigned char *start,$/;"	f	typeref:typename:int
mbedtls_x509write_crt_der	library/x509write_crt.c	/^int mbedtls_x509write_crt_der(mbedtls_x509write_cert *ctx,$/;"	f	typeref:typename:int
mbedtls_x509write_crt_free	library/x509write_crt.c	/^void mbedtls_x509write_crt_free(mbedtls_x509write_cert *ctx)$/;"	f	typeref:typename:void
mbedtls_x509write_crt_init	library/x509write_crt.c	/^void mbedtls_x509write_crt_init(mbedtls_x509write_cert *ctx)$/;"	f	typeref:typename:void
mbedtls_x509write_crt_pem	library/x509write_crt.c	/^int mbedtls_x509write_crt_pem(mbedtls_x509write_cert *crt,$/;"	f	typeref:typename:int
mbedtls_x509write_crt_set_authority_key_identifier	library/x509write_crt.c	/^int mbedtls_x509write_crt_set_authority_key_identifier(mbedtls_x509write_cert *ctx)$/;"	f	typeref:typename:int
mbedtls_x509write_crt_set_basic_constraints	library/x509write_crt.c	/^int mbedtls_x509write_crt_set_basic_constraints(mbedtls_x509write_cert *ctx,$/;"	f	typeref:typename:int
mbedtls_x509write_crt_set_ext_key_usage	library/x509write_crt.c	/^int mbedtls_x509write_crt_set_ext_key_usage(mbedtls_x509write_cert *ctx,$/;"	f	typeref:typename:int
mbedtls_x509write_crt_set_extension	library/x509write_crt.c	/^int mbedtls_x509write_crt_set_extension(mbedtls_x509write_cert *ctx,$/;"	f	typeref:typename:int
mbedtls_x509write_crt_set_issuer_key	library/x509write_crt.c	/^void mbedtls_x509write_crt_set_issuer_key(mbedtls_x509write_cert *ctx,$/;"	f	typeref:typename:void
mbedtls_x509write_crt_set_issuer_name	library/x509write_crt.c	/^int mbedtls_x509write_crt_set_issuer_name(mbedtls_x509write_cert *ctx,$/;"	f	typeref:typename:int
mbedtls_x509write_crt_set_key_identifier	library/x509write_crt.c	/^static int mbedtls_x509write_crt_set_key_identifier(mbedtls_x509write_cert *ctx,$/;"	f	typeref:typename:int	file:
mbedtls_x509write_crt_set_key_usage	library/x509write_crt.c	/^int mbedtls_x509write_crt_set_key_usage(mbedtls_x509write_cert *ctx,$/;"	f	typeref:typename:int
mbedtls_x509write_crt_set_md_alg	library/x509write_crt.c	/^void mbedtls_x509write_crt_set_md_alg(mbedtls_x509write_cert *ctx,$/;"	f	typeref:typename:void
mbedtls_x509write_crt_set_ns_cert_type	library/x509write_crt.c	/^int mbedtls_x509write_crt_set_ns_cert_type(mbedtls_x509write_cert *ctx,$/;"	f	typeref:typename:int
mbedtls_x509write_crt_set_serial	library/x509write_crt.c	/^int mbedtls_x509write_crt_set_serial(mbedtls_x509write_cert *ctx,$/;"	f	typeref:typename:int
mbedtls_x509write_crt_set_serial_raw	library/x509write_crt.c	/^int mbedtls_x509write_crt_set_serial_raw(mbedtls_x509write_cert *ctx,$/;"	f	typeref:typename:int
mbedtls_x509write_crt_set_subject_alternative_name	library/x509write_crt.c	/^int mbedtls_x509write_crt_set_subject_alternative_name(mbedtls_x509write_cert *ctx,$/;"	f	typeref:typename:int
mbedtls_x509write_crt_set_subject_key	library/x509write_crt.c	/^void mbedtls_x509write_crt_set_subject_key(mbedtls_x509write_cert *ctx,$/;"	f	typeref:typename:void
mbedtls_x509write_crt_set_subject_key_identifier	library/x509write_crt.c	/^int mbedtls_x509write_crt_set_subject_key_identifier(mbedtls_x509write_cert *ctx)$/;"	f	typeref:typename:int
mbedtls_x509write_crt_set_subject_name	library/x509write_crt.c	/^int mbedtls_x509write_crt_set_subject_name(mbedtls_x509write_cert *ctx,$/;"	f	typeref:typename:int
mbedtls_x509write_crt_set_validity	library/x509write_crt.c	/^int mbedtls_x509write_crt_set_validity(mbedtls_x509write_cert *ctx,$/;"	f	typeref:typename:int
mbedtls_x509write_crt_set_version	library/x509write_crt.c	/^void mbedtls_x509write_crt_set_version(mbedtls_x509write_cert *ctx,$/;"	f	typeref:typename:void
mbedtls_x509write_csr_der	library/x509write_csr.c	/^int mbedtls_x509write_csr_der(mbedtls_x509write_csr *ctx, unsigned char *buf,$/;"	f	typeref:typename:int
mbedtls_x509write_csr_free	library/x509write_csr.c	/^void mbedtls_x509write_csr_free(mbedtls_x509write_csr *ctx)$/;"	f	typeref:typename:void
mbedtls_x509write_csr_init	library/x509write_csr.c	/^void mbedtls_x509write_csr_init(mbedtls_x509write_csr *ctx)$/;"	f	typeref:typename:void
mbedtls_x509write_csr_pem	library/x509write_csr.c	/^int mbedtls_x509write_csr_pem(mbedtls_x509write_csr *ctx, unsigned char *buf, size_t size,$/;"	f	typeref:typename:int
mbedtls_x509write_csr_set_extension	library/x509write_csr.c	/^int mbedtls_x509write_csr_set_extension(mbedtls_x509write_csr *ctx,$/;"	f	typeref:typename:int
mbedtls_x509write_csr_set_key	library/x509write_csr.c	/^void mbedtls_x509write_csr_set_key(mbedtls_x509write_csr *ctx, mbedtls_pk_context *key)$/;"	f	typeref:typename:void
mbedtls_x509write_csr_set_key_usage	library/x509write_csr.c	/^int mbedtls_x509write_csr_set_key_usage(mbedtls_x509write_csr *ctx, unsigned char key_usage)$/;"	f	typeref:typename:int
mbedtls_x509write_csr_set_md_alg	library/x509write_csr.c	/^void mbedtls_x509write_csr_set_md_alg(mbedtls_x509write_csr *ctx, mbedtls_md_type_t md_alg)$/;"	f	typeref:typename:void
mbedtls_x509write_csr_set_ns_cert_type	library/x509write_csr.c	/^int mbedtls_x509write_csr_set_ns_cert_type(mbedtls_x509write_csr *ctx,$/;"	f	typeref:typename:int
mbedtls_x509write_csr_set_subject_alternative_name	library/x509write_csr.c	/^int mbedtls_x509write_csr_set_subject_alternative_name(mbedtls_x509write_csr *ctx,$/;"	f	typeref:typename:int
mbedtls_x509write_csr_set_subject_name	library/x509write_csr.c	/^int mbedtls_x509write_csr_set_subject_name(mbedtls_x509write_csr *ctx,$/;"	f	typeref:typename:int
mbedtls_xor	library/common.h	/^inline void mbedtls_xor(unsigned char *r, const unsigned char *a, const unsigned char *b, size_t/;"	f	typeref:typename:void
mbedtls_xor_no_simd	library/common.h	/^static inline void mbedtls_xor_no_simd(unsigned char *r,$/;"	f	typeref:typename:void
mbedtls_zeroize_and_free	library/platform_util.c	/^void mbedtls_zeroize_and_free(void *buf, size_t len)$/;"	f	typeref:typename:void
md_can_use_psa	library/md.c	/^static int md_can_use_psa(const mbedtls_md_info_t *info)$/;"	f	typeref:typename:int	file:
md_type_to_string	library/x509.c	/^static inline const char *md_type_to_string(mbedtls_md_type_t md_alg)$/;"	f	typeref:typename:const char *	file:
memory_leak	programs/test/metatest.c	/^void memory_leak(const char *name)$/;"	f	typeref:typename:void
meta_test_fail	programs/test/metatest.c	/^void meta_test_fail(const char *name)$/;"	f	typeref:typename:void
mgf_mask	library/rsa.c	/^static int mgf_mask(unsigned char *dst, size_t dlen, unsigned char *src,$/;"	f	typeref:typename:int	file:
mpi_bigendian_to_host	library/bignum_core.c	/^static mbedtls_mpi_uint mpi_bigendian_to_host(mbedtls_mpi_uint a)$/;"	f	typeref:typename:mbedtls_mpi_uint	file:
mpi_check_small_factors	library/bignum.c	/^static int mpi_check_small_factors(const mbedtls_mpi *X)$/;"	f	typeref:typename:int	file:
mpi_free_many	library/ecp.c	/^static void mpi_free_many(mbedtls_mpi *arr, size_t size)$/;"	f	typeref:typename:void	file:
mpi_get_digit	library/bignum.c	/^static int mpi_get_digit(mbedtls_mpi_uint *d, int radix, char c)$/;"	f	typeref:typename:int	file:
mpi_init_many	library/ecp.c	/^static void mpi_init_many(mbedtls_mpi *arr, size_t size)$/;"	f	typeref:typename:void	file:
mpi_miller_rabin	library/bignum.c	/^static int mpi_miller_rabin(const mbedtls_mpi *X, size_t rounds,$/;"	f	typeref:typename:int	file:
mpi_modmul_case_generate	scripts/mbedtls_dev/bignum_core.py	/^def mpi_modmul_case_generate() -> None:$/;"	f	typeref:typename:None
mpi_montg_init	library/bignum.c	/^static void mpi_montg_init(mbedtls_mpi_uint *mm, const mbedtls_mpi *N)$/;"	f	typeref:typename:void	file:
mpi_montmul	library/bignum.c	/^static void mpi_montmul(mbedtls_mpi *A, const mbedtls_mpi *B,$/;"	f	typeref:typename:void	file:
mpi_montred	library/bignum.c	/^static void mpi_montred(mbedtls_mpi *A, const mbedtls_mpi *N,$/;"	f	typeref:typename:void	file:
mpi_select	library/bignum.c	/^static int mpi_select(mbedtls_mpi *R, const mbedtls_mpi *T, size_t T_size, size_t idx)$/;"	f	typeref:typename:int	file:
mpi_sint_abs	library/bignum.c	/^static inline mbedtls_mpi_uint mpi_sint_abs(mbedtls_mpi_sint z)$/;"	f	typeref:typename:mbedtls_mpi_uint	file:
mpi_write_hlp	library/bignum.c	/^static int mpi_write_hlp(mbedtls_mpi *X, int radix,$/;"	f	typeref:typename:int	file:
mps_reader_get_fragment_offset	library/mps_reader.c	/^static inline mbedtls_mps_size_t mps_reader_get_fragment_offset($/;"	f	typeref:typename:mbedtls_mps_size_t	file:
mps_reader_is_accumulating	library/mps_reader.c	/^static inline int mps_reader_is_accumulating($/;"	f	typeref:typename:int	file:
mps_reader_is_consuming	library/mps_reader.c	/^static inline int mps_reader_is_consuming($/;"	f	typeref:typename:int	file:
mps_reader_is_producing	library/mps_reader.c	/^static inline int mps_reader_is_producing($/;"	f	typeref:typename:int	file:
mps_reader_serving_from_accumulator	library/mps_reader.c	/^static inline mbedtls_mps_size_t mps_reader_serving_from_accumulator($/;"	f	typeref:typename:mbedtls_mps_size_t	file:
mps_reader_zero	library/mps_reader.c	/^static inline void mps_reader_zero(mbedtls_mps_reader *rd)$/;"	f	typeref:typename:void	file:
msg_type	programs/test/udp_proxy.c	/^static const char *msg_type(unsigned char *msg, size_t len)$/;"	f	typeref:typename:const char *	file:
mul64	library/poly1305.c	/^static inline uint64_t mul64(uint32_t a, uint32_t b)$/;"	f	typeref:typename:uint64_t	file:
mul64	library/poly1305.c	/^static uint64_t mul64(uint32_t a, uint32_t b)$/;"	f	typeref:typename:uint64_t	file:
mutex_double_free	programs/test/metatest.c	/^void mutex_double_free(const char *name)$/;"	f	typeref:typename:void
mutex_double_init	programs/test/metatest.c	/^void mutex_double_init(const char *name)$/;"	f	typeref:typename:void
mutex_free_not_initialized	programs/test/metatest.c	/^void mutex_free_not_initialized(const char *name)$/;"	f	typeref:typename:void
mutex_leak	programs/test/metatest.c	/^void mutex_leak(const char *name)$/;"	f	typeref:typename:void
mutex_lock_not_initialized	programs/test/metatest.c	/^void mutex_lock_not_initialized(const char *name)$/;"	f	typeref:typename:void
mutex_unlock_not_initialized	programs/test/metatest.c	/^void mutex_unlock_not_initialized(const char *name)$/;"	f	typeref:typename:void
my_debug	programs/ssl/dtls_client.c	/^static void my_debug(void *ctx, int level,$/;"	f	typeref:typename:void	file:
my_debug	programs/ssl/dtls_server.c	/^static void my_debug(void *ctx, int level,$/;"	f	typeref:typename:void	file:
my_debug	programs/ssl/ssl_client1.c	/^static void my_debug(void *ctx, int level,$/;"	f	typeref:typename:void	file:
my_debug	programs/ssl/ssl_fork_server.c	/^static void my_debug(void *ctx, int level,$/;"	f	typeref:typename:void	file:
my_debug	programs/ssl/ssl_mail_client.c	/^static void my_debug(void *ctx, int level,$/;"	f	typeref:typename:void	file:
my_debug	programs/ssl/ssl_server.c	/^static void my_debug(void *ctx, int level,$/;"	f	typeref:typename:void	file:
my_debug	programs/ssl/ssl_test_lib.c	/^void my_debug(void *ctx, int level,$/;"	f	typeref:typename:void
my_debug	programs/x509/cert_app.c	/^static void my_debug(void *ctx, int level,$/;"	f	typeref:typename:void	file:
my_mutexed_debug	programs/ssl/ssl_pthread_server.c	/^static void my_mutexed_debug(void *ctx, int level,$/;"	f	typeref:typename:void	file:
my_verify	programs/ssl/ssl_client2.c	/^static int my_verify(void *data, mbedtls_x509_crt *crt,$/;"	f	typeref:typename:int	file:
my_verify	programs/x509/cert_app.c	/^static int my_verify(void *data, mbedtls_x509_crt *crt, int depth, uint32_t *flags)$/;"	f	typeref:typename:int	file:
myrand	library/rsa.c	/^static int myrand(void *rng_state, unsigned char *output, size_t len)$/;"	f	typeref:typename:int	file:
myrand	programs/test/benchmark.c	/^static int myrand(void *rng_state, unsigned char *output, size_t len)$/;"	f	typeref:typename:int	file:
name_matches_pattern	tests/scripts/analyze_outcomes.py	/^def name_matches_pattern(name: str, str_or_re) -> bool:$/;"	f	typeref:typename:bool
net_prepare	library/net_sockets.c	/^static int net_prepare(void)$/;"	f	typeref:typename:int	file:
net_would_block	library/net_sockets.c	/^static int net_would_block(const mbedtls_net_context *ctx)$/;"	f	typeref:typename:int	file:
nibble_to_hex_digit	library/x509.c	/^static char nibble_to_hex_digit(int i)$/;"	f	typeref:typename:char	file:
normalize	tests/scripts/test_psa_constant_names.py	/^def normalize(expr: str) -> str:$/;"	f	typeref:typename:str
nss_keylog_export	programs/ssl/ssl_test_common_source.c	/^void nss_keylog_export(void *p_expkey,$/;"	f	typeref:typename:void
null_crypt_stream	library/cipher_wrap.c	/^static int null_crypt_stream(void *ctx, size_t length,$/;"	f	typeref:typename:int	file:
null_ctx_alloc	library/cipher_wrap.c	/^static void *null_ctx_alloc(void)$/;"	f	typeref:typename:void *	file:
null_ctx_free	library/cipher_wrap.c	/^static void null_ctx_free(void *ctx)$/;"	f	typeref:typename:void	file:
null_pointer_call	programs/test/metatest.c	/^void null_pointer_call(const char *name)$/;"	f	typeref:typename:void
null_pointer_dereference	programs/test/metatest.c	/^void null_pointer_dereference(const char *name)$/;"	f	typeref:typename:void
null_setkey	library/cipher_wrap.c	/^static int null_setkey(void *ctx, const unsigned char *key,$/;"	f	typeref:typename:int	file:
oid_parse_number	library/oid.c	/^static int oid_parse_number(unsigned int *num, const char **p, const char *bound)$/;"	f	typeref:typename:int	file:
oid_subidentifier_encode_into	library/oid.c	/^static int oid_subidentifier_encode_into(unsigned char **p,$/;"	f	typeref:typename:int	file:
oid_subidentifier_num_bytes	library/oid.c	/^static size_t oid_subidentifier_num_bytes(unsigned int value)$/;"	f	typeref:typename:size_t	file:
opaque_get_bitlen	library/pk_wrap.c	/^static size_t opaque_get_bitlen(mbedtls_pk_context *pk)$/;"	f	typeref:typename:size_t	file:
p256_ecdh_shared_secret	3rdparty/p256-m/p256-m/p256-m.c	/^int p256_ecdh_shared_secret(uint8_t secret[32],$/;"	f	typeref:typename:int
p256_ecdsa_sign	3rdparty/p256-m/p256-m/p256-m.c	/^int p256_ecdsa_sign(uint8_t sig[64], const uint8_t priv[32],$/;"	f	typeref:typename:int
p256_ecdsa_verify	3rdparty/p256-m/p256-m/p256-m.c	/^int p256_ecdsa_verify(const uint8_t sig[64], const uint8_t pub[64],$/;"	f	typeref:typename:int
p256_gen_keypair	3rdparty/p256-m/p256-m/p256-m.c	/^int p256_gen_keypair(uint8_t priv[32], uint8_t pub[64])$/;"	f	typeref:typename:int
p256_generate_random	3rdparty/p256-m/p256-m/p256-m.c	/^int p256_generate_random(uint8_t *output, unsigned output_size)$/;"	f	typeref:typename:int
p256_public_from_private	3rdparty/p256-m/p256-m/p256-m.c	/^int p256_public_from_private(uint8_t pub[64], const uint8_t priv[32])$/;"	f	typeref:typename:int
p256_to_psa_error	3rdparty/p256-m/p256-m_driver_entrypoints.c	/^static psa_status_t p256_to_psa_error(int ret)$/;"	f	typeref:typename:psa_status_t	file:
p256_transparent_export_public_key	3rdparty/p256-m/p256-m_driver_entrypoints.c	/^psa_status_t p256_transparent_export_public_key(const psa_key_attributes_t *attributes,$/;"	f	typeref:typename:psa_status_t
p256_transparent_generate_key	3rdparty/p256-m/p256-m_driver_entrypoints.c	/^psa_status_t p256_transparent_generate_key($/;"	f	typeref:typename:psa_status_t
p256_transparent_import_key	3rdparty/p256-m/p256-m_driver_entrypoints.c	/^psa_status_t p256_transparent_import_key(const psa_key_attributes_t *attributes,$/;"	f	typeref:typename:psa_status_t
p256_transparent_key_agreement	3rdparty/p256-m/p256-m_driver_entrypoints.c	/^psa_status_t p256_transparent_key_agreement($/;"	f	typeref:typename:psa_status_t
p256_transparent_sign_hash	3rdparty/p256-m/p256-m_driver_entrypoints.c	/^psa_status_t p256_transparent_sign_hash($/;"	f	typeref:typename:psa_status_t
p256_transparent_verify_hash	3rdparty/p256-m/p256-m_driver_entrypoints.c	/^psa_status_t p256_transparent_verify_hash($/;"	f	typeref:typename:psa_status_t
p256_validate_privkey	3rdparty/p256-m/p256-m/p256-m.c	/^int p256_validate_privkey(const uint8_t priv[32])$/;"	f	typeref:typename:int
p256_validate_pubkey	3rdparty/p256-m/p256-m/p256-m.c	/^int p256_validate_pubkey(const uint8_t pub[64])$/;"	f	typeref:typename:int
p256_verify_hash_with_public_key	3rdparty/p256-m/p256-m_driver_entrypoints.c	/^static psa_status_t p256_verify_hash_with_public_key($/;"	f	typeref:typename:psa_status_t	file:
parse_arguments	programs/ssl/ssl_context_info.c	/^void parse_arguments(int argc, char *argv[])$/;"	f	typeref:typename:void
parse_attribute_value_hex_der_encoded	library/x509_create.c	/^static int parse_attribute_value_hex_der_encoded(const char *s,$/;"	f	typeref:typename:int	file:
parse_attribute_value_string	library/x509_create.c	/^static int parse_attribute_value_string(const char *s,$/;"	f	typeref:typename:int	file:
parse_cipher	programs/ssl/ssl_server2.c	/^int parse_cipher(char *buf)$/;"	f	typeref:typename:int
parse_groups	programs/ssl/ssl_test_lib.c	/^int parse_groups(const char *groups, uint16_t *group_list, size_t group_list_len)$/;"	f	typeref:typename:int
parse_serial_decimal_format	programs/x509/cert_write.c	/^int parse_serial_decimal_format(unsigned char *obuf, size_t obufmax,$/;"	f	typeref:typename:int
pem_aes_decrypt	library/pem.c	/^static int pem_aes_decrypt(unsigned char aes_iv[16], unsigned int keylen,$/;"	f	typeref:typename:int	file:
pem_des3_decrypt	library/pem.c	/^static int pem_des3_decrypt(unsigned char des3_iv[8],$/;"	f	typeref:typename:int	file:
pem_des_decrypt	library/pem.c	/^static int pem_des_decrypt(unsigned char des_iv[8],$/;"	f	typeref:typename:int	file:
pem_get_iv	library/pem.c	/^static int pem_get_iv(const unsigned char *s, unsigned char *iv,$/;"	f	typeref:typename:int	file:
pem_pbkdf1	library/pem.c	/^static int pem_pbkdf1(unsigned char *key, size_t keylen,$/;"	f	typeref:typename:int	file:
pk_ecc_group_id_from_specified	library/pkparse.c	/^static int pk_ecc_group_id_from_specified(const mbedtls_asn1_buf *params,$/;"	f	typeref:typename:int	file:
pk_ecc_set_group	library/pkparse.c	/^static int pk_ecc_set_group(mbedtls_pk_context *pk, mbedtls_ecp_group_id grp_id)$/;"	f	typeref:typename:int	file:
pk_ecc_set_key	library/pkparse.c	/^static int pk_ecc_set_key(mbedtls_pk_context *pk,$/;"	f	typeref:typename:int	file:
pk_ecc_set_pubkey	library/pkparse.c	/^static int pk_ecc_set_pubkey(mbedtls_pk_context *pk,$/;"	f	typeref:typename:int	file:
pk_ecc_set_pubkey_from_prv	library/pkparse.c	/^static int pk_ecc_set_pubkey_from_prv(mbedtls_pk_context *pk,$/;"	f	typeref:typename:int	file:
pk_ecc_set_pubkey_psa_ecp_fallback	library/pkparse.c	/^static int pk_ecc_set_pubkey_psa_ecp_fallback(mbedtls_pk_context *pk,$/;"	f	typeref:typename:int	file:
pk_ecc_tag_is_specified_ec_domain	library/pkparse.c	/^static int pk_ecc_tag_is_specified_ec_domain(int tag)$/;"	f	typeref:typename:int	file:
pk_ecdsa_sig_asn1_from_psa	library/pk_wrap.c	/^static int pk_ecdsa_sig_asn1_from_psa(unsigned char *sig, size_t *sig_len,$/;"	f	typeref:typename:int	file:
pk_get_ecparams	library/pkparse.c	/^static int pk_get_ecparams(unsigned char **p, const unsigned char *end,$/;"	f	typeref:typename:int	file:
pk_get_pk_alg	library/pkparse.c	/^static int pk_get_pk_alg(unsigned char **p,$/;"	f	typeref:typename:int	file:
pk_get_rsapubkey	library/pkparse.c	/^static int pk_get_rsapubkey(unsigned char **p,$/;"	f	typeref:typename:int	file:
pk_get_type_ext	library/pkwrite.c	/^static mbedtls_pk_type_t pk_get_type_ext(const mbedtls_pk_context *pk)$/;"	f	typeref:typename:mbedtls_pk_type_t	file:
pk_group_from_specified	library/pkparse.c	/^static int pk_group_from_specified(const mbedtls_asn1_buf *params, mbedtls_ecp_group *grp)$/;"	f	typeref:typename:int	file:
pk_group_id_from_group	library/pkparse.c	/^static int pk_group_id_from_group(const mbedtls_ecp_group *grp, mbedtls_ecp_group_id *grp_id)$/;"	f	typeref:typename:int	file:
pk_hashlen_helper	library/pk.c	/^static inline int pk_hashlen_helper(mbedtls_md_type_t md_alg, size_t *hash_len)$/;"	f	typeref:typename:int	file:
pk_parse_key_pkcs1_der	library/pkparse.c	/^static int pk_parse_key_pkcs1_der(mbedtls_rsa_context *rsa,$/;"	f	typeref:typename:int	file:
pk_parse_key_pkcs8_unencrypted_der	library/pkparse.c	/^static int pk_parse_key_pkcs8_unencrypted_der($/;"	f	typeref:typename:int	file:
pk_parse_key_rfc8410_der	library/pkparse.c	/^static int pk_parse_key_rfc8410_der(mbedtls_pk_context *pk,$/;"	f	typeref:typename:int	file:
pk_parse_key_sec1_der	library/pkparse.c	/^static int pk_parse_key_sec1_der(mbedtls_pk_context *pk,$/;"	f	typeref:typename:int	file:
pk_restart_setup	library/pk.c	/^static int pk_restart_setup(mbedtls_pk_restart_ctx *ctx,$/;"	f	typeref:typename:int	file:
pk_use_ecparams	library/pkparse.c	/^static int pk_use_ecparams(const mbedtls_asn1_buf *params, mbedtls_pk_context *pk)$/;"	f	typeref:typename:int	file:
pk_use_ecparams_rfc8410	library/pkparse.c	/^static int pk_use_ecparams_rfc8410(const mbedtls_asn1_buf *params,$/;"	f	typeref:typename:int	file:
pk_write_ec_der	library/pkwrite.c	/^static int pk_write_ec_der(unsigned char **p, unsigned char *buf,$/;"	f	typeref:typename:int	file:
pk_write_ec_param	library/pkwrite.c	/^static int pk_write_ec_param(unsigned char **p, unsigned char *start,$/;"	f	typeref:typename:int	file:
pk_write_ec_private	library/pkwrite.c	/^static int pk_write_ec_private(unsigned char **p, unsigned char *start,$/;"	f	typeref:typename:int	file:
pk_write_ec_pubkey	library/pkwrite.c	/^static int pk_write_ec_pubkey(unsigned char **p, unsigned char *start,$/;"	f	typeref:typename:int	file:
pk_write_ec_rfc8410_der	library/pkwrite.c	/^static int pk_write_ec_rfc8410_der(unsigned char **p, unsigned char *buf,$/;"	f	typeref:typename:int	file:
pk_write_opaque_pubkey	library/pkwrite.c	/^static int pk_write_opaque_pubkey(unsigned char **p, unsigned char *start,$/;"	f	typeref:typename:int	file:
pk_write_rsa_der	library/pkwrite.c	/^static int pk_write_rsa_der(unsigned char **p, unsigned char *buf,$/;"	f	typeref:typename:int	file:
pk_write_rsa_pubkey	library/pkwrite.c	/^static int pk_write_rsa_pubkey(unsigned char **p, unsigned char *start,$/;"	f	typeref:typename:int	file:
pkcs12_fill_buffer	library/pkcs12.c	/^static void pkcs12_fill_buffer(unsigned char *data, size_t data_len,$/;"	f	typeref:typename:void	file:
pkcs12_parse_pbe_params	library/pkcs12.c	/^static int pkcs12_parse_pbe_params(mbedtls_asn1_buf *params,$/;"	f	typeref:typename:int	file:
pkcs12_pbe_derive_key_iv	library/pkcs12.c	/^static int pkcs12_pbe_derive_key_iv(mbedtls_asn1_buf *pbe_params, mbedtls_md_type_t md_type,$/;"	f	typeref:typename:int	file:
pkcs5_parse_pbkdf2_params	library/pkcs5.c	/^static int pkcs5_parse_pbkdf2_params(const mbedtls_asn1_buf *params,$/;"	f	typeref:typename:int	file:
pkcs5_pbkdf2_hmac	library/pkcs5.c	/^static int pkcs5_pbkdf2_hmac(mbedtls_md_context_t *ctx,$/;"	f	typeref:typename:int	file:
pkcs7_free_signer_info	library/pkcs7.c	/^static void pkcs7_free_signer_info(mbedtls_pkcs7_signer_info *signer)$/;"	f	typeref:typename:void	file:
pkcs7_get_certificates	library/pkcs7.c	/^static int pkcs7_get_certificates(unsigned char **p, unsigned char *end,$/;"	f	typeref:typename:int	file:
pkcs7_get_content_info_type	library/pkcs7.c	/^static int pkcs7_get_content_info_type(unsigned char **p, unsigned char *end,$/;"	f	typeref:typename:int	file:
pkcs7_get_digest_algorithm	library/pkcs7.c	/^static int pkcs7_get_digest_algorithm(unsigned char **p, unsigned char *end,$/;"	f	typeref:typename:int	file:
pkcs7_get_digest_algorithm_set	library/pkcs7.c	/^static int pkcs7_get_digest_algorithm_set(unsigned char **p,$/;"	f	typeref:typename:int	file:
pkcs7_get_next_content_len	library/pkcs7.c	/^static int pkcs7_get_next_content_len(unsigned char **p, unsigned char *end,$/;"	f	typeref:typename:int	file:
pkcs7_get_signature	library/pkcs7.c	/^static int pkcs7_get_signature(unsigned char **p, unsigned char *end,$/;"	f	typeref:typename:int	file:
pkcs7_get_signed_data	library/pkcs7.c	/^static int pkcs7_get_signed_data(unsigned char *buf, size_t buflen,$/;"	f	typeref:typename:int	file:
pkcs7_get_signer_info	library/pkcs7.c	/^static int pkcs7_get_signer_info(unsigned char **p, unsigned char *end,$/;"	f	typeref:typename:int	file:
pkcs7_get_signers_info_set	library/pkcs7.c	/^static int pkcs7_get_signers_info_set(unsigned char **p, unsigned char *end,$/;"	f	typeref:typename:int	file:
pkcs7_get_version	library/pkcs7.c	/^static int pkcs7_get_version(unsigned char **p, unsigned char *end, int *ver)$/;"	f	typeref:typename:int	file:
platform_calloc_uninit	library/platform.c	/^static void *platform_calloc_uninit(size_t n, size_t size)$/;"	f	typeref:typename:void *	file:
platform_exit_uninit	library/platform.c	/^static void platform_exit_uninit(int status)$/;"	f	typeref:typename:void	file:
platform_fprintf_uninit	library/platform.c	/^static int platform_fprintf_uninit(FILE *stream, const char *format, ...)$/;"	f	typeref:typename:int	file:
platform_free_uninit	library/platform.c	/^static void platform_free_uninit(void *ptr)$/;"	f	typeref:typename:void	file:
platform_nv_seed_read_uninit	library/platform.c	/^static int platform_nv_seed_read_uninit(unsigned char *buf, size_t buf_len)$/;"	f	typeref:typename:int	file:
platform_nv_seed_write_uninit	library/platform.c	/^static int platform_nv_seed_write_uninit(unsigned char *buf, size_t buf_len)$/;"	f	typeref:typename:int	file:
platform_printf_uninit	library/platform.c	/^static int platform_printf_uninit(const char *format, ...)$/;"	f	typeref:typename:int	file:
platform_setbuf_uninit	library/platform.c	/^static void platform_setbuf_uninit(FILE *stream, char *buf)$/;"	f	typeref:typename:void	file:
platform_snprintf_uninit	library/platform.c	/^static int platform_snprintf_uninit(char *s, size_t n,$/;"	f	typeref:typename:int	file:
platform_time_uninit	library/platform.c	/^static mbedtls_time_t platform_time_uninit(mbedtls_time_t *timer)$/;"	f	typeref:typename:mbedtls_time_t	file:
platform_vsnprintf_uninit	library/platform.c	/^static int platform_vsnprintf_uninit(char *s, size_t n,$/;"	f	typeref:typename:int	file:
pmull_high	library/aesce.c	/^static inline uint8x16_t pmull_high(uint8x16_t a, uint8x16_t b)$/;"	f	typeref:typename:uint8x16_t	file:
pmull_low	library/aesce.c	/^static inline uint8x16_t pmull_low(uint8x16_t a, uint8x16_t b)$/;"	f	typeref:typename:uint8x16_t	file:
point_add	3rdparty/p256-m/p256-m/p256-m.c	/^static void point_add(uint32_t x1[8], uint32_t y1[8], uint32_t z1[8],$/;"	f	typeref:typename:void	file:
point_add_or_double_leaky	3rdparty/p256-m/p256-m/p256-m.c	/^static void point_add_or_double_leaky($/;"	f	typeref:typename:void	file:
point_check	3rdparty/p256-m/p256-m/p256-m.c	/^static uint32_t point_check(const uint32_t x[8], const uint32_t y[8])$/;"	f	typeref:typename:uint32_t	file:
point_double	3rdparty/p256-m/p256-m/p256-m.c	/^static void point_double(uint32_t x[8], uint32_t y[8], uint32_t z[8])$/;"	f	typeref:typename:void	file:
point_from_bytes	3rdparty/p256-m/p256-m/p256-m.c	/^static int point_from_bytes(uint32_t x[8], uint32_t y[8], const uint8_t p[64])$/;"	f	typeref:typename:int	file:
point_to_affine	3rdparty/p256-m/p256-m/p256-m.c	/^static void point_to_affine(uint32_t x[8], uint32_t y[8], uint32_t z[8])$/;"	f	typeref:typename:void	file:
point_to_bytes	3rdparty/p256-m/p256-m/p256-m.c	/^static void point_to_bytes(uint8_t p[64],$/;"	f	typeref:typename:void	file:
poly1305_compute_mac	library/poly1305.c	/^static void poly1305_compute_mac(const mbedtls_poly1305_context *ctx,$/;"	f	typeref:typename:void	file:
poly1305_process	library/poly1305.c	/^static void poly1305_process(mbedtls_poly1305_context *ctx,$/;"	f	typeref:typename:void	file:
poly_mult_128	library/aesce.c	/^static inline uint8x16x3_t poly_mult_128(uint8x16_t a, uint8x16_t b)$/;"	f	typeref:typename:uint8x16x3_t	file:
poly_mult_reduce	library/aesce.c	/^static inline uint8x16_t poly_mult_reduce(uint8x16x3_t input)$/;"	f	typeref:typename:uint8x16_t	file:
print_b64	programs/ssl/ssl_context_info.c	/^void print_b64(const uint8_t *b, size_t len)$/;"	f	typeref:typename:void
print_buf	programs/cipher/cipher_aead_demo.c	/^void print_buf(const char *title, unsigned char *buf, size_t len)$/;"	f	typeref:typename:void
print_buf	programs/hash/md_hmac_demo.c	/^void print_buf(const char *title, unsigned char *buf, size_t len)$/;"	f	typeref:typename:void
print_buf	programs/psa/aead_demo.c	/^void print_buf(const char *title, uint8_t *buf, size_t len)$/;"	f	typeref:typename:void
print_buf	programs/psa/hmac_demo.c	/^void print_buf(const char *title, uint8_t *buf, size_t len)$/;"	f	typeref:typename:void
print_deserialized_ssl_cert	programs/ssl/ssl_context_info.c	/^void print_deserialized_ssl_cert(const uint8_t *ssl, uint32_t len)$/;"	f	typeref:typename:void
print_deserialized_ssl_context	programs/ssl/ssl_context_info.c	/^void print_deserialized_ssl_context(const uint8_t *ssl, size_t len)$/;"	f	typeref:typename:void
print_deserialized_ssl_session	programs/ssl/ssl_context_info.c	/^void print_deserialized_ssl_session(const uint8_t *ssl, uint32_t len,$/;"	f	typeref:typename:void
print_hex	programs/ssl/ssl_context_info.c	/^void print_hex(const uint8_t *b, size_t len,$/;"	f	typeref:typename:void
print_if_bit	programs/ssl/ssl_context_info.c	/^void print_if_bit(const char *str, int bit, int val)$/;"	f	typeref:typename:void
print_packet	programs/test/udp_proxy.c	/^void print_packet(const packet *p, const char *why)$/;"	f	typeref:typename:void
print_time	programs/ssl/ssl_context_info.c	/^void print_time(const uint64_t *time)$/;"	f	typeref:typename:void
print_usage	programs/ssl/ssl_context_info.c	/^void print_usage(void)$/;"	f	typeref:typename:void
print_version	programs/ssl/ssl_context_info.c	/^void print_version(void)$/;"	f	typeref:typename:void
printf_dbg	programs/ssl/ssl_context_info.c	/^void printf_dbg(const char *str, ...)$/;"	f	typeref:typename:void
printf_err	programs/ssl/ssl_context_info.c	/^void printf_err(const char *str, ...)$/;"	f	typeref:typename:MBEDTLS_PRINTF_ATTRIBUTE (1,2)void
process_signed	programs/psa/psa_constant_names.c	/^int process_signed(signed_value_type type, long min, long max, char **argp)$/;"	f	typeref:typename:int
process_unsigned	programs/psa/psa_constant_names.c	/^int process_unsigned(unsigned_value_type type, unsigned long max, char **argp)$/;"	f	typeref:typename:int
psa_aead_abort	library/psa_crypto.c	/^psa_status_t psa_aead_abort(psa_aead_operation_t *operation)$/;"	f	typeref:typename:psa_status_t
psa_aead_check_algorithm	library/psa_crypto.c	/^static psa_status_t psa_aead_check_algorithm(psa_algorithm_t alg)$/;"	f	typeref:typename:psa_status_t	file:
psa_aead_check_nonce_length	library/psa_crypto.c	/^static psa_status_t psa_aead_check_nonce_length(psa_algorithm_t alg,$/;"	f	typeref:typename:psa_status_t	file:
psa_aead_decrypt	library/psa_crypto.c	/^psa_status_t psa_aead_decrypt(mbedtls_svc_key_id_t key,$/;"	f	typeref:typename:psa_status_t
psa_aead_decrypt_setup	library/psa_crypto.c	/^psa_status_t psa_aead_decrypt_setup(psa_aead_operation_t *operation,$/;"	f	typeref:typename:psa_status_t
psa_aead_encrypt	library/psa_crypto.c	/^psa_status_t psa_aead_encrypt(mbedtls_svc_key_id_t key,$/;"	f	typeref:typename:psa_status_t
psa_aead_encrypt_setup	library/psa_crypto.c	/^psa_status_t psa_aead_encrypt_setup(psa_aead_operation_t *operation,$/;"	f	typeref:typename:psa_status_t
psa_aead_final_checks	library/psa_crypto.c	/^static psa_status_t psa_aead_final_checks(const psa_aead_operation_t *operation)$/;"	f	typeref:typename:psa_status_t	file:
psa_aead_finish	library/psa_crypto.c	/^psa_status_t psa_aead_finish(psa_aead_operation_t *operation,$/;"	f	typeref:typename:psa_status_t
psa_aead_generate_nonce	library/psa_crypto.c	/^psa_status_t psa_aead_generate_nonce(psa_aead_operation_t *operation,$/;"	f	typeref:typename:psa_status_t
psa_aead_get_base_algorithm	library/psa_crypto.c	/^static psa_algorithm_t psa_aead_get_base_algorithm(psa_algorithm_t alg)$/;"	f	typeref:typename:psa_algorithm_t	file:
psa_aead_operation_init	include/psa/crypto_struct.h	/^static inline struct psa_aead_operation_s psa_aead_operation_init(void)$/;"	f	typeref:struct:psa_aead_operation_s
psa_aead_set_lengths	library/psa_crypto.c	/^psa_status_t psa_aead_set_lengths(psa_aead_operation_t *operation,$/;"	f	typeref:typename:psa_status_t
psa_aead_set_nonce	library/psa_crypto.c	/^psa_status_t psa_aead_set_nonce(psa_aead_operation_t *operation,$/;"	f	typeref:typename:psa_status_t
psa_aead_setup	library/psa_crypto.c	/^static psa_status_t psa_aead_setup(psa_aead_operation_t *operation,$/;"	f	typeref:typename:psa_status_t	file:
psa_aead_setup	library/psa_crypto_aead.c	/^static psa_status_t psa_aead_setup($/;"	f	typeref:typename:psa_status_t	file:
psa_aead_unpadded_locate_tag	library/psa_crypto_aead.c	/^static psa_status_t psa_aead_unpadded_locate_tag(size_t tag_length,$/;"	f	typeref:typename:psa_status_t	file:
psa_aead_update	library/psa_crypto.c	/^psa_status_t psa_aead_update(psa_aead_operation_t *operation,$/;"	f	typeref:typename:psa_status_t
psa_aead_update_ad	library/psa_crypto.c	/^psa_status_t psa_aead_update_ad(psa_aead_operation_t *operation,$/;"	f	typeref:typename:psa_status_t
psa_aead_verify	library/psa_crypto.c	/^psa_status_t psa_aead_verify(psa_aead_operation_t *operation,$/;"	f	typeref:typename:psa_status_t
psa_alg_of_md	library/md.c	/^static psa_algorithm_t psa_alg_of_md(const mbedtls_md_info_t *info)$/;"	f	typeref:typename:psa_algorithm_t	file:
psa_allocate_buffer_to_slot	library/psa_crypto.c	/^psa_status_t psa_allocate_buffer_to_slot(psa_key_slot_t *slot,$/;"	f	typeref:typename:psa_status_t
psa_asymmetric_decrypt	library/psa_crypto.c	/^psa_status_t psa_asymmetric_decrypt(mbedtls_svc_key_id_t key,$/;"	f	typeref:typename:psa_status_t
psa_asymmetric_encrypt	library/psa_crypto.c	/^psa_status_t psa_asymmetric_encrypt(mbedtls_svc_key_id_t key,$/;"	f	typeref:typename:psa_status_t
psa_can_do_hash	library/psa_crypto.c	/^int psa_can_do_hash(psa_algorithm_t hash_alg)$/;"	f	typeref:typename:int
psa_check_rsa_key_byte_aligned	library/psa_crypto_rsa.c	/^static psa_status_t psa_check_rsa_key_byte_aligned($/;"	f	typeref:typename:psa_status_t	file:
psa_cipher_abort	library/psa_crypto.c	/^psa_status_t psa_cipher_abort(psa_cipher_operation_t *operation)$/;"	f	typeref:typename:psa_status_t
psa_cipher_decrypt	library/psa_crypto.c	/^psa_status_t psa_cipher_decrypt(mbedtls_svc_key_id_t key,$/;"	f	typeref:typename:psa_status_t
psa_cipher_decrypt_setup	library/psa_crypto.c	/^psa_status_t psa_cipher_decrypt_setup(psa_cipher_operation_t *operation,$/;"	f	typeref:typename:psa_status_t
psa_cipher_encrypt	library/psa_crypto.c	/^psa_status_t psa_cipher_encrypt(mbedtls_svc_key_id_t key,$/;"	f	typeref:typename:psa_status_t
psa_cipher_encrypt_setup	library/psa_crypto.c	/^psa_status_t psa_cipher_encrypt_setup(psa_cipher_operation_t *operation,$/;"	f	typeref:typename:psa_status_t
psa_cipher_finish	library/psa_crypto.c	/^psa_status_t psa_cipher_finish(psa_cipher_operation_t *operation,$/;"	f	typeref:typename:psa_status_t
psa_cipher_generate_iv	library/psa_crypto.c	/^psa_status_t psa_cipher_generate_iv(psa_cipher_operation_t *operation,$/;"	f	typeref:typename:psa_status_t
psa_cipher_operation_init	include/psa/crypto_struct.h	/^static inline struct psa_cipher_operation_s psa_cipher_operation_init(void)$/;"	f	typeref:struct:psa_cipher_operation_s
psa_cipher_set_iv	library/psa_crypto.c	/^psa_status_t psa_cipher_set_iv(psa_cipher_operation_t *operation,$/;"	f	typeref:typename:psa_status_t
psa_cipher_setup	library/psa_crypto.c	/^static psa_status_t psa_cipher_setup(psa_cipher_operation_t *operation,$/;"	f	typeref:typename:psa_status_t	file:
psa_cipher_setup	library/psa_crypto_cipher.c	/^static psa_status_t psa_cipher_setup($/;"	f	typeref:typename:psa_status_t	file:
psa_cipher_update	library/psa_crypto.c	/^psa_status_t psa_cipher_update(psa_cipher_operation_t *operation,$/;"	f	typeref:typename:psa_status_t
psa_cipher_update_ecb	library/psa_crypto_cipher.c	/^static psa_status_t psa_cipher_update_ecb($/;"	f	typeref:typename:psa_status_t	file:
psa_clear_key_slot_number	include/psa/crypto_extra.h	/^static inline void psa_clear_key_slot_number($/;"	f	typeref:typename:void
psa_close_key	library/psa_crypto_slot_management.c	/^psa_status_t psa_close_key(psa_key_handle_t handle)$/;"	f	typeref:typename:psa_status_t
psa_copy_key	library/psa_crypto.c	/^psa_status_t psa_copy_key(mbedtls_svc_key_id_t source_key,$/;"	f	typeref:typename:psa_status_t
psa_copy_key_material_into_slot	library/psa_crypto.c	/^psa_status_t psa_copy_key_material_into_slot(psa_key_slot_t *slot,$/;"	f	typeref:typename:psa_status_t
psa_crypto_buffer_offset	library/psa_crypto_core_common.h	/^static inline unsigned char *psa_crypto_buffer_offset($/;"	f	typeref:typename:unsigned char *
psa_crypto_buffer_offset_const	library/psa_crypto_core_common.h	/^static inline const unsigned char *psa_crypto_buffer_offset_const($/;"	f	typeref:typename:const unsigned char *
psa_crypto_driver_pake_get_cipher_suite	library/psa_crypto.c	/^psa_status_t psa_crypto_driver_pake_get_cipher_suite($/;"	f	typeref:typename:psa_status_t
psa_crypto_driver_pake_get_password	library/psa_crypto.c	/^psa_status_t psa_crypto_driver_pake_get_password($/;"	f	typeref:typename:psa_status_t
psa_crypto_driver_pake_get_password_len	library/psa_crypto.c	/^psa_status_t psa_crypto_driver_pake_get_password_len($/;"	f	typeref:typename:psa_status_t
psa_crypto_driver_pake_get_peer	library/psa_crypto.c	/^psa_status_t psa_crypto_driver_pake_get_peer($/;"	f	typeref:typename:psa_status_t
psa_crypto_driver_pake_get_peer_len	library/psa_crypto.c	/^psa_status_t psa_crypto_driver_pake_get_peer_len($/;"	f	typeref:typename:psa_status_t
psa_crypto_driver_pake_get_user	library/psa_crypto.c	/^psa_status_t psa_crypto_driver_pake_get_user($/;"	f	typeref:typename:psa_status_t
psa_crypto_driver_pake_get_user_len	library/psa_crypto.c	/^psa_status_t psa_crypto_driver_pake_get_user_len($/;"	f	typeref:typename:psa_status_t
psa_crypto_init	library/psa_crypto.c	/^psa_status_t psa_crypto_init(void)$/;"	f	typeref:typename:psa_status_t
psa_crypto_load_transaction	library/psa_crypto_storage.c	/^psa_status_t psa_crypto_load_transaction(void)$/;"	f	typeref:typename:psa_status_t
psa_crypto_prepare_transaction	library/psa_crypto_storage.h	/^static inline void psa_crypto_prepare_transaction($/;"	f	typeref:typename:void
psa_crypto_recover_transaction	library/psa_crypto.c	/^static psa_status_t psa_crypto_recover_transaction($/;"	f	typeref:typename:psa_status_t	file:
psa_crypto_save_transaction	library/psa_crypto_storage.c	/^psa_status_t psa_crypto_save_transaction(void)$/;"	f	typeref:typename:psa_status_t
psa_crypto_stop_transaction	library/psa_crypto_storage.c	/^psa_status_t psa_crypto_stop_transaction(void)$/;"	f	typeref:typename:psa_status_t
psa_crypto_storage_get_data_length	library/psa_crypto_storage.c	/^static psa_status_t psa_crypto_storage_get_data_length($/;"	f	typeref:typename:psa_status_t	file:
psa_crypto_storage_load	library/psa_crypto_storage.c	/^static psa_status_t psa_crypto_storage_load($/;"	f	typeref:typename:psa_status_t	file:
psa_crypto_storage_store	library/psa_crypto_storage.c	/^static psa_status_t psa_crypto_storage_store(const mbedtls_svc_key_id_t key,$/;"	f	typeref:typename:psa_status_t	file:
psa_des_set_key_parity	library/psa_crypto.c	/^static void psa_des_set_key_parity(uint8_t *data, size_t data_size)$/;"	f	typeref:typename:void	file:
psa_destroy_key	library/psa_crypto.c	/^psa_status_t psa_destroy_key(mbedtls_svc_key_id_t key)$/;"	f	typeref:typename:psa_status_t
psa_destroy_persistent_key	library/psa_crypto_storage.c	/^psa_status_t psa_destroy_persistent_key(const mbedtls_svc_key_id_t key)$/;"	f	typeref:typename:psa_status_t
psa_destroy_se_key	library/psa_crypto_se.c	/^psa_status_t psa_destroy_se_key(psa_se_drv_table_entry_t *driver,$/;"	f	typeref:typename:psa_status_t
psa_destroy_se_persistent_data	library/psa_crypto_se.c	/^psa_status_t psa_destroy_se_persistent_data(psa_key_location_t location)$/;"	f	typeref:typename:psa_status_t
psa_export_key	library/psa_crypto.c	/^psa_status_t psa_export_key(mbedtls_svc_key_id_t key,$/;"	f	typeref:typename:psa_status_t
psa_export_key_buffer_internal	library/psa_crypto.c	/^static psa_status_t psa_export_key_buffer_internal(const uint8_t *key_buffer,$/;"	f	typeref:typename:psa_status_t	file:
psa_export_key_internal	library/psa_crypto.c	/^psa_status_t psa_export_key_internal($/;"	f	typeref:typename:psa_status_t
psa_export_public_key	library/psa_crypto.c	/^psa_status_t psa_export_public_key(mbedtls_svc_key_id_t key,$/;"	f	typeref:typename:psa_status_t
psa_export_public_key_internal	library/psa_crypto.c	/^psa_status_t psa_export_public_key_internal($/;"	f	typeref:typename:psa_status_t
psa_extend_key_usage_flags	include/psa/crypto_struct.h	/^static inline void psa_extend_key_usage_flags(psa_key_usage_t *usage_flags)$/;"	f	typeref:typename:void
psa_fail_key_creation	library/psa_crypto.c	/^static void psa_fail_key_creation(psa_key_slot_t *slot,$/;"	f	typeref:typename:void	file:
psa_find_se_slot_for_key	library/psa_crypto_se.c	/^psa_status_t psa_find_se_slot_for_key($/;"	f	typeref:typename:psa_status_t
psa_finish_key_creation	library/psa_crypto.c	/^static psa_status_t psa_finish_key_creation($/;"	f	typeref:typename:psa_status_t	file:
psa_format_key_data_for_storage	library/psa_crypto_storage.c	/^void psa_format_key_data_for_storage(const uint8_t *data,$/;"	f	typeref:typename:void
psa_free_persistent_key_data	library/psa_crypto_storage.c	/^void psa_free_persistent_key_data(uint8_t *key_data, size_t key_data_length)$/;"	f	typeref:typename:void
psa_generate_derived_ecc_key_montgomery_helper	library/psa_crypto.c	/^static psa_status_t psa_generate_derived_ecc_key_montgomery_helper($/;"	f	typeref:typename:psa_status_t	file:
psa_generate_derived_ecc_key_weierstrass_helper	library/psa_crypto.c	/^static psa_status_t psa_generate_derived_ecc_key_weierstrass_helper($/;"	f	typeref:typename:psa_status_t	file:
psa_generate_derived_key_internal	library/psa_crypto.c	/^static psa_status_t psa_generate_derived_key_internal($/;"	f	typeref:typename:psa_status_t	file:
psa_generate_key	library/psa_crypto.c	/^psa_status_t psa_generate_key(const psa_key_attributes_t *attributes,$/;"	f	typeref:typename:psa_status_t
psa_generate_key_internal	library/psa_crypto.c	/^psa_status_t psa_generate_key_internal($/;"	f	typeref:typename:psa_status_t
psa_generate_random	library/psa_crypto.c	/^psa_status_t psa_generate_random(uint8_t *output,$/;"	f	typeref:typename:psa_status_t
psa_generic_status_to_mbedtls	library/psa_util.c	/^int psa_generic_status_to_mbedtls(psa_status_t status)$/;"	f	typeref:typename:int
psa_get_and_lock_key_slot	library/psa_crypto_slot_management.c	/^psa_status_t psa_get_and_lock_key_slot(mbedtls_svc_key_id_t key,$/;"	f	typeref:typename:psa_status_t
psa_get_and_lock_key_slot_in_memory	library/psa_crypto_slot_management.c	/^static psa_status_t psa_get_and_lock_key_slot_in_memory($/;"	f	typeref:typename:psa_status_t	file:
psa_get_and_lock_key_slot_with_policy	library/psa_crypto.c	/^static psa_status_t psa_get_and_lock_key_slot_with_policy($/;"	f	typeref:typename:psa_status_t	file:
psa_get_and_lock_transparent_key_slot_with_policy	library/psa_crypto.c	/^static psa_status_t psa_get_and_lock_transparent_key_slot_with_policy($/;"	f	typeref:typename:psa_status_t	file:
psa_get_empty_key_slot	library/psa_crypto_slot_management.c	/^psa_status_t psa_get_empty_key_slot(psa_key_id_t *volatile_key_id,$/;"	f	typeref:typename:psa_status_t
psa_get_key_algorithm	include/psa/crypto_struct.h	/^static inline psa_algorithm_t psa_get_key_algorithm($/;"	f	typeref:typename:psa_algorithm_t
psa_get_key_attributes	library/psa_crypto.c	/^psa_status_t psa_get_key_attributes(mbedtls_svc_key_id_t key,$/;"	f	typeref:typename:psa_status_t
psa_get_key_bits	include/psa/crypto_struct.h	/^static inline size_t psa_get_key_bits($/;"	f	typeref:typename:size_t
psa_get_key_domain_parameters	library/psa_crypto_client.c	/^psa_status_t psa_get_key_domain_parameters($/;"	f	typeref:typename:psa_status_t
psa_get_key_enrollment_algorithm	include/psa/crypto_extra.h	/^static inline psa_algorithm_t psa_get_key_enrollment_algorithm($/;"	f	typeref:typename:psa_algorithm_t
psa_get_key_id	include/psa/crypto_struct.h	/^static inline mbedtls_svc_key_id_t psa_get_key_id($/;"	f	typeref:typename:mbedtls_svc_key_id_t
psa_get_key_lifetime	include/psa/crypto_struct.h	/^static inline psa_key_lifetime_t psa_get_key_lifetime($/;"	f	typeref:typename:psa_key_lifetime_t
psa_get_key_slot_number	library/psa_crypto.c	/^psa_status_t psa_get_key_slot_number($/;"	f	typeref:typename:psa_status_t
psa_get_key_type	include/psa/crypto_struct.h	/^static inline psa_key_type_t psa_get_key_type($/;"	f	typeref:typename:psa_key_type_t
psa_get_key_usage_flags	include/psa/crypto_struct.h	/^static inline psa_key_usage_t psa_get_key_usage_flags($/;"	f	typeref:typename:psa_key_usage_t
psa_get_rsa_public_exponent	library/psa_crypto.c	/^static psa_status_t psa_get_rsa_public_exponent($/;"	f	typeref:typename:psa_status_t	file:
psa_get_se_driver	library/psa_crypto_se.c	/^int psa_get_se_driver(psa_key_lifetime_t lifetime,$/;"	f	typeref:typename:int
psa_get_se_driver_context	library/psa_crypto_se.c	/^psa_drv_se_context_t *psa_get_se_driver_context($/;"	f	typeref:typename:psa_drv_se_context_t *
psa_get_se_driver_entry	library/psa_crypto_se.c	/^psa_se_drv_table_entry_t *psa_get_se_driver_entry($/;"	f	typeref:typename:psa_se_drv_table_entry_t *
psa_get_se_driver_its_file_uid	library/psa_crypto_se.c	/^static psa_status_t psa_get_se_driver_its_file_uid($/;"	f	typeref:typename:psa_status_t	file:
psa_get_se_driver_methods	library/psa_crypto_se.c	/^const psa_drv_se_t *psa_get_se_driver_methods($/;"	f	typeref:typename:const psa_drv_se_t *
psa_hash_abort	library/psa_crypto.c	/^psa_status_t psa_hash_abort(psa_hash_operation_t *operation)$/;"	f	typeref:typename:psa_status_t
psa_hash_clone	library/psa_crypto.c	/^psa_status_t psa_hash_clone(const psa_hash_operation_t *source_operation,$/;"	f	typeref:typename:psa_status_t
psa_hash_compare	library/psa_crypto.c	/^psa_status_t psa_hash_compare(psa_algorithm_t alg,$/;"	f	typeref:typename:psa_status_t
psa_hash_compute	library/psa_crypto.c	/^psa_status_t psa_hash_compute(psa_algorithm_t alg,$/;"	f	typeref:typename:psa_status_t
psa_hash_finish	library/psa_crypto.c	/^psa_status_t psa_hash_finish(psa_hash_operation_t *operation,$/;"	f	typeref:typename:psa_status_t
psa_hash_operation_init	include/psa/crypto_struct.h	/^static inline struct psa_hash_operation_s psa_hash_operation_init(void)$/;"	f	typeref:struct:psa_hash_operation_s
psa_hash_setup	library/psa_crypto.c	/^psa_status_t psa_hash_setup(psa_hash_operation_t *operation,$/;"	f	typeref:typename:psa_status_t
psa_hash_try_support	library/psa_crypto.c	/^static psa_status_t psa_hash_try_support(psa_algorithm_t alg)$/;"	f	typeref:typename:psa_status_t	file:
psa_hash_update	library/psa_crypto.c	/^psa_status_t psa_hash_update(psa_hash_operation_t *operation,$/;"	f	typeref:typename:psa_status_t
psa_hash_verify	library/psa_crypto.c	/^psa_status_t psa_hash_verify(psa_hash_operation_t *operation,$/;"	f	typeref:typename:psa_status_t
psa_hkdf_input	library/psa_crypto.c	/^static psa_status_t psa_hkdf_input(psa_hkdf_key_derivation_t *hkdf,$/;"	f	typeref:typename:psa_status_t	file:
psa_hmac_abort_internal	library/psa_crypto_mac.c	/^static psa_status_t psa_hmac_abort_internal($/;"	f	typeref:typename:psa_status_t	file:
psa_hmac_finish_internal	library/psa_crypto_mac.c	/^static psa_status_t psa_hmac_finish_internal($/;"	f	typeref:typename:psa_status_t	file:
psa_hmac_setup_internal	library/psa_crypto_mac.c	/^static psa_status_t psa_hmac_setup_internal($/;"	f	typeref:typename:psa_status_t	file:
psa_hmac_update_internal	library/psa_crypto_mac.c	/^static psa_status_t psa_hmac_update_internal($/;"	f	typeref:typename:psa_status_t	file:
psa_import_key	library/psa_crypto.c	/^psa_status_t psa_import_key(const psa_key_attributes_t *attributes,$/;"	f	typeref:typename:psa_status_t
psa_import_key_into_slot	library/psa_crypto.c	/^psa_status_t psa_import_key_into_slot($/;"	f	typeref:typename:psa_status_t
psa_init_all_se_drivers	library/psa_crypto_se.c	/^psa_status_t psa_init_all_se_drivers(void)$/;"	f	typeref:typename:psa_status_t
psa_initialize_key_slots	library/psa_crypto_slot_management.c	/^psa_status_t psa_initialize_key_slots(void)$/;"	f	typeref:typename:psa_status_t
psa_interruptible_get_max_ops	library/psa_crypto.c	/^uint32_t psa_interruptible_get_max_ops(void)$/;"	f	typeref:typename:uint32_t
psa_interruptible_set_max_ops	library/psa_crypto.c	/^void psa_interruptible_set_max_ops(uint32_t max_ops)$/;"	f	typeref:typename:void
psa_is_dh_key_size_valid	library/psa_crypto.c	/^static int psa_is_dh_key_size_valid(size_t bits)$/;"	f	typeref:typename:int	file:
psa_is_key_present_in_storage	library/psa_crypto_storage.c	/^int psa_is_key_present_in_storage(const mbedtls_svc_key_id_t key)$/;"	f	typeref:typename:int
psa_is_key_slot_locked	library/psa_crypto_core.h	/^static inline int psa_is_key_slot_locked(const psa_key_slot_t *slot)$/;"	f	typeref:typename:int
psa_is_key_slot_occupied	library/psa_crypto_core.h	/^static inline int psa_is_key_slot_occupied(const psa_key_slot_t *slot)$/;"	f	typeref:typename:int
psa_is_valid_key_id	library/psa_crypto_slot_management.c	/^int psa_is_valid_key_id(mbedtls_svc_key_id_t key, int vendor_ok)$/;"	f	typeref:typename:int
psa_its_fill_filename	library/psa_its_file.c	/^static void psa_its_fill_filename(psa_storage_uid_t uid, char *filename)$/;"	f	typeref:typename:void	file:
psa_its_get	library/psa_its_file.c	/^psa_status_t psa_its_get(psa_storage_uid_t uid,$/;"	f	typeref:typename:psa_status_t
psa_its_get_info	library/psa_its_file.c	/^psa_status_t psa_its_get_info(psa_storage_uid_t uid,$/;"	f	typeref:typename:psa_status_t
psa_its_identifier_of_slot	library/psa_crypto_storage.c	/^static psa_storage_uid_t psa_its_identifier_of_slot(mbedtls_svc_key_id_t key)$/;"	f	typeref:typename:psa_storage_uid_t	file:
psa_its_read_file	library/psa_its_file.c	/^static psa_status_t psa_its_read_file(psa_storage_uid_t uid,$/;"	f	typeref:typename:psa_status_t	file:
psa_its_remove	library/psa_its_file.c	/^psa_status_t psa_its_remove(psa_storage_uid_t uid)$/;"	f	typeref:typename:psa_status_t
psa_its_set	library/psa_its_file.c	/^psa_status_t psa_its_set(psa_storage_uid_t uid,$/;"	f	typeref:typename:psa_status_t
psa_jpake_epilogue	library/psa_crypto.c	/^static psa_status_t psa_jpake_epilogue($/;"	f	typeref:typename:psa_status_t	file:
psa_jpake_prologue	library/psa_crypto.c	/^static psa_status_t psa_jpake_prologue($/;"	f	typeref:typename:psa_status_t	file:
psa_key_agreement_internal	library/psa_crypto.c	/^static psa_status_t psa_key_agreement_internal(psa_key_derivation_operation_t *operation,$/;"	f	typeref:typename:psa_status_t	file:
psa_key_agreement_raw_builtin	library/psa_crypto.c	/^psa_status_t psa_key_agreement_raw_builtin(const psa_key_attributes_t *attributes,$/;"	f	typeref:typename:psa_status_t
psa_key_agreement_raw_internal	library/psa_crypto.c	/^static psa_status_t psa_key_agreement_raw_internal(psa_algorithm_t alg,$/;"	f	typeref:typename:psa_status_t	file:
psa_key_agreement_try_support	library/psa_crypto.c	/^static psa_status_t psa_key_agreement_try_support(psa_algorithm_t alg)$/;"	f	typeref:typename:psa_status_t	file:
psa_key_algorithm_permits	library/psa_crypto.c	/^static int psa_key_algorithm_permits(psa_key_type_t key_type,$/;"	f	typeref:typename:int	file:
psa_key_attributes_init	include/psa/crypto_struct.h	/^static inline struct psa_key_attributes_s psa_key_attributes_init(void)$/;"	f	typeref:struct:psa_key_attributes_s
psa_key_derivation_abort	library/psa_crypto.c	/^psa_status_t psa_key_derivation_abort(psa_key_derivation_operation_t *operation)$/;"	f	typeref:typename:psa_status_t
psa_key_derivation_allows_free_form_secret_input	library/psa_crypto.c	/^static int psa_key_derivation_allows_free_form_secret_input($/;"	f	typeref:typename:int	file:
psa_key_derivation_check_input_type	library/psa_crypto.c	/^static int psa_key_derivation_check_input_type($/;"	f	typeref:typename:int	file:
psa_key_derivation_get_capacity	library/psa_crypto.c	/^psa_status_t psa_key_derivation_get_capacity(const psa_key_derivation_operation_t *operation,$/;"	f	typeref:typename:psa_status_t
psa_key_derivation_get_kdf_alg	library/psa_crypto.c	/^static psa_algorithm_t psa_key_derivation_get_kdf_alg($/;"	f	typeref:typename:psa_algorithm_t	file:
psa_key_derivation_hkdf_read	library/psa_crypto.c	/^static psa_status_t psa_key_derivation_hkdf_read(psa_hkdf_key_derivation_t *hkdf,$/;"	f	typeref:typename:psa_status_t	file:
psa_key_derivation_input_bytes	library/psa_crypto.c	/^psa_status_t psa_key_derivation_input_bytes($/;"	f	typeref:typename:psa_status_t
psa_key_derivation_input_integer	library/psa_crypto.c	/^psa_status_t psa_key_derivation_input_integer($/;"	f	typeref:typename:psa_status_t
psa_key_derivation_input_integer_internal	library/psa_crypto.c	/^static psa_status_t psa_key_derivation_input_integer_internal($/;"	f	typeref:typename:psa_status_t	file:
psa_key_derivation_input_internal	library/psa_crypto.c	/^static psa_status_t psa_key_derivation_input_internal($/;"	f	typeref:typename:psa_status_t	file:
psa_key_derivation_input_key	library/psa_crypto.c	/^psa_status_t psa_key_derivation_input_key($/;"	f	typeref:typename:psa_status_t
psa_key_derivation_key_agreement	library/psa_crypto.c	/^psa_status_t psa_key_derivation_key_agreement(psa_key_derivation_operation_t *operation,$/;"	f	typeref:typename:psa_status_t
psa_key_derivation_operation_init	include/psa/crypto_struct.h	/^static inline struct psa_key_derivation_s psa_key_derivation_operation_init($/;"	f	typeref:struct:psa_key_derivation_s
psa_key_derivation_output_bytes	library/psa_crypto.c	/^psa_status_t psa_key_derivation_output_bytes($/;"	f	typeref:typename:psa_status_t
psa_key_derivation_output_key	library/psa_crypto.c	/^psa_status_t psa_key_derivation_output_key(const psa_key_attributes_t *attributes,$/;"	f	typeref:typename:psa_status_t
psa_key_derivation_pbkdf2_generate_block	library/psa_crypto.c	/^static psa_status_t psa_key_derivation_pbkdf2_generate_block($/;"	f	typeref:typename:psa_status_t	file:
psa_key_derivation_pbkdf2_read	library/psa_crypto.c	/^static psa_status_t psa_key_derivation_pbkdf2_read($/;"	f	typeref:typename:psa_status_t	file:
psa_key_derivation_set_capacity	library/psa_crypto.c	/^psa_status_t psa_key_derivation_set_capacity(psa_key_derivation_operation_t *operation,$/;"	f	typeref:typename:psa_status_t
psa_key_derivation_setup	library/psa_crypto.c	/^psa_status_t psa_key_derivation_setup(psa_key_derivation_operation_t *operation,$/;"	f	typeref:typename:psa_status_t
psa_key_derivation_setup_kdf	library/psa_crypto.c	/^static psa_status_t psa_key_derivation_setup_kdf($/;"	f	typeref:typename:psa_status_t	file:
psa_key_derivation_start_hmac	library/psa_crypto.c	/^static psa_status_t psa_key_derivation_start_hmac($/;"	f	typeref:typename:psa_status_t	file:
psa_key_derivation_tls12_ecjpake_to_pms_read	library/psa_crypto.c	/^static psa_status_t psa_key_derivation_tls12_ecjpake_to_pms_read($/;"	f	typeref:typename:psa_status_t	file:
psa_key_derivation_tls12_prf_generate_next_block	library/psa_crypto.c	/^static psa_status_t psa_key_derivation_tls12_prf_generate_next_block($/;"	f	typeref:typename:psa_status_t	file:
psa_key_derivation_tls12_prf_read	library/psa_crypto.c	/^static psa_status_t psa_key_derivation_tls12_prf_read($/;"	f	typeref:typename:psa_status_t	file:
psa_key_handle_is_null	include/psa/crypto_compat.h	/^static inline int psa_key_handle_is_null(psa_key_handle_t handle)$/;"	f	typeref:typename:int
psa_key_id_is_builtin	include/psa/crypto_extra.h	/^static inline int psa_key_id_is_builtin(psa_key_id_t key_id)$/;"	f	typeref:typename:int
psa_key_id_is_volatile	library/psa_crypto_slot_management.h	/^static inline int psa_key_id_is_volatile(psa_key_id_t key_id)$/;"	f	typeref:typename:int
psa_key_lifetime_is_external	library/psa_crypto_slot_management.h	/^static inline int psa_key_lifetime_is_external(psa_key_lifetime_t lifetime)$/;"	f	typeref:typename:int
psa_key_policy_algorithm_intersection	library/psa_crypto.c	/^static psa_algorithm_t psa_key_policy_algorithm_intersection($/;"	f	typeref:typename:psa_algorithm_t	file:
psa_key_policy_init	include/psa/crypto_struct.h	/^static inline struct psa_key_policy_s psa_key_policy_init(void)$/;"	f	typeref:struct:psa_key_policy_s
psa_key_policy_permits	library/psa_crypto.c	/^static psa_status_t psa_key_policy_permits(const psa_key_policy_t *policy,$/;"	f	typeref:typename:psa_status_t	file:
psa_key_slot_clear_bits	library/psa_crypto_core.h	/^static inline void psa_key_slot_clear_bits(psa_key_slot_t *slot,$/;"	f	typeref:typename:void
psa_key_slot_get_flags	library/psa_crypto_core.h	/^static inline uint16_t psa_key_slot_get_flags(const psa_key_slot_t *slot,$/;"	f	typeref:typename:uint16_t
psa_key_slot_get_slot_number	library/psa_crypto_core.h	/^static inline psa_key_slot_number_t psa_key_slot_get_slot_number($/;"	f	typeref:typename:psa_key_slot_number_t
psa_key_slot_set_bits_in_flags	library/psa_crypto_core.h	/^static inline void psa_key_slot_set_bits_in_flags(psa_key_slot_t *slot,$/;"	f	typeref:typename:void
psa_key_slot_set_flags	library/psa_crypto_core.h	/^static inline void psa_key_slot_set_flags(psa_key_slot_t *slot,$/;"	f	typeref:typename:void
psa_load_builtin_key_into_slot	library/psa_crypto_slot_management.c	/^static psa_status_t psa_load_builtin_key_into_slot(psa_key_slot_t *slot)$/;"	f	typeref:typename:psa_status_t	file:
psa_load_persistent_key	library/psa_crypto_storage.c	/^psa_status_t psa_load_persistent_key(psa_core_key_attributes_t *attr,$/;"	f	typeref:typename:psa_status_t
psa_load_persistent_key_into_slot	library/psa_crypto_slot_management.c	/^static psa_status_t psa_load_persistent_key_into_slot(psa_key_slot_t *slot)$/;"	f	typeref:typename:psa_status_t	file:
psa_load_se_persistent_data	library/psa_crypto_se.c	/^psa_status_t psa_load_se_persistent_data($/;"	f	typeref:typename:psa_status_t
psa_lock_key_slot	library/psa_crypto_slot_management.h	/^static inline psa_status_t psa_lock_key_slot(psa_key_slot_t *slot)$/;"	f	typeref:typename:psa_status_t
psa_low_level_dependencies	scripts/mbedtls_dev/crypto_data_tests.py	/^def psa_low_level_dependencies(*expressions: str) -> List[str]:$/;"	f	typeref:typename:List[str]
psa_mac_abort	library/psa_crypto.c	/^psa_status_t psa_mac_abort(psa_mac_operation_t *operation)$/;"	f	typeref:typename:psa_status_t
psa_mac_compute	library/psa_crypto.c	/^psa_status_t psa_mac_compute(mbedtls_svc_key_id_t key,$/;"	f	typeref:typename:psa_status_t
psa_mac_compute_internal	library/psa_crypto.c	/^static psa_status_t psa_mac_compute_internal(mbedtls_svc_key_id_t key,$/;"	f	typeref:typename:psa_status_t	file:
psa_mac_finalize_alg_and_key_validation	library/psa_crypto.c	/^static psa_status_t psa_mac_finalize_alg_and_key_validation($/;"	f	typeref:typename:psa_status_t	file:
psa_mac_finish_internal	library/psa_crypto_mac.c	/^static psa_status_t psa_mac_finish_internal($/;"	f	typeref:typename:psa_status_t	file:
psa_mac_key_can_do	library/psa_crypto.c	/^MBEDTLS_STATIC_TESTABLE psa_status_t psa_mac_key_can_do($/;"	f	typeref:typename:MBEDTLS_STATIC_TESTABLE psa_status_t
psa_mac_operation_init	include/psa/crypto_struct.h	/^static inline struct psa_mac_operation_s psa_mac_operation_init(void)$/;"	f	typeref:struct:psa_mac_operation_s
psa_mac_setup	library/psa_crypto.c	/^static psa_status_t psa_mac_setup(psa_mac_operation_t *operation,$/;"	f	typeref:typename:psa_status_t	file:
psa_mac_setup	library/psa_crypto_mac.c	/^static psa_status_t psa_mac_setup(mbedtls_psa_mac_operation_t *operation,$/;"	f	typeref:typename:psa_status_t	file:
psa_mac_sign_finish	library/psa_crypto.c	/^psa_status_t psa_mac_sign_finish(psa_mac_operation_t *operation,$/;"	f	typeref:typename:psa_status_t
psa_mac_sign_setup	library/psa_crypto.c	/^psa_status_t psa_mac_sign_setup(psa_mac_operation_t *operation,$/;"	f	typeref:typename:psa_status_t
psa_mac_update	library/psa_crypto.c	/^psa_status_t psa_mac_update(psa_mac_operation_t *operation,$/;"	f	typeref:typename:psa_status_t
psa_mac_verify	library/psa_crypto.c	/^psa_status_t psa_mac_verify(mbedtls_svc_key_id_t key,$/;"	f	typeref:typename:psa_status_t
psa_mac_verify_finish	library/psa_crypto.c	/^psa_status_t psa_mac_verify_finish(psa_mac_operation_t *operation,$/;"	f	typeref:typename:psa_status_t
psa_mac_verify_setup	library/psa_crypto.c	/^psa_status_t psa_mac_verify_setup(psa_mac_operation_t *operation,$/;"	f	typeref:typename:psa_status_t
psa_open_key	library/psa_crypto_slot_management.c	/^psa_status_t psa_open_key(mbedtls_svc_key_id_t key, psa_key_handle_t *handle)$/;"	f	typeref:typename:psa_status_t
psa_pake_abort	library/psa_crypto.c	/^psa_status_t psa_pake_abort($/;"	f	typeref:typename:psa_status_t
psa_pake_cipher_suite_init	include/psa/crypto_extra.h	/^static inline struct psa_pake_cipher_suite_s psa_pake_cipher_suite_init(void)$/;"	f	typeref:struct:psa_pake_cipher_suite_s
psa_pake_complete_inputs	library/psa_crypto.c	/^static psa_status_t psa_pake_complete_inputs($/;"	f	typeref:typename:psa_status_t	file:
psa_pake_cs_get_algorithm	include/psa/crypto_extra.h	/^static inline psa_algorithm_t psa_pake_cs_get_algorithm($/;"	f	typeref:typename:psa_algorithm_t
psa_pake_cs_get_bits	include/psa/crypto_extra.h	/^static inline uint16_t psa_pake_cs_get_bits($/;"	f	typeref:typename:uint16_t
psa_pake_cs_get_family	include/psa/crypto_extra.h	/^static inline psa_pake_family_t psa_pake_cs_get_family($/;"	f	typeref:typename:psa_pake_family_t
psa_pake_cs_get_hash	include/psa/crypto_extra.h	/^static inline psa_algorithm_t psa_pake_cs_get_hash($/;"	f	typeref:typename:psa_algorithm_t
psa_pake_cs_get_primitive	include/psa/crypto_extra.h	/^static inline psa_pake_primitive_t psa_pake_cs_get_primitive($/;"	f	typeref:typename:psa_pake_primitive_t
psa_pake_cs_set_algorithm	include/psa/crypto_extra.h	/^static inline void psa_pake_cs_set_algorithm($/;"	f	typeref:typename:void
psa_pake_cs_set_hash	include/psa/crypto_extra.h	/^static inline void psa_pake_cs_set_hash(psa_pake_cipher_suite_t *cipher_suite,$/;"	f	typeref:typename:void
psa_pake_cs_set_primitive	include/psa/crypto_extra.h	/^static inline void psa_pake_cs_set_primitive($/;"	f	typeref:typename:void
psa_pake_ecjpake_setup	library/psa_crypto_pake.c	/^static psa_status_t psa_pake_ecjpake_setup(mbedtls_psa_pake_operation_t *operation)$/;"	f	typeref:typename:psa_status_t	file:
psa_pake_get_implicit_key	library/psa_crypto.c	/^psa_status_t psa_pake_get_implicit_key($/;"	f	typeref:typename:psa_status_t
psa_pake_input	library/psa_crypto.c	/^psa_status_t psa_pake_input($/;"	f	typeref:typename:psa_status_t
psa_pake_operation_init	include/psa/crypto_extra.h	/^static inline struct psa_pake_operation_s psa_pake_operation_init(void)$/;"	f	typeref:struct:psa_pake_operation_s
psa_pake_output	library/psa_crypto.c	/^psa_status_t psa_pake_output($/;"	f	typeref:typename:psa_status_t
psa_pake_set_password_key	library/psa_crypto.c	/^psa_status_t psa_pake_set_password_key($/;"	f	typeref:typename:psa_status_t
psa_pake_set_peer	library/psa_crypto.c	/^psa_status_t psa_pake_set_peer($/;"	f	typeref:typename:psa_status_t
psa_pake_set_role	library/psa_crypto.c	/^psa_status_t psa_pake_set_role($/;"	f	typeref:typename:psa_status_t
psa_pake_set_user	library/psa_crypto.c	/^psa_status_t psa_pake_set_user($/;"	f	typeref:typename:psa_status_t
psa_pake_setup	library/psa_crypto.c	/^psa_status_t psa_pake_setup($/;"	f	typeref:typename:psa_status_t
psa_parse_key_data_from_storage	library/psa_crypto_storage.c	/^psa_status_t psa_parse_key_data_from_storage(const uint8_t *storage_data,$/;"	f	typeref:typename:psa_status_t
psa_pbkdf2_cmac_set_password	library/psa_crypto.c	/^static psa_status_t psa_pbkdf2_cmac_set_password(const uint8_t *input,$/;"	f	typeref:typename:psa_status_t	file:
psa_pbkdf2_hmac_set_password	library/psa_crypto.c	/^static psa_status_t psa_pbkdf2_hmac_set_password(psa_algorithm_t hash_alg,$/;"	f	typeref:typename:psa_status_t	file:
psa_pbkdf2_input	library/psa_crypto.c	/^static psa_status_t psa_pbkdf2_input(psa_pbkdf2_key_derivation_t *pbkdf2,$/;"	f	typeref:typename:psa_status_t	file:
psa_pbkdf2_set_input_cost	library/psa_crypto.c	/^static psa_status_t psa_pbkdf2_set_input_cost($/;"	f	typeref:typename:psa_status_t	file:
psa_pbkdf2_set_password	library/psa_crypto.c	/^static psa_status_t psa_pbkdf2_set_password(psa_pbkdf2_key_derivation_t *pbkdf2,$/;"	f	typeref:typename:psa_status_t	file:
psa_pbkdf2_set_salt	library/psa_crypto.c	/^static psa_status_t psa_pbkdf2_set_salt(psa_pbkdf2_key_derivation_t *pbkdf2,$/;"	f	typeref:typename:psa_status_t	file:
psa_pk_status_to_mbedtls	library/psa_util.c	/^int psa_pk_status_to_mbedtls(psa_status_t status)$/;"	f	typeref:typename:int
psa_purge_key	library/psa_crypto_slot_management.c	/^psa_status_t psa_purge_key(mbedtls_svc_key_id_t key)$/;"	f	typeref:typename:psa_status_t
psa_raw_key_agreement	library/psa_crypto.c	/^psa_status_t psa_raw_key_agreement(psa_algorithm_t alg,$/;"	f	typeref:typename:psa_status_t
psa_register_se_driver	library/psa_crypto_se.c	/^psa_status_t psa_register_se_driver($/;"	f	typeref:typename:psa_status_t
psa_remove_key_data_from_memory	library/psa_crypto.c	/^psa_status_t psa_remove_key_data_from_memory(psa_key_slot_t *slot)$/;"	f	typeref:typename:psa_status_t
psa_reset_key_attributes	library/psa_crypto_client.c	/^void psa_reset_key_attributes(psa_key_attributes_t *attributes)$/;"	f	typeref:typename:void
psa_restrict_key_policy	library/psa_crypto.c	/^static psa_status_t psa_restrict_key_policy($/;"	f	typeref:typename:psa_status_t	file:
psa_rsa_decode_md_type	library/psa_crypto_rsa.c	/^static psa_status_t psa_rsa_decode_md_type(psa_algorithm_t alg,$/;"	f	typeref:typename:psa_status_t	file:
psa_rsa_oaep_set_padding_mode	library/psa_crypto_rsa.c	/^static int psa_rsa_oaep_set_padding_mode(psa_algorithm_t alg,$/;"	f	typeref:typename:int	file:
psa_rsa_read_exponent	library/psa_crypto_rsa.c	/^static psa_status_t psa_rsa_read_exponent(const uint8_t *domain_parameters,$/;"	f	typeref:typename:psa_status_t	file:
psa_save_persistent_key	library/psa_crypto_storage.c	/^psa_status_t psa_save_persistent_key(const psa_core_key_attributes_t *attr,$/;"	f	typeref:typename:psa_status_t
psa_save_se_persistent_data	library/psa_crypto_se.c	/^psa_status_t psa_save_se_persistent_data($/;"	f	typeref:typename:psa_status_t
psa_set_key_algorithm	include/psa/crypto_struct.h	/^static inline void psa_set_key_algorithm(psa_key_attributes_t *attributes,$/;"	f	typeref:typename:void
psa_set_key_bits	include/psa/crypto_struct.h	/^static inline void psa_set_key_bits(psa_key_attributes_t *attributes,$/;"	f	typeref:typename:void
psa_set_key_domain_parameters	library/psa_crypto_client.c	/^psa_status_t psa_set_key_domain_parameters(psa_key_attributes_t *attributes,$/;"	f	typeref:typename:psa_status_t
psa_set_key_enrollment_algorithm	include/psa/crypto_extra.h	/^static inline void psa_set_key_enrollment_algorithm($/;"	f	typeref:typename:void
psa_set_key_id	include/psa/crypto_struct.h	/^static inline void psa_set_key_id(psa_key_attributes_t *attributes,$/;"	f	typeref:typename:void
psa_set_key_lifetime	include/psa/crypto_struct.h	/^static inline void psa_set_key_lifetime(psa_key_attributes_t *attributes,$/;"	f	typeref:typename:void
psa_set_key_slot_number	include/psa/crypto_extra.h	/^static inline void psa_set_key_slot_number($/;"	f	typeref:typename:void
psa_set_key_type	include/psa/crypto_struct.h	/^static inline void psa_set_key_type(psa_key_attributes_t *attributes,$/;"	f	typeref:typename:void
psa_set_key_usage_flags	include/psa/crypto_struct.h	/^static inline void psa_set_key_usage_flags(psa_key_attributes_t *attributes,$/;"	f	typeref:typename:void
psa_setup_psk_key_slot	programs/ssl/ssl_server2.c	/^static psa_status_t psa_setup_psk_key_slot(mbedtls_svc_key_id_t *slot,$/;"	f	typeref:typename:psa_status_t	file:
psa_sign_hash	library/psa_crypto.c	/^psa_status_t psa_sign_hash(mbedtls_svc_key_id_t key,$/;"	f	typeref:typename:psa_status_t
psa_sign_hash_abort	library/psa_crypto.c	/^psa_status_t psa_sign_hash_abort($/;"	f	typeref:typename:psa_status_t
psa_sign_hash_abort_internal	library/psa_crypto.c	/^static psa_status_t psa_sign_hash_abort_internal($/;"	f	typeref:typename:psa_status_t	file:
psa_sign_hash_builtin	library/psa_crypto.c	/^psa_status_t psa_sign_hash_builtin($/;"	f	typeref:typename:psa_status_t
psa_sign_hash_complete	library/psa_crypto.c	/^psa_status_t psa_sign_hash_complete($/;"	f	typeref:typename:psa_status_t
psa_sign_hash_get_num_ops	library/psa_crypto.c	/^uint32_t psa_sign_hash_get_num_ops($/;"	f	typeref:typename:uint32_t
psa_sign_hash_interruptible_operation_init	include/psa/crypto_struct.h	/^psa_sign_hash_interruptible_operation_init(void)$/;"	f	typeref:struct:psa_sign_hash_interruptible_operation_s
psa_sign_hash_start	library/psa_crypto.c	/^psa_status_t psa_sign_hash_start($/;"	f	typeref:typename:psa_status_t
psa_sign_internal	library/psa_crypto.c	/^static psa_status_t psa_sign_internal(mbedtls_svc_key_id_t key,$/;"	f	typeref:typename:psa_status_t	file:
psa_sign_message	library/psa_crypto.c	/^psa_status_t psa_sign_message(mbedtls_svc_key_id_t key,$/;"	f	typeref:typename:psa_status_t
psa_sign_message_builtin	library/psa_crypto.c	/^psa_status_t psa_sign_message_builtin($/;"	f	typeref:typename:psa_status_t
psa_sign_verify_check_alg	library/psa_crypto.c	/^static psa_status_t psa_sign_verify_check_alg(int input_is_message,$/;"	f	typeref:typename:psa_status_t	file:
psa_snprint_dh_group	programs/psa/psa_constant_names.c	/^static int psa_snprint_dh_group(char *buffer, size_t buffer_size,$/;"	f	typeref:typename:int	file:
psa_snprint_ecc_curve	programs/psa/psa_constant_names.c	/^static int psa_snprint_ecc_curve(char *buffer, size_t buffer_size,$/;"	f	typeref:typename:int	file:
psa_snprint_status	programs/psa/psa_constant_names.c	/^static int psa_snprint_status(char *buffer, size_t buffer_size,$/;"	f	typeref:typename:int	file:
psa_ssl_status_to_mbedtls	library/ssl_misc.h	/^static inline MBEDTLS_DEPRECATED int psa_ssl_status_to_mbedtls(psa_status_t status)$/;"	f	typeref:typename:MBEDTLS_DEPRECATED int
psa_start_key_creation	library/psa_crypto.c	/^static psa_status_t psa_start_key_creation($/;"	f	typeref:typename:psa_status_t	file:
psa_status_to_mbedtls	library/psa_util.c	/^int psa_status_to_mbedtls(psa_status_t status,$/;"	f	typeref:typename:int
psa_tls12_ecjpake_to_pms_input	library/psa_crypto.c	/^static psa_status_t psa_tls12_ecjpake_to_pms_input($/;"	f	typeref:typename:psa_status_t	file:
psa_tls12_prf_input	library/psa_crypto.c	/^static psa_status_t psa_tls12_prf_input(psa_tls12_prf_key_derivation_t *prf,$/;"	f	typeref:typename:psa_status_t	file:
psa_tls12_prf_psk_to_ms_input	library/psa_crypto.c	/^static psa_status_t psa_tls12_prf_psk_to_ms_input($/;"	f	typeref:typename:psa_status_t	file:
psa_tls12_prf_psk_to_ms_set_key	library/psa_crypto.c	/^static psa_status_t psa_tls12_prf_psk_to_ms_set_key($/;"	f	typeref:typename:psa_status_t	file:
psa_tls12_prf_psk_to_ms_set_other_key	library/psa_crypto.c	/^static psa_status_t psa_tls12_prf_psk_to_ms_set_other_key($/;"	f	typeref:typename:psa_status_t	file:
psa_tls12_prf_set_key	library/psa_crypto.c	/^static psa_status_t psa_tls12_prf_set_key(psa_tls12_prf_key_derivation_t *prf,$/;"	f	typeref:typename:psa_status_t	file:
psa_tls12_prf_set_label	library/psa_crypto.c	/^static psa_status_t psa_tls12_prf_set_label(psa_tls12_prf_key_derivation_t *prf,$/;"	f	typeref:typename:psa_status_t	file:
psa_tls12_prf_set_seed	library/psa_crypto.c	/^static psa_status_t psa_tls12_prf_set_seed(psa_tls12_prf_key_derivation_t *prf,$/;"	f	typeref:typename:psa_status_t	file:
psa_unlock_key_slot	library/psa_crypto_slot_management.c	/^psa_status_t psa_unlock_key_slot(psa_key_slot_t *slot)$/;"	f	typeref:typename:psa_status_t
psa_unregister_all_se_drivers	library/psa_crypto_se.c	/^void psa_unregister_all_se_drivers(void)$/;"	f	typeref:typename:void
psa_validate_key_attributes	library/psa_crypto.c	/^static psa_status_t psa_validate_key_attributes($/;"	f	typeref:typename:psa_status_t	file:
psa_validate_key_location	library/psa_crypto_slot_management.c	/^psa_status_t psa_validate_key_location(psa_key_lifetime_t lifetime,$/;"	f	typeref:typename:psa_status_t
psa_validate_key_persistence	library/psa_crypto_slot_management.c	/^psa_status_t psa_validate_key_persistence(psa_key_lifetime_t lifetime)$/;"	f	typeref:typename:psa_status_t
psa_validate_key_policy	library/psa_crypto.c	/^static psa_status_t psa_validate_key_policy(const psa_key_policy_t *policy)$/;"	f	file:
psa_validate_key_type_and_size_for_key_generation	library/psa_crypto.c	/^static psa_status_t psa_validate_key_type_and_size_for_key_generation($/;"	f	typeref:typename:psa_status_t	file:
psa_validate_optional_attributes	library/psa_crypto.c	/^static psa_status_t psa_validate_optional_attributes($/;"	f	typeref:typename:psa_status_t	file:
psa_validate_tag_length	library/psa_crypto.c	/^static psa_status_t psa_validate_tag_length(psa_algorithm_t alg)$/;"	f	typeref:typename:psa_status_t	file:
psa_validate_unstructured_key_bit_size	library/psa_crypto.c	/^psa_status_t psa_validate_unstructured_key_bit_size(psa_key_type_t type,$/;"	f	typeref:typename:psa_status_t
psa_verify_hash	library/psa_crypto.c	/^psa_status_t psa_verify_hash(mbedtls_svc_key_id_t key,$/;"	f	typeref:typename:psa_status_t
psa_verify_hash_abort	library/psa_crypto.c	/^psa_status_t psa_verify_hash_abort($/;"	f	typeref:typename:psa_status_t
psa_verify_hash_abort_internal	library/psa_crypto.c	/^static psa_status_t psa_verify_hash_abort_internal($/;"	f	typeref:typename:psa_status_t	file:
psa_verify_hash_builtin	library/psa_crypto.c	/^psa_status_t psa_verify_hash_builtin($/;"	f	typeref:typename:psa_status_t
psa_verify_hash_complete	library/psa_crypto.c	/^psa_status_t psa_verify_hash_complete($/;"	f	typeref:typename:psa_status_t
psa_verify_hash_get_num_ops	library/psa_crypto.c	/^uint32_t psa_verify_hash_get_num_ops($/;"	f	typeref:typename:uint32_t
psa_verify_hash_interruptible_operation_init	include/psa/crypto_struct.h	/^psa_verify_hash_interruptible_operation_init(void)$/;"	f	typeref:struct:psa_verify_hash_interruptible_operation_s
psa_verify_hash_start	library/psa_crypto.c	/^psa_status_t psa_verify_hash_start($/;"	f	typeref:typename:psa_status_t
psa_verify_internal	library/psa_crypto.c	/^static psa_status_t psa_verify_internal(mbedtls_svc_key_id_t key,$/;"	f	typeref:typename:psa_status_t	file:
psa_verify_message	library/psa_crypto.c	/^psa_status_t psa_verify_message(mbedtls_svc_key_id_t key,$/;"	f	typeref:typename:psa_status_t
psa_verify_message_builtin	library/psa_crypto.c	/^psa_status_t psa_verify_message_builtin($/;"	f	typeref:typename:psa_status_t
psa_want_symbol	scripts/mbedtls_dev/psa_information.py	/^def psa_want_symbol(name: str) -> str:$/;"	f	typeref:typename:str
psa_wipe_all_key_slots	library/psa_crypto_slot_management.c	/^void psa_wipe_all_key_slots(void)$/;"	f	typeref:typename:void
psa_wipe_key_slot	library/psa_crypto.c	/^psa_status_t psa_wipe_key_slot(psa_key_slot_t *slot)$/;"	f	typeref:typename:psa_status_t
psa_wipe_tag_output_buffer	library/psa_crypto.c	/^static void psa_wipe_tag_output_buffer(uint8_t *output_buffer, psa_status_t status,$/;"	f	typeref:typename:void	file:
psk_callback	programs/ssl/ssl_server2.c	/^int psk_callback(void *p_info, mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
psk_dummy_callback	tests/src/test_helpers/ssl_helpers.c	/^static int psk_dummy_callback(void *p_info, mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int	file:
psk_free	programs/ssl/ssl_server2.c	/^int psk_free(psk_entry *head)$/;"	f	typeref:typename:int
psk_parse	programs/ssl/ssl_server2.c	/^psk_entry *psk_parse(char *psk_string)$/;"	f	typeref:typename:psk_entry *
public_key_from_hashed_digit_array	library/lmots.c	/^static int public_key_from_hashed_digit_array(const mbedtls_lmots_parameters_t *params,$/;"	f	typeref:typename:int	file:
put_to_column	tests/scripts/generate_test_cert_macros.py	/^    def put_to_column(value, position=0):$/;"	f	function:generate	file:
put_unaligned_uint32	programs/ssl/ssl_server2.c	/^static inline void put_unaligned_uint32(void *p, uint32_t x)$/;"	f	typeref:typename:void	file:
pylint_doesn_t_notice_that_certain_types_are_used_in_annotations	scripts/min_requirements.py	/^def pylint_doesn_t_notice_that_certain_types_are_used_in_annotations($/;"	f	typeref:typename:None
quote_str	scripts/mbedtls_dev/bignum_common.py	/^def quote_str(val: str) -> str:$/;"	f	typeref:typename:str
read_after_free	programs/test/metatest.c	/^void read_after_free(const char *name)$/;"	f	typeref:typename:void
read_as_c_array	tests/scripts/generate_test_cert_macros.py	/^    def read_as_c_array(filename):$/;"	f	function:generate	file:
read_certificates	programs/x509/load_roots.c	/^int read_certificates(const char *const *filenames)$/;"	f	typeref:typename:int
read_driver_descriptions	scripts/generate_driver_wrappers.py	/^def read_driver_descriptions(project_root: str,$/;"	f	typeref:typename:list
read_implemented_dependencies	scripts/mbedtls_dev/psa_information.py	/^def read_implemented_dependencies(filename: str) -> FrozenSet[str]:$/;"	f	typeref:typename:FrozenSet[str]
read_lines	tests/scripts/generate_test_cert_macros.py	/^    def read_lines(filename):$/;"	f	function:generate	file:
read_next_b64_code	programs/ssl/ssl_context_info.c	/^size_t read_next_b64_code(uint8_t **b64, size_t *max_len)$/;"	f	typeref:typename:size_t
read_outcome_file	tests/scripts/analyze_outcomes.py	/^def read_outcome_file(outcome_file: str) -> Outcomes:$/;"	f	typeref:typename:Outcomes
read_uninitialized_stack	programs/test/metatest.c	/^void read_uninitialized_stack(const char *name)$/;"	f	typeref:typename:void
recv_cb	programs/ssl/ssl_test_common_source.c	/^int recv_cb(void *ctx, unsigned char *buf, size_t len)$/;"	f	typeref:typename:int
recv_timeout_cb	programs/ssl/ssl_test_common_source.c	/^int recv_timeout_cb(void *ctx, unsigned char *buf, size_t len,$/;"	f	typeref:typename:int
render	scripts/generate_driver_wrappers.py	/^def render(template_path: str, driver_jsoncontext: list) -> str:$/;"	f	typeref:typename:str
replacer	scripts/generate_ssl_debug_helpers.py	/^    def replacer(match):$/;"	f	function:remove_c_comments	file:
report_cid_usage	programs/ssl/ssl_client2.c	/^int report_cid_usage(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
report_cid_usage	programs/ssl/ssl_server2.c	/^int report_cid_usage(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
reset_chk_buf_ptr_args	tests/src/test_helpers/ssl_helpers.c	/^static void reset_chk_buf_ptr_args(mbedtls_ssl_chk_buf_ptr_args *args)$/;"	f	typeref:typename:void	file:
resize_buffer	library/ssl_tls.c	/^static int resize_buffer(unsigned char **buffer, size_t len_new, size_t *len_old)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
rng_free	programs/ssl/ssl_test_lib.c	/^void rng_free(rng_context_t *rng)$/;"	f	typeref:typename:void
rng_get	programs/ssl/ssl_test_lib.c	/^int rng_get(void *p_rng, unsigned char *output, size_t output_len)$/;"	f	typeref:typename:int
rng_get	tests/src/test_helpers/ssl_helpers.c	/^static int rng_get(void *p_rng, unsigned char *output, size_t output_len)$/;"	f	typeref:typename:int	file:
rng_init	programs/ssl/ssl_test_lib.c	/^void rng_init(rng_context_t *rng)$/;"	f	typeref:typename:void
rng_seed	programs/ssl/ssl_test_lib.c	/^int rng_seed(rng_context_t *rng, int reproducible, const char *pers)$/;"	f	typeref:typename:int
rsa_alloc_wrap	library/pk_wrap.c	/^static void *rsa_alloc_wrap(void)$/;"	f	typeref:typename:void *	file:
rsa_alt_alloc_wrap	library/pk_wrap.c	/^static void *rsa_alt_alloc_wrap(void)$/;"	f	typeref:typename:void *	file:
rsa_alt_can_do	library/pk_wrap.c	/^static int rsa_alt_can_do(mbedtls_pk_type_t type)$/;"	f	typeref:typename:int	file:
rsa_alt_check_pair	library/pk_wrap.c	/^static int rsa_alt_check_pair(mbedtls_pk_context *pub, mbedtls_pk_context *prv,$/;"	f	typeref:typename:int	file:
rsa_alt_decrypt_wrap	library/pk_wrap.c	/^static int rsa_alt_decrypt_wrap(mbedtls_pk_context *pk,$/;"	f	typeref:typename:int	file:
rsa_alt_free_wrap	library/pk_wrap.c	/^static void rsa_alt_free_wrap(void *ctx)$/;"	f	typeref:typename:void	file:
rsa_alt_get_bitlen	library/pk_wrap.c	/^static size_t rsa_alt_get_bitlen(mbedtls_pk_context *pk)$/;"	f	typeref:typename:size_t	file:
rsa_alt_sign_wrap	library/pk_wrap.c	/^static int rsa_alt_sign_wrap(mbedtls_pk_context *pk, mbedtls_md_type_t md_alg,$/;"	f	typeref:typename:int	file:
rsa_can_do	library/pk_wrap.c	/^static int rsa_can_do(mbedtls_pk_type_t type)$/;"	f	typeref:typename:int	file:
rsa_check_context	library/rsa.c	/^static int rsa_check_context(mbedtls_rsa_context const *ctx, int is_priv,$/;"	f	typeref:typename:int	file:
rsa_check_pair_wrap	library/pk_wrap.c	/^static int rsa_check_pair_wrap(mbedtls_pk_context *pub, mbedtls_pk_context *prv,$/;"	f	typeref:typename:int	file:
rsa_debug	library/pk_wrap.c	/^static void rsa_debug(mbedtls_pk_context *pk, mbedtls_pk_debug_item *items)$/;"	f	typeref:typename:void	file:
rsa_decrypt_wrap	library/pk_wrap.c	/^static int rsa_decrypt_wrap(mbedtls_pk_context *pk,$/;"	f	typeref:typename:int	file:
rsa_encrypt_wrap	library/pk_wrap.c	/^static int rsa_encrypt_wrap(mbedtls_pk_context *pk,$/;"	f	typeref:typename:int	file:
rsa_free_wrap	library/pk_wrap.c	/^static void rsa_free_wrap(void *ctx)$/;"	f	typeref:typename:void	file:
rsa_get_bitlen	library/pk_wrap.c	/^static size_t rsa_get_bitlen(mbedtls_pk_context *pk)$/;"	f	typeref:typename:size_t	file:
rsa_opaque_can_do	library/pk_wrap.c	/^static int rsa_opaque_can_do(mbedtls_pk_type_t type)$/;"	f	typeref:typename:int	file:
rsa_opaque_decrypt	library/pk_wrap.c	/^static int rsa_opaque_decrypt(mbedtls_pk_context *pk,$/;"	f	typeref:typename:int	file:
rsa_opaque_sign_wrap	library/pk_wrap.c	/^static int rsa_opaque_sign_wrap(mbedtls_pk_context *pk, mbedtls_md_type_t md_alg,$/;"	f	typeref:typename:int	file:
rsa_prepare_blinding	library/rsa.c	/^static int rsa_prepare_blinding(mbedtls_rsa_context *ctx,$/;"	f	typeref:typename:int	file:
rsa_pss_expected_salt_len	library/psa_crypto_rsa.c	/^static int rsa_pss_expected_salt_len(psa_algorithm_t alg,$/;"	f	typeref:typename:int	file:
rsa_rsassa_pkcs1_v15_encode	library/rsa.c	/^static int rsa_rsassa_pkcs1_v15_encode(mbedtls_md_type_t md_alg,$/;"	f	typeref:typename:int	file:
rsa_rsassa_pss_sign	library/rsa.c	/^static int rsa_rsassa_pss_sign(mbedtls_rsa_context *ctx,$/;"	f	typeref:typename:int	file:
rsa_rsassa_pss_sign_no_mode_check	library/rsa.c	/^static int rsa_rsassa_pss_sign_no_mode_check(mbedtls_rsa_context *ctx,$/;"	f	typeref:typename:int	file:
rsa_sign_wrap	library/pk_wrap.c	/^static int rsa_sign_wrap(mbedtls_pk_context *pk, mbedtls_md_type_t md_alg,$/;"	f	typeref:typename:int	file:
rsa_verify_wrap	library/pk_wrap.c	/^static int rsa_verify_wrap(mbedtls_pk_context *pk, mbedtls_md_type_t md_alg,$/;"	f	typeref:typename:int	file:
run	programs/psa/key_ladder_demo.c	/^static psa_status_t run(enum program_mode mode,$/;"	f	typeref:typename:psa_status_t	file:
run_c	tests/scripts/test_psa_constant_names.py	/^def run_c(type_word: str,$/;"	f	typeref:typename:List[str]
run_test_snprintf	programs/test/selftest.c	/^static int run_test_snprintf(void)$/;"	f	typeref:typename:int	file:
save_key	programs/psa/key_ladder_demo.c	/^static psa_status_t save_key(psa_key_id_t key,$/;"	f	typeref:typename:psa_status_t	file:
scalar_from_bytes	3rdparty/p256-m/p256-m/p256-m.c	/^static int scalar_from_bytes(uint32_t s[8], const uint8_t p[32])$/;"	f	typeref:typename:int	file:
scalar_gen_with_pub	3rdparty/p256-m/p256-m/p256-m.c	/^static int scalar_gen_with_pub(uint8_t sbytes[32], uint32_t s[8],$/;"	f	typeref:typename:int	file:
scalar_mult	3rdparty/p256-m/p256-m/p256-m.c	/^static void scalar_mult(uint32_t rx[8], uint32_t ry[8],$/;"	f	typeref:typename:void	file:
self_test_adjust_exponent	library/ecp.c	/^static int self_test_adjust_exponent(const mbedtls_ecp_group *grp,$/;"	f	typeref:typename:int	file:
self_test_point	library/ecp.c	/^static int self_test_point(int verbose,$/;"	f	typeref:typename:int	file:
self_test_rng	library/ecjpake.c	/^static int self_test_rng(void *ctx, unsigned char *out, size_t len)$/;"	f	typeref:typename:int	file:
self_test_rng	library/ecp.c	/^static int self_test_rng(void *ctx, unsigned char *out, size_t len)$/;"	f	typeref:typename:int	file:
send_cb	programs/ssl/ssl_test_common_source.c	/^int send_cb(void *ctx, unsigned char const *buf, size_t len)$/;"	f	typeref:typename:int
send_delayed	programs/test/udp_proxy.c	/^int send_delayed(void)$/;"	f	typeref:typename:int
send_packet	programs/test/udp_proxy.c	/^int send_packet(const packet *p, const char *why)$/;"	f	typeref:typename:int
set_chk_buf_ptr_args	tests/src/test_helpers/ssl_helpers.c	/^static void set_chk_buf_ptr_args($/;"	f	typeref:typename:void	file:
set_ciphersuite	tests/src/test_helpers/ssl_helpers.c	/^static void set_ciphersuite(mbedtls_ssl_config *conf, const char *cipher,$/;"	f	typeref:typename:void	file:
set_ecp_curve	programs/test/benchmark.c	/^static int set_ecp_curve(const char *string, mbedtls_ecp_curve_info *curve)$/;"	f	typeref:typename:int	file:
set_mont_const_square	library/bignum_mod.c	/^static int set_mont_const_square(const mbedtls_mpi_uint **X,$/;"	f	typeref:typename:int	file:
set_to_zero_but_the_compiler_does_not_know	programs/test/metatest.c	/^static void set_to_zero_but_the_compiler_does_not_know(volatile void *p, size_t n)$/;"	f	typeref:typename:void	file:
setup_psa_key_derivation	library/ssl_tls.c	/^static psa_status_t setup_psa_key_derivation(psa_key_derivation_operation_t *derivation,$/;"	f	typeref:typename:psa_status_t	file:
sha512_put_uint64_be	library/sha512.c	/^static void sha512_put_uint64_be(uint64_t n, unsigned char *b, uint8_t i)$/;"	f	typeref:typename:void	file:
short_expression	scripts/mbedtls_dev/crypto_knowledge.py	/^def short_expression(original: str, level: int = 0) -> str:$/;"	f	typeref:typename:str
sighandler	programs/test/benchmark.c	/^static void sighandler(int signum)$/;"	f	typeref:typename:void	file:
sigill_handler	library/sha256.c	/^static void sigill_handler(int signal)$/;"	f	typeref:typename:void	file:
sigill_handler	library/sha512.c	/^static void sigill_handler(int signal)$/;"	f	typeref:typename:void	file:
sign_hash	tests/src/drivers/test_driver_signature.c	/^psa_status_t sign_hash($/;"	f	typeref:typename:psa_status_t
sni_callback	programs/ssl/ssl_server2.c	/^int sni_callback(void *p_info, mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
sni_free	programs/ssl/ssl_server2.c	/^void sni_free(sni_entry *head)$/;"	f	typeref:typename:void
sni_parse	programs/ssl/ssl_server2.c	/^sni_entry *sni_parse(char *sni_string)$/;"	f	typeref:typename:sni_entry *
snprintf	programs/psa/psa_constant_names.c	/^int snprintf(char *s, size_t n, const char *fmt, ...)$/;"	f	typeref:typename:int
sort_by_k	scripts/code_size_compare.py	/^        sort_by_k = lambda item: item[0].lower()$/;"	f	member:CodeSizeGeneratorWithSize.write_comparison	file:
sortby_end	tests/scripts/audit-validity-dates.py	/^    sortby_end = lambda d: d.not_valid_after$/;"	f	function:main	file:
ssl_append_key_cert	library/ssl_tls.c	/^static int ssl_append_key_cert(mbedtls_ssl_key_cert **head,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_async_cancel	programs/ssl/ssl_server2.c	/^static void ssl_async_cancel(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:void	file:
ssl_async_decrypt	programs/ssl/ssl_server2.c	/^static int ssl_async_decrypt(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int	file:
ssl_async_resume	programs/ssl/ssl_server2.c	/^static int ssl_async_resume(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int	file:
ssl_async_set_key	programs/ssl/ssl_server2.c	/^int ssl_async_set_key(ssl_async_key_context_t *ctx,$/;"	f	typeref:typename:int
ssl_async_sign	programs/ssl/ssl_server2.c	/^static int ssl_async_sign(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int	file:
ssl_async_start	programs/ssl/ssl_server2.c	/^static int ssl_async_start(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int	file:
ssl_bitmask_check	library/ssl_msg.c	/^static int ssl_bitmask_check(unsigned char *mask, size_t len)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_bitmask_set	library/ssl_msg.c	/^static void ssl_bitmask_set(unsigned char *mask, size_t offset, size_t len)$/;"	f	typeref:typename:void	file:
ssl_buffer_future_record	library/ssl_msg.c	/^static int ssl_buffer_future_record(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_buffer_make_space	library/ssl_msg.c	/^static int ssl_buffer_make_space(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_buffer_message	library/ssl_msg.c	/^static int ssl_buffer_message(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_buffering_free_slot	library/ssl_msg.c	/^static void ssl_buffering_free_slot(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:void	file:
ssl_build_inner_plaintext	library/ssl_msg.c	/^static int ssl_build_inner_plaintext(unsigned char *content,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_build_record_nonce	library/ssl_msg.c	/^static void ssl_build_record_nonce(unsigned char *dst_iv,$/;"	f	typeref:typename:void	file:
ssl_cache_entry_zeroize	library/ssl_cache.c	/^static void ssl_cache_entry_zeroize(mbedtls_ssl_cache_entry *entry)$/;"	f	typeref:typename:void	file:
ssl_cache_find_entry	library/ssl_cache.c	/^static int ssl_cache_find_entry(mbedtls_ssl_cache_context *cache,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_cache_pick_writing_slot	library/ssl_cache.c	/^static int ssl_cache_pick_writing_slot(mbedtls_ssl_cache_context *cache,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_calc_finished_tls_generic	library/ssl_tls.c	/^static int ssl_calc_finished_tls_generic(mbedtls_ssl_context *ssl, void *ctx,$/;"	f	typeref:typename:int	file:
ssl_calc_finished_tls_sha256	library/ssl_tls.c	/^static int ssl_calc_finished_tls_sha256($/;"	f	typeref:typename:int	file:
ssl_calc_finished_tls_sha384	library/ssl_tls.c	/^static int ssl_calc_finished_tls_sha384($/;"	f	typeref:typename:int	file:
ssl_calc_verify_tls_legacy	library/ssl_tls.c	/^static int ssl_calc_verify_tls_legacy(const mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int	file:
ssl_calc_verify_tls_psa	library/ssl_tls.c	/^static int ssl_calc_verify_tls_psa(const mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int	file:
ssl_calc_verify_tls_sha256	library/ssl_tls.c	/^int ssl_calc_verify_tls_sha256(const mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
ssl_calc_verify_tls_sha384	library/ssl_tls.c	/^int ssl_calc_verify_tls_sha384(const mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int
ssl_check_client_reconnect	library/ssl_msg.c	/^static int ssl_check_client_reconnect(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_check_ctr_renegotiate	library/ssl_msg.c	/^static int ssl_check_ctr_renegotiate(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_check_hs_header	library/ssl_msg.c	/^static int ssl_check_hs_header(mbedtls_ssl_context const *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_check_key_curve	library/ssl_tls12_server.c	/^static int ssl_check_key_curve(mbedtls_pk_context *pk,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_check_no_sig_alg_duplication	library/ssl_tls.c	/^static int ssl_check_no_sig_alg_duplication(uint16_t *sig_algs)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_check_peer_crt_unchanged	library/ssl_tls.c	/^static int ssl_check_peer_crt_unchanged(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_check_record	programs/ssl/ssl_test_common_source.c	/^int ssl_check_record(mbedtls_ssl_context const *ssl,$/;"	f	typeref:typename:int
ssl_check_record_type	library/ssl_msg.c	/^static int ssl_check_record_type(uint8_t record_type)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_check_server_ecdh_params	library/ssl_tls12_client.c	/^static int ssl_check_server_ecdh_params(const mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_ciphersuite_match	library/ssl_tls12_server.c	/^static int ssl_ciphersuite_match(mbedtls_ssl_context *ssl, int suite_id,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_clear_peer_cert	library/ssl_tls.c	/^static void ssl_clear_peer_cert(mbedtls_ssl_session *session)$/;"	f	typeref:typename:void	file:
ssl_compute_master	library/ssl_tls.c	/^static int ssl_compute_master(mbedtls_ssl_handshake_params *handshake,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_compute_padding_length	library/ssl_msg.c	/^static size_t ssl_compute_padding_length(size_t len,$/;"	f	typeref:typename:size_t	file:
ssl_conf_check	library/ssl_tls.c	/^static int ssl_conf_check(const mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_conf_has_psk_or_cb	library/ssl_tls12_server.c	/^static int ssl_conf_has_psk_or_cb(mbedtls_ssl_config const *conf)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_conf_remove_psk	library/ssl_tls.c	/^static void ssl_conf_remove_psk(mbedtls_ssl_config *conf)$/;"	f	typeref:typename:void	file:
ssl_conf_set_psk_identity	library/ssl_tls.c	/^static int ssl_conf_set_psk_identity(mbedtls_ssl_config *conf,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_conf_version_check	library/ssl_tls.c	/^static int ssl_conf_version_check(const mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_consume_current_message	library/ssl_msg.c	/^static int ssl_consume_current_message(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_context_load	library/ssl_tls.c	/^static int ssl_context_load(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_cookie_check_dummy	library/ssl_tls.c	/^static int ssl_cookie_check_dummy(void *ctx,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_cookie_hmac	library/ssl_cookie.c	/^static int ssl_cookie_hmac(mbedtls_md_context_t *hmac_ctx,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_cookie_write_dummy	library/ssl_tls.c	/^static int ssl_cookie_write_dummy(void *ctx,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_decrypt_encrypted_pms	library/ssl_tls12_server.c	/^static int ssl_decrypt_encrypted_pms(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_double_retransmit_timeout	library/ssl_msg.c	/^static int ssl_double_retransmit_timeout(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_extract_add_data_from_record	library/ssl_msg.c	/^static void ssl_extract_add_data_from_record(unsigned char *add_data,$/;"	f	typeref:typename:void	file:
ssl_flight_append	library/ssl_msg.c	/^static int ssl_flight_append(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_free_buffered_record	library/ssl_msg.c	/^static void ssl_free_buffered_record(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:void	file:
ssl_generate_random	library/ssl_client.c	/^static int ssl_generate_random(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_get_ecdh_params_from_cert	library/ssl_tls12_client.c	/^static int ssl_get_ecdh_params_from_cert(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_get_ecdh_params_from_cert	library/ssl_tls12_server.c	/^static int ssl_get_ecdh_params_from_cert(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_get_handshake_transcript_sha256	library/ssl_tls.c	/^static int ssl_get_handshake_transcript_sha256(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_get_handshake_transcript_sha384	library/ssl_tls.c	/^static int ssl_get_handshake_transcript_sha384(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_get_hs_frag_len	library/ssl_msg.c	/^static uint32_t ssl_get_hs_frag_len(mbedtls_ssl_context const *ssl)$/;"	f	typeref:typename:uint32_t	file:
ssl_get_hs_frag_off	library/ssl_msg.c	/^static uint32_t ssl_get_hs_frag_off(mbedtls_ssl_context const *ssl)$/;"	f	typeref:typename:uint32_t	file:
ssl_get_hs_total_len	library/ssl_msg.c	/^static uint32_t ssl_get_hs_total_len(mbedtls_ssl_context const *ssl)$/;"	f	typeref:typename:uint32_t	file:
ssl_get_maximum_datagram_size	library/ssl_msg.c	/^static size_t ssl_get_maximum_datagram_size(mbedtls_ssl_context const *ssl)$/;"	f	typeref:typename:size_t	file:
ssl_get_next_record	library/ssl_msg.c	/^static int ssl_get_next_record(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_get_reassembly_buffer_size	library/ssl_msg.c	/^static size_t ssl_get_reassembly_buffer_size(size_t msg_len,$/;"	f	typeref:typename:size_t	file:
ssl_get_remaining_payload_in_datagram	library/ssl_msg.c	/^static int ssl_get_remaining_payload_in_datagram(mbedtls_ssl_context const *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_get_remaining_space_in_datagram	library/ssl_msg.c	/^static int ssl_get_remaining_space_in_datagram(mbedtls_ssl_context const *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_handle_hs_message_post_handshake	library/ssl_msg.c	/^static int ssl_handle_hs_message_post_handshake(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_handle_id_based_session_resumption	library/ssl_tls12_server.c	/^static void ssl_handle_id_based_session_resumption(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:void	file:
ssl_handle_possible_reconnect	library/ssl_msg.c	/^static int ssl_handle_possible_reconnect(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_handshake_init	library/ssl_tls.c	/^static int ssl_handshake_init(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_handshake_params_init	library/ssl_tls.c	/^static void ssl_handshake_params_init(mbedtls_ssl_handshake_params *handshake)$/;"	f	typeref:typename:void	file:
ssl_hs_is_proper_fragment	library/ssl_msg.c	/^static int ssl_hs_is_proper_fragment(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_key_cert_free	library/ssl_tls.c	/^static void ssl_key_cert_free(mbedtls_ssl_key_cert *key_cert)$/;"	f	typeref:typename:void	file:
ssl_load_buffered_message	library/ssl_msg.c	/^static int ssl_load_buffered_message(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_load_buffered_record	library/ssl_msg.c	/^static int ssl_load_buffered_record(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_load_six_bytes	library/ssl_msg.c	/^static inline uint64_t ssl_load_six_bytes(unsigned char *buf)$/;"	f	typeref:typename:uint64_t	file:
ssl_mfl_code_to_length	library/ssl_tls.c	/^static unsigned int ssl_mfl_code_to_length(int mfl)$/;"	f	typeref:typename:unsigned int	file:
ssl_next_record_is_in_datagram	library/ssl_msg.c	/^static int ssl_next_record_is_in_datagram(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_parse_alpn_ext	library/ssl_tls12_client.c	/^static int ssl_parse_alpn_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_parse_certificate_chain	library/ssl_tls.c	/^static int ssl_parse_certificate_chain(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_parse_certificate_coordinate	library/ssl_tls.c	/^static int ssl_parse_certificate_coordinate(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_parse_certificate_request	library/ssl_tls12_client.c	/^static int ssl_parse_certificate_request(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_parse_certificate_verify	library/ssl_tls.c	/^static int ssl_parse_certificate_verify(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_parse_certificate_verify	library/ssl_tls12_server.c	/^static int ssl_parse_certificate_verify(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_parse_cid_ext	library/ssl_tls12_client.c	/^static int ssl_parse_cid_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_parse_cid_ext	library/ssl_tls12_server.c	/^static int ssl_parse_cid_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_parse_client_dh_public	library/ssl_tls12_server.c	/^static int ssl_parse_client_dh_public(mbedtls_ssl_context *ssl, unsigned char **p,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_parse_client_hello	library/ssl_tls12_server.c	/^static int ssl_parse_client_hello(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_parse_client_key_exchange	library/ssl_tls12_server.c	/^static int ssl_parse_client_key_exchange(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_parse_client_psk_identity	library/ssl_tls12_server.c	/^static int ssl_parse_client_psk_identity(mbedtls_ssl_context *ssl, unsigned char **p,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_parse_ecjpake_kkpp	library/ssl_tls12_client.c	/^static int ssl_parse_ecjpake_kkpp(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_parse_ecjpake_kkpp	library/ssl_tls12_server.c	/^static int ssl_parse_ecjpake_kkpp(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_parse_encrypt_then_mac_ext	library/ssl_tls12_client.c	/^static int ssl_parse_encrypt_then_mac_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_parse_encrypt_then_mac_ext	library/ssl_tls12_server.c	/^static int ssl_parse_encrypt_then_mac_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_parse_encrypted_pms	library/ssl_tls12_server.c	/^static int ssl_parse_encrypted_pms(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_parse_extended_ms_ext	library/ssl_tls12_client.c	/^static int ssl_parse_extended_ms_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_parse_extended_ms_ext	library/ssl_tls12_server.c	/^static int ssl_parse_extended_ms_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_parse_hello_verify_request	library/ssl_tls12_client.c	/^static int ssl_parse_hello_verify_request(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_parse_inner_plaintext	library/ssl_msg.c	/^static int ssl_parse_inner_plaintext(unsigned char const *content,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_parse_max_fragment_length_ext	library/ssl_tls12_client.c	/^static int ssl_parse_max_fragment_length_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_parse_max_fragment_length_ext	library/ssl_tls12_server.c	/^static int ssl_parse_max_fragment_length_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_parse_new_session_ticket	library/ssl_tls12_client.c	/^static int ssl_parse_new_session_ticket(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_parse_record_header	library/ssl_msg.c	/^static int ssl_parse_record_header(mbedtls_ssl_context const *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_parse_renegotiation_info	library/ssl_tls12_client.c	/^static int ssl_parse_renegotiation_info(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_parse_renegotiation_info	library/ssl_tls12_server.c	/^static int ssl_parse_renegotiation_info(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_parse_server_dh_params	library/ssl_tls12_client.c	/^static int ssl_parse_server_dh_params(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_parse_server_ecdh_params	library/ssl_tls12_client.c	/^static int ssl_parse_server_ecdh_params(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_parse_server_hello	library/ssl_tls12_client.c	/^static int ssl_parse_server_hello(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_parse_server_hello_done	library/ssl_tls12_client.c	/^static int ssl_parse_server_hello_done(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_parse_server_key_exchange	library/ssl_tls12_client.c	/^static int ssl_parse_server_key_exchange(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_parse_server_psk_hint	library/ssl_tls12_client.c	/^static int ssl_parse_server_psk_hint(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_parse_session_ticket_ext	library/ssl_tls12_client.c	/^static int ssl_parse_session_ticket_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_parse_session_ticket_ext	library/ssl_tls12_server.c	/^static int ssl_parse_session_ticket_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_parse_supported_groups_ext	library/ssl_tls12_server.c	/^static int ssl_parse_supported_groups_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_parse_supported_point_formats	library/ssl_tls12_server.c	/^static int ssl_parse_supported_point_formats(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_parse_supported_point_formats_ext	library/ssl_tls12_client.c	/^static int ssl_parse_supported_point_formats_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_parse_use_srtp_ext	library/ssl_tls12_client.c	/^static int ssl_parse_use_srtp_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_parse_use_srtp_ext	library/ssl_tls12_server.c	/^static int ssl_parse_use_srtp_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_pick_cert	library/ssl_tls12_server.c	/^static int ssl_pick_cert(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_prepare_client_hello	library/ssl_client.c	/^static int ssl_prepare_client_hello(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_prepare_handshake_step	library/ssl_tls.c	/^static int ssl_prepare_handshake_step(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_prepare_record_content	library/ssl_msg.c	/^static int ssl_prepare_record_content(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_prepare_server_key_exchange	library/ssl_tls12_server.c	/^static int ssl_prepare_server_key_exchange(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_record_is_in_progress	library/ssl_msg.c	/^static int ssl_record_is_in_progress(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_remember_peer_crt_digest	library/ssl_tls.c	/^static int ssl_remember_peer_crt_digest(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_remember_peer_pubkey	library/ssl_tls.c	/^static int ssl_remember_peer_pubkey(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_remove_psk	library/ssl_tls.c	/^static void ssl_remove_psk(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:void	file:
ssl_reset_retransmit_timeout	library/ssl_msg.c	/^static void ssl_reset_retransmit_timeout(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:void	file:
ssl_resume_decrypt_pms	library/ssl_tls12_server.c	/^static int ssl_resume_decrypt_pms(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_resume_server_key_exchange	library/ssl_tls12_server.c	/^static int ssl_resume_server_key_exchange(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_save_session_serialize	programs/ssl/ssl_client2.c	/^static int ssl_save_session_serialize(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int	file:
ssl_server_hello_is_hrr	library/ssl_tls13_client.c	/^static int ssl_server_hello_is_hrr(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_session_load	library/ssl_tls.c	/^static int ssl_session_load(mbedtls_ssl_session *session,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_session_save	library/ssl_tls.c	/^static int ssl_session_save(const mbedtls_ssl_session *session,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_set_handshake_prfs	library/ssl_tls.c	/^static int ssl_set_handshake_prfs(mbedtls_ssl_handshake_params *handshake,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_srv_check_client_no_crt_notification	library/ssl_tls.c	/^static int ssl_srv_check_client_no_crt_notification(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_swap_epochs	library/ssl_msg.c	/^static int ssl_swap_epochs(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_ticket_gen_key	library/ssl_ticket.c	/^static int ssl_ticket_gen_key(mbedtls_ssl_ticket_context *ctx,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_ticket_select_key	library/ssl_ticket.c	/^static mbedtls_ssl_ticket_key *ssl_ticket_select_key($/;"	f	typeref:typename:mbedtls_ssl_ticket_key *	file:
ssl_ticket_update_keys	library/ssl_ticket.c	/^static int ssl_ticket_update_keys(mbedtls_ssl_ticket_context *ctx)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls12_handle_hs_message_post_handshake	library/ssl_msg.c	/^static int ssl_tls12_handle_hs_message_post_handshake(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls12_populate_transform	library/ssl_tls.c	/^static int ssl_tls12_populate_transform(mbedtls_ssl_transform *transform,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls12_session_load	library/ssl_tls.c	/^static int ssl_tls12_session_load(mbedtls_ssl_session *session,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls12_session_save	library/ssl_tls.c	/^static size_t ssl_tls12_session_save(const mbedtls_ssl_session *session,$/;"	f	typeref:typename:size_t	file:
ssl_tls12prf_from_cs	library/ssl_tls.c	/^static tls_prf_fn ssl_tls12prf_from_cs(int ciphersuite_id)$/;"	f	typeref:typename:tls_prf_fn	file:
ssl_tls13_calc_finished_core	library/ssl_tls13_keys.c	/^static int ssl_tls13_calc_finished_core(psa_algorithm_t hash_alg,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_certificate_request_coordinate	library/ssl_tls13_client.c	/^static int ssl_tls13_certificate_request_coordinate(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_certificate_request_coordinate	library/ssl_tls13_server.c	/^static int ssl_tls13_certificate_request_coordinate(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_check_ephemeral_key_exchange	library/ssl_tls13_server.c	/^static int ssl_tls13_check_ephemeral_key_exchange(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_check_new_session_ticket	library/ssl_msg.c	/^static int ssl_tls13_check_new_session_ticket(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_check_psk_ephemeral_key_exchange	library/ssl_tls13_server.c	/^static int ssl_tls13_check_psk_ephemeral_key_exchange(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_check_psk_key_exchange	library/ssl_tls13_server.c	/^static int ssl_tls13_check_psk_key_exchange(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_check_server_hello_session_id_echo	library/ssl_tls13_client.c	/^static int ssl_tls13_check_server_hello_session_id_echo(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_client_hello_has_exts	library/ssl_tls13_server.c	/^static int ssl_tls13_client_hello_has_exts(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_client_hello_has_exts_for_ephemeral_key_exchange	library/ssl_tls13_server.c	/^static int ssl_tls13_client_hello_has_exts_for_ephemeral_key_exchange($/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_client_hello_has_exts_for_psk_ephemeral_key_exchange	library/ssl_tls13_server.c	/^static int ssl_tls13_client_hello_has_exts_for_psk_ephemeral_key_exchange($/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_client_hello_has_exts_for_psk_key_exchange	library/ssl_tls13_server.c	/^static int ssl_tls13_client_hello_has_exts_for_psk_key_exchange($/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_create_verify_structure	library/ssl_tls13_generic.c	/^static void ssl_tls13_create_verify_structure(const unsigned char *transcript_hash,$/;"	f	typeref:typename:void	file:
ssl_tls13_determine_key_exchange_mode	library/ssl_tls13_server.c	/^static int ssl_tls13_determine_key_exchange_mode(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int	file:
ssl_tls13_early_data_has_valid_ticket	library/ssl_tls13_client.c	/^static int ssl_tls13_early_data_has_valid_ticket(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int	file:
ssl_tls13_end_of_early_data_coordinate	library/ssl_tls13_server.c	/^static int ssl_tls13_end_of_early_data_coordinate(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_finalize_server_hello	library/ssl_tls13_server.c	/^static int ssl_tls13_finalize_server_hello(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_flush_buffers	library/ssl_tls13_client.c	/^static int ssl_tls13_flush_buffers(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_generate_and_write_key_share	library/ssl_tls13_server.c	/^static int ssl_tls13_generate_and_write_key_share(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_generate_application_keys	library/ssl_tls13_keys.c	/^static int ssl_tls13_generate_application_keys($/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_generate_early_key	library/ssl_tls13_keys.c	/^static int ssl_tls13_generate_early_key(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_generate_handshake_keys	library/ssl_tls13_keys.c	/^static int ssl_tls13_generate_handshake_keys(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_get_cipher_key_info	library/ssl_tls13_keys.c	/^static int ssl_tls13_get_cipher_key_info($/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_get_ciphersuite_hash_alg	library/ssl_tls13_client.c	/^static psa_algorithm_t ssl_tls13_get_ciphersuite_hash_alg(int ciphersuite)$/;"	f	typeref:typename:psa_algorithm_t	file:
ssl_tls13_get_configured_psk_count	library/ssl_tls13_client.c	/^static int ssl_tls13_get_configured_psk_count(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int	file:
ssl_tls13_get_default_group_id	library/ssl_tls13_client.c	/^static int ssl_tls13_get_default_group_id(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_get_hs_msg_name	library/ssl_tls.c	/^static const char *ssl_tls13_get_hs_msg_name(int hs_msg_type)$/;"	f	typeref:typename:const char *	file:
ssl_tls13_get_kex_mode_str	library/ssl_tls13_client.c	/^static const char *ssl_tls13_get_kex_mode_str(int mode)$/;"	f	typeref:typename:const char *	file:
ssl_tls13_handle_hs_message_post_handshake	library/ssl_msg.c	/^static int ssl_tls13_handle_hs_message_post_handshake(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_handshake_wrapup	library/ssl_tls13_client.c	/^static int ssl_tls13_handshake_wrapup(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_handshake_wrapup	library/ssl_tls13_server.c	/^static int ssl_tls13_handshake_wrapup(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_has_configured_ticket	library/ssl_tls13_client.c	/^static int ssl_tls13_has_configured_ticket(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int	file:
ssl_tls13_hkdf_encode_label	library/ssl_tls13_keys.c	/^static void ssl_tls13_hkdf_encode_label($/;"	f	typeref:typename:void	file:
ssl_tls13_iana_sig_alg_to_psa_alg	library/ssl_tls13_server.c	/^static psa_algorithm_t ssl_tls13_iana_sig_alg_to_psa_alg(uint16_t sig_alg)$/;"	f	typeref:typename:psa_algorithm_t	file:
ssl_tls13_is_downgrade_negotiation	library/ssl_tls13_client.c	/^static int ssl_tls13_is_downgrade_negotiation(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_is_supported_versions_ext_present	library/ssl_tls13_client.c	/^static int ssl_tls13_is_supported_versions_ext_present($/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_key_schedule_stage_application	library/ssl_tls13_keys.c	/^static int ssl_tls13_key_schedule_stage_application(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_key_schedule_stage_handshake	library/ssl_tls13_keys.c	/^static int ssl_tls13_key_schedule_stage_handshake(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_make_traffic_key	library/ssl_tls13_keys.c	/^static int ssl_tls13_make_traffic_key($/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_offered_psks_check_binder_match	library/ssl_tls13_server.c	/^static int ssl_tls13_offered_psks_check_binder_match($/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_offered_psks_check_identity_match	library/ssl_tls13_server.c	/^static int ssl_tls13_offered_psks_check_identity_match($/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_offered_psks_check_identity_match_ticket	library/ssl_tls13_server.c	/^static int ssl_tls13_offered_psks_check_identity_match_ticket($/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_parse_alpn_ext	library/ssl_tls13_client.c	/^static int ssl_tls13_parse_alpn_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_parse_certificate_request	library/ssl_tls13_client.c	/^static int ssl_tls13_parse_certificate_request(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_parse_certificate_verify	library/ssl_tls13_generic.c	/^static int ssl_tls13_parse_certificate_verify(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_parse_client_hello	library/ssl_tls13_server.c	/^static int ssl_tls13_parse_client_hello(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_parse_cookie_ext	library/ssl_tls13_client.c	/^static int ssl_tls13_parse_cookie_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_parse_encrypted_extensions	library/ssl_tls13_client.c	/^static int ssl_tls13_parse_encrypted_extensions(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_parse_end_of_early_data	library/ssl_tls13_server.c	/^static int ssl_tls13_parse_end_of_early_data(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_parse_finished_message	library/ssl_tls13_generic.c	/^static int ssl_tls13_parse_finished_message(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_parse_hrr_key_share_ext	library/ssl_tls13_client.c	/^static int ssl_tls13_parse_hrr_key_share_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_parse_key_exchange_modes_ext	library/ssl_tls13_server.c	/^static int ssl_tls13_parse_key_exchange_modes_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_parse_key_share_ext	library/ssl_tls13_client.c	/^static int ssl_tls13_parse_key_share_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_parse_key_shares_ext	library/ssl_tls13_server.c	/^static int ssl_tls13_parse_key_shares_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_parse_new_session_ticket	library/ssl_tls13_client.c	/^static int ssl_tls13_parse_new_session_ticket(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_parse_new_session_ticket_early_data_ext	library/ssl_tls13_client.c	/^static int ssl_tls13_parse_new_session_ticket_early_data_ext($/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_parse_new_session_ticket_exts	library/ssl_tls13_client.c	/^static int ssl_tls13_parse_new_session_ticket_exts(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_parse_pre_shared_key_ext	library/ssl_tls13_server.c	/^static int ssl_tls13_parse_pre_shared_key_ext($/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_parse_server_hello	library/ssl_tls13_client.c	/^static int ssl_tls13_parse_server_hello(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_parse_server_pre_shared_key_ext	library/ssl_tls13_client.c	/^static int ssl_tls13_parse_server_pre_shared_key_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_parse_supported_groups_ext	library/ssl_tls13_server.c	/^static int ssl_tls13_parse_supported_groups_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_parse_supported_versions_ext	library/ssl_tls13_client.c	/^static int ssl_tls13_parse_supported_versions_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_parse_supported_versions_ext	library/ssl_tls13_server.c	/^static int ssl_tls13_parse_supported_versions_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_pick_key_cert	library/ssl_tls13_server.c	/^static int ssl_tls13_pick_key_cert(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_postprocess_client_hello	library/ssl_tls13_server.c	/^static int ssl_tls13_postprocess_client_hello(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_postprocess_hrr	library/ssl_tls13_client.c	/^static int ssl_tls13_postprocess_hrr(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_postprocess_new_session_ticket	library/ssl_tls13_client.c	/^static int ssl_tls13_postprocess_new_session_ticket(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_postprocess_server_hello	library/ssl_tls13_client.c	/^static int ssl_tls13_postprocess_server_hello(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_prepare_finished_message	library/ssl_tls13_generic.c	/^static int ssl_tls13_prepare_finished_message(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_prepare_for_handshake_second_flight	library/ssl_tls13_server.c	/^static void ssl_tls13_prepare_for_handshake_second_flight($/;"	f	typeref:typename:void	file:
ssl_tls13_prepare_hello_retry_request	library/ssl_tls13_server.c	/^static int ssl_tls13_prepare_hello_retry_request(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_prepare_new_session_ticket	library/ssl_tls13_server.c	/^static int ssl_tls13_prepare_new_session_ticket(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_prepare_server_hello	library/ssl_tls13_server.c	/^static int ssl_tls13_prepare_server_hello(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_preprocess_finished_message	library/ssl_tls13_generic.c	/^static int ssl_tls13_preprocess_finished_message(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_preprocess_server_hello	library/ssl_tls13_client.c	/^static int ssl_tls13_preprocess_server_hello(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_process_certificate_request	library/ssl_tls13_client.c	/^static int ssl_tls13_process_certificate_request(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_process_certificate_verify	library/ssl_tls13_client.c	/^static int ssl_tls13_process_certificate_verify(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_process_client_finished	library/ssl_tls13_server.c	/^static int ssl_tls13_process_client_finished(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_process_client_hello	library/ssl_tls13_server.c	/^static int ssl_tls13_process_client_hello(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_process_early_application_data	library/ssl_tls13_server.c	/^static int ssl_tls13_process_early_application_data(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_process_encrypted_extensions	library/ssl_tls13_client.c	/^static int ssl_tls13_process_encrypted_extensions(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_process_end_of_early_data	library/ssl_tls13_server.c	/^static int ssl_tls13_process_end_of_early_data(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_process_new_session_ticket	library/ssl_tls13_client.c	/^static int ssl_tls13_process_new_session_ticket(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_process_server_certificate	library/ssl_tls13_client.c	/^static int ssl_tls13_process_server_certificate(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_process_server_finished	library/ssl_tls13_client.c	/^static int ssl_tls13_process_server_finished(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_process_server_hello	library/ssl_tls13_client.c	/^static int ssl_tls13_process_server_hello(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_psk_get_identity	library/ssl_tls13_client.c	/^static int ssl_tls13_psk_get_identity(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_psk_get_psk	library/ssl_tls13_client.c	/^static int ssl_tls13_psk_get_psk(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_reset_key_share	library/ssl_tls13_client.c	/^static int ssl_tls13_reset_key_share(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_select_ciphersuite_for_psk	library/ssl_tls13_server.c	/^static int ssl_tls13_select_ciphersuite_for_psk($/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_select_ciphersuite_for_resumption	library/ssl_tls13_server.c	/^static int ssl_tls13_select_ciphersuite_for_resumption($/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_session_copy_ticket	library/ssl_tls13_server.c	/^static int ssl_tls13_session_copy_ticket(mbedtls_ssl_session *dst,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_session_load	library/ssl_tls.c	/^static int ssl_tls13_session_load(const mbedtls_ssl_session *session,$/;"	f	typeref:typename:int	file:
ssl_tls13_session_load	library/ssl_tls.c	/^static int ssl_tls13_session_load(mbedtls_ssl_session *session,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_session_save	library/ssl_tls.c	/^static int ssl_tls13_session_save(const mbedtls_ssl_session *session,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_ticket_get_identity	library/ssl_tls13_client.c	/^static int ssl_tls13_ticket_get_identity(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_ticket_get_psk	library/ssl_tls13_client.c	/^static int ssl_tls13_ticket_get_psk(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_ticket_permission_check	library/ssl_tls13_server.c	/^static int ssl_tls13_ticket_permission_check(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_update_early_data_status	library/ssl_tls13_server.c	/^static void ssl_tls13_update_early_data_status(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:void	file:
ssl_tls13_validate_certificate	library/ssl_tls13_generic.c	/^static int ssl_tls13_validate_certificate(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_validate_peer_ciphersuite	library/ssl_tls13_server.c	/^static const mbedtls_ssl_ciphersuite_t *ssl_tls13_validate_peer_ciphersuite($/;"	f	typeref:typename:const mbedtls_ssl_ciphersuite_t *	file:
ssl_tls13_write_binder	library/ssl_tls13_client.c	/^static int ssl_tls13_write_binder(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_write_certificate_body	library/ssl_tls13_generic.c	/^static int ssl_tls13_write_certificate_body(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_write_certificate_request	library/ssl_tls13_server.c	/^static int ssl_tls13_write_certificate_request(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_write_certificate_request_body	library/ssl_tls13_server.c	/^static int ssl_tls13_write_certificate_request_body(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_write_certificate_verify	library/ssl_tls13_server.c	/^static int ssl_tls13_write_certificate_verify(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_write_certificate_verify_body	library/ssl_tls13_generic.c	/^static int ssl_tls13_write_certificate_verify_body(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_write_change_cipher_spec_body	library/ssl_tls13_generic.c	/^static int ssl_tls13_write_change_cipher_spec_body(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_write_client_certificate	library/ssl_tls13_client.c	/^static int ssl_tls13_write_client_certificate(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_write_client_certificate_verify	library/ssl_tls13_client.c	/^static int ssl_tls13_write_client_certificate_verify(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_write_client_finished	library/ssl_tls13_client.c	/^static int ssl_tls13_write_client_finished(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_write_cookie_ext	library/ssl_tls13_client.c	/^static int ssl_tls13_write_cookie_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_write_encrypted_extensions	library/ssl_tls13_server.c	/^static int ssl_tls13_write_encrypted_extensions(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_write_encrypted_extensions_body	library/ssl_tls13_server.c	/^static int ssl_tls13_write_encrypted_extensions_body(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_write_end_of_early_data	library/ssl_tls13_client.c	/^static int ssl_tls13_write_end_of_early_data(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_write_finished_message_body	library/ssl_tls13_generic.c	/^static int ssl_tls13_write_finished_message_body(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_write_hello_retry_request	library/ssl_tls13_server.c	/^static int ssl_tls13_write_hello_retry_request(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_write_hrr_key_share_ext	library/ssl_tls13_server.c	/^static int ssl_tls13_write_hrr_key_share_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_write_identity	library/ssl_tls13_client.c	/^static int ssl_tls13_write_identity(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_write_key_share_ext	library/ssl_tls13_client.c	/^static int ssl_tls13_write_key_share_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_write_key_share_ext	library/ssl_tls13_server.c	/^static int ssl_tls13_write_key_share_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_write_new_session_ticket	library/ssl_tls13_server.c	/^static int ssl_tls13_write_new_session_ticket(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:int	file:
ssl_tls13_write_new_session_ticket_body	library/ssl_tls13_server.c	/^static int ssl_tls13_write_new_session_ticket_body(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_write_new_session_ticket_coordinate	library/ssl_tls13_server.c	/^static int ssl_tls13_write_new_session_ticket_coordinate(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_write_psk_key_exchange_modes_ext	library/ssl_tls13_client.c	/^static int ssl_tls13_write_psk_key_exchange_modes_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_write_server_certificate	library/ssl_tls13_server.c	/^static int ssl_tls13_write_server_certificate(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_write_server_finished	library/ssl_tls13_server.c	/^static int ssl_tls13_write_server_finished(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_write_server_hello	library/ssl_tls13_server.c	/^static int ssl_tls13_write_server_hello(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_write_server_hello_body	library/ssl_tls13_server.c	/^static int ssl_tls13_write_server_hello_body(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_write_server_hello_supported_versions_ext	library/ssl_tls13_server.c	/^static int ssl_tls13_write_server_hello_supported_versions_ext($/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_tls13_write_server_pre_shared_key_ext	library/ssl_tls13_server.c	/^static int ssl_tls13_write_server_pre_shared_key_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int	file:
ssl_tls13_write_supported_versions_ext	library/ssl_tls13_client.c	/^static int ssl_tls13_write_supported_versions_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_transform_aead_dynamic_iv_is_explicit	library/ssl_msg.c	/^static int ssl_transform_aead_dynamic_iv_is_explicit($/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_transform_get_explicit_iv_len	library/ssl_msg.c	/^static size_t ssl_transform_get_explicit_iv_len($/;"	f	typeref:typename:size_t	file:
ssl_update_checksum_sha256	library/ssl_tls.c	/^static int ssl_update_checksum_sha256(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int	file:
ssl_update_checksum_sha384	library/ssl_tls.c	/^static int ssl_update_checksum_sha384(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int	file:
ssl_update_checksum_start	library/ssl_tls.c	/^static int ssl_update_checksum_start(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:int	file:
ssl_write_alpn_ext	library/ssl_client.c	/^static int ssl_write_alpn_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_write_certificate_request	library/ssl_tls12_server.c	/^static int ssl_write_certificate_request(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_write_certificate_verify	library/ssl_tls12_client.c	/^static int ssl_write_certificate_verify(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_write_cid_ext	library/ssl_tls12_client.c	/^static int ssl_write_cid_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_write_cid_ext	library/ssl_tls12_server.c	/^static void ssl_write_cid_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:void	file:
ssl_write_client_hello_body	library/ssl_client.c	/^static int ssl_write_client_hello_body(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_write_client_hello_cipher_suites	library/ssl_client.c	/^static int ssl_write_client_hello_cipher_suites($/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_write_client_key_exchange	library/ssl_tls12_client.c	/^static int ssl_write_client_key_exchange(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_write_ecjpake_kkpp_ext	library/ssl_tls12_client.c	/^static int ssl_write_ecjpake_kkpp_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_write_ecjpake_kkpp_ext	library/ssl_tls12_server.c	/^static void ssl_write_ecjpake_kkpp_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:void	file:
ssl_write_encrypt_then_mac_ext	library/ssl_tls12_client.c	/^static int ssl_write_encrypt_then_mac_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_write_encrypt_then_mac_ext	library/ssl_tls12_server.c	/^static void ssl_write_encrypt_then_mac_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:void	file:
ssl_write_encrypted_pms	library/ssl_tls12_client.c	/^static int ssl_write_encrypted_pms(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_write_extended_ms_ext	library/ssl_tls12_client.c	/^static int ssl_write_extended_ms_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_write_extended_ms_ext	library/ssl_tls12_server.c	/^static void ssl_write_extended_ms_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:void	file:
ssl_write_hello_request	library/ssl_tls.c	/^static int ssl_write_hello_request(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_write_hello_verify_request	library/ssl_tls12_server.c	/^static int ssl_write_hello_verify_request(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_write_hostname_ext	library/ssl_client.c	/^static int ssl_write_hostname_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_write_max_fragment_length_ext	library/ssl_tls12_client.c	/^static int ssl_write_max_fragment_length_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_write_max_fragment_length_ext	library/ssl_tls12_server.c	/^static void ssl_write_max_fragment_length_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:void	file:
ssl_write_new_session_ticket	library/ssl_tls12_server.c	/^static int ssl_write_new_session_ticket(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_write_real	library/ssl_msg.c	/^static int ssl_write_real(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_write_renegotiation_ext	library/ssl_tls12_client.c	/^static int ssl_write_renegotiation_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_write_renegotiation_ext	library/ssl_tls12_server.c	/^static void ssl_write_renegotiation_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:void	file:
ssl_write_server_hello	library/ssl_tls12_server.c	/^static int ssl_write_server_hello(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_write_server_hello_done	library/ssl_tls12_server.c	/^static int ssl_write_server_hello_done(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_write_server_key_exchange	library/ssl_tls12_server.c	/^static int ssl_write_server_key_exchange(mbedtls_ssl_context *ssl)$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_write_session_ticket_ext	library/ssl_tls12_client.c	/^static int ssl_write_session_ticket_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_write_session_ticket_ext	library/ssl_tls12_server.c	/^static void ssl_write_session_ticket_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:void	file:
ssl_write_supported_groups_ext	library/ssl_client.c	/^static int ssl_write_supported_groups_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_write_supported_point_formats_ext	library/ssl_tls12_client.c	/^static int ssl_write_supported_point_formats_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_write_supported_point_formats_ext	library/ssl_tls12_server.c	/^static void ssl_write_supported_point_formats_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:void	file:
ssl_write_use_srtp_ext	library/ssl_tls12_client.c	/^static int ssl_write_use_srtp_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
ssl_write_use_srtp_ext	library/ssl_tls12_server.c	/^static void ssl_write_use_srtp_ext(mbedtls_ssl_context *ssl,$/;"	f	typeref:typename:void	file:
standard_modulus_setup	library/bignum_mod.c	/^static inline void standard_modulus_setup(mbedtls_mpi_mod_modulus *N,$/;"	f	typeref:typename:void	file:
stop	tests/scripts/test_generate_test_code.py	/^        def stop(*_unused):$/;"	f	member:ParseFunction.test_begin_dep	file:
stop	tests/scripts/test_generate_test_code.py	/^        def stop(*_unused):$/;"	f	member:ParseFunction.test_begin_function_dep	file:
stop	tests/scripts/test_generate_test_code.py	/^        def stop(*_unused):$/;"	f	member:ParseFunction.test_begin_header	file:
stop	tests/scripts/test_generate_test_code.py	/^        def stop(*_unused):$/;"	f	member:ParseFunction.test_begin_helper	file:
store16	3rdparty/everest/include/everest/kremlin/c_endianness.h	/^inline static void store16(uint8_t *b, uint16_t i) {$/;"	f	typeref:typename:void
store32	3rdparty/everest/include/everest/kremlin/c_endianness.h	/^inline static void store32(uint8_t *b, uint32_t i) {$/;"	f	typeref:typename:void
store64	3rdparty/everest/include/everest/kremlin/c_endianness.h	/^inline static void store64(uint8_t *b, uint64_t i) {$/;"	f	typeref:typename:void
sub32	library/ecp_curves.c	/^static inline void sub32(uint32_t *dst, uint32_t src, signed char *carry)$/;"	f	typeref:typename:void	file:
sysctl_arnd_wrapper	library/entropy_poll.c	/^static int sysctl_arnd_wrapper(unsigned char *buf, size_t buflen)$/;"	f	typeref:typename:int	file:
term_handler	programs/ssl/ssl_server2.c	/^void term_handler(int sig)$/;"	f	typeref:typename:void
test_aes128_cmac_prf	library/cmac.c	/^static int test_aes128_cmac_prf(int verbose)$/;"	f	typeref:typename:int	file:
test_case_for_key_generation	tests/scripts/generate_psa_tests.py	/^def test_case_for_key_generation($/;"	f	typeref:typename:test_case.TestCase
test_case_for_key_type_not_supported	tests/scripts/generate_psa_tests.py	/^def test_case_for_key_type_not_supported($/;"	f	typeref:typename:test_case.TestCase
test_hooks_failure_detected	programs/ssl/ssl_test_lib.c	/^int test_hooks_failure_detected(void)$/;"	f	typeref:typename:int
test_hooks_free	programs/ssl/ssl_test_lib.c	/^void test_hooks_free(void)$/;"	f	typeref:typename:void
test_hooks_init	programs/ssl/ssl_test_lib.c	/^void test_hooks_init(void)$/;"	f	typeref:typename:void
test_snprintf	programs/test/selftest.c	/^static int test_snprintf(size_t n, const char *ref_buf, int ref_ret)$/;"	f	typeref:typename:int	file:
test_ssl_endpoint_certificate_free	tests/src/test_helpers/ssl_helpers.c	/^static void test_ssl_endpoint_certificate_free(mbedtls_test_ssl_endpoint *ep)$/;"	f	typeref:typename:void	file:
test_ssl_message_queue_peek_info	tests/src/test_helpers/ssl_helpers.c	/^static int test_ssl_message_queue_peek_info($/;"	f	typeref:typename:int	file:
thread_create	programs/ssl/ssl_pthread_server.c	/^static int thread_create(mbedtls_net_context *client_fd)$/;"	f	typeref:typename:int	file:
threading_mutex_dummy	library/threading.c	/^static void threading_mutex_dummy(mbedtls_threading_mutex_t *mutex)$/;"	f	typeref:typename:void	file:
threading_mutex_fail	library/threading.c	/^static int threading_mutex_fail(mbedtls_threading_mutex_t *mutex)$/;"	f	typeref:typename:int	file:
threading_mutex_free_pthread	library/threading.c	/^static void threading_mutex_free_pthread(mbedtls_threading_mutex_t *mutex)$/;"	f	typeref:typename:void	file:
threading_mutex_init_pthread	library/threading.c	/^static void threading_mutex_init_pthread(mbedtls_threading_mutex_t *mutex)$/;"	f	typeref:typename:void	file:
threading_mutex_lock_pthread	library/threading.c	/^static int threading_mutex_lock_pthread(mbedtls_threading_mutex_t *mutex)$/;"	f	typeref:typename:int	file:
threading_mutex_unlock_pthread	library/threading.c	/^static int threading_mutex_unlock_pthread(mbedtls_threading_mutex_t *mutex)$/;"	f	typeref:typename:int	file:
tls_prf_generic	library/ssl_tls.c	/^static int tls_prf_generic(mbedtls_md_type_t md_type,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
tls_prf_get_type	library/ssl_tls.c	/^static mbedtls_tls_prf_types tls_prf_get_type(mbedtls_ssl_tls_prf_cb *tls_prf)$/;"	f	typeref:typename:mbedtls_tls_prf_types	file:
tls_prf_sha256	library/ssl_tls.c	/^static int tls_prf_sha256(const unsigned char *secret, size_t slen,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
tls_prf_sha384	library/ssl_tls.c	/^static int tls_prf_sha384(const unsigned char *secret, size_t slen,$/;"	f	typeref:typename:MBEDTLS_CHECK_RETURN_CRITICAL int	file:
trace_exception	scripts/generate_driver_wrappers.py	/^def trace_exception(e: Exception, file=sys.stderr) -> None:$/;"	f	typeref:typename:None
u256_add	3rdparty/p256-m/p256-m/p256-m.c	/^static uint32_t u256_add(uint32_t z[8],$/;"	f	typeref:typename:uint32_t	file:
u256_cmov	3rdparty/p256-m/p256-m/p256-m.c	/^static void u256_cmov(uint32_t z[8], const uint32_t x[8], uint32_t c)$/;"	f	typeref:typename:void	file:
u256_diff	3rdparty/p256-m/p256-m/p256-m.c	/^static uint32_t u256_diff(const uint32_t x[8], const uint32_t y[8])$/;"	f	typeref:typename:uint32_t	file:
u256_diff0	3rdparty/p256-m/p256-m/p256-m.c	/^static uint32_t u256_diff0(const uint32_t x[8])$/;"	f	typeref:typename:uint32_t	file:
u256_from_bytes	3rdparty/p256-m/p256-m/p256-m.c	/^static void u256_from_bytes(uint32_t z[8], const uint8_t p[32])$/;"	f	typeref:typename:void	file:
u256_set32	3rdparty/p256-m/p256-m/p256-m.c	/^static void u256_set32(uint32_t z[8], uint32_t x)$/;"	f	typeref:typename:void	file:
u256_sub	3rdparty/p256-m/p256-m/p256-m.c	/^static uint32_t u256_sub(uint32_t z[8],$/;"	f	typeref:typename:uint32_t	file:
u256_to_bytes	3rdparty/p256-m/p256-m/p256-m.c	/^static void u256_to_bytes(uint8_t p[32], const uint32_t z[8])$/;"	f	typeref:typename:void	file:
u288_muladd	3rdparty/p256-m/p256-m/p256-m.c	/^static uint32_t u288_muladd(uint32_t z[9], uint32_t x, const uint32_t y[8])$/;"	f	typeref:typename:uint32_t	file:
u288_rshift32	3rdparty/p256-m/p256-m/p256-m.c	/^static void u288_rshift32(uint32_t z[9], uint32_t c)$/;"	f	typeref:typename:void	file:
u32_muladd64	3rdparty/p256-m/p256-m/p256-m.c	/^static uint64_t u32_muladd64(uint32_t x, uint32_t y, uint32_t z, uint32_t t)$/;"	f	typeref:typename:uint64_t	file:
unhexlify	scripts/mbedtls_dev/asymmetric_key_data.py	/^def unhexlify(text: str) -> bytes:$/;"	f	typeref:typename:bytes
unwrap	library/nist_kw.c	/^static int unwrap(mbedtls_nist_kw_context *ctx,$/;"	f	typeref:typename:int	file:
unwrap_data	programs/psa/key_ladder_demo.c	/^static psa_status_t unwrap_data(const char *input_file_name,$/;"	f	typeref:typename:psa_status_t	file:
update_priority_string_list	tests/scripts/generate_tls13_compat_tests.py	/^        def update_priority_string_list(items, map_table):$/;"	f	member:GnuTLSBase.cmd	file:
usage	programs/psa/key_ladder_demo.c	/^static void usage(void)$/;"	f	typeref:typename:void	file:
usage	programs/psa/psa_constant_names.c	/^static void usage(const char *program_name)$/;"	f	typeref:typename:void	file:
usage	programs/test/zeroize.c	/^void usage(void)$/;"	f	typeref:typename:void
val_is_int	tests/scripts/generate_test_code.py	/^def val_is_int(val: str) -> bool:$/;"	f	typeref:typename:bool
validate_json	scripts/generate_driver_wrappers.py	/^def validate_json(driverjson_data: Driver, driverschema_list: dict) -> None:$/;"	f	typeref:typename:None
verify_chain	library/memory_buffer_alloc.c	/^static int verify_chain(void)$/;"	f	typeref:typename:int	file:
verify_hash	tests/src/drivers/test_driver_signature.c	/^psa_status_t verify_hash($/;"	f	typeref:typename:psa_status_t
verify_header	library/memory_buffer_alloc.c	/^static int verify_header(memory_header *hdr)$/;"	f	typeref:typename:int	file:
vget_low_p64	library/aesce.c	/^static inline poly64x1_t vget_low_p64(poly64x2_t a)$/;"	f	typeref:typename:poly64x1_t	file:
vmull_high_p64	library/aesce.c	/^static inline poly128_t vmull_high_p64(poly64x2_t a, poly64x2_t b)$/;"	f	typeref:typename:poly128_t	file:
vmull_p64	library/aesce.c	/^static inline poly128_t vmull_p64(poly64_t a, poly64_t b)$/;"	f	typeref:typename:poly128_t	file:
vrbitq_u8	library/aesce.c	/^static inline uint8x16_t vrbitq_u8(uint8x16_t x)$/;"	f	typeref:typename:uint8x16_t	file:
vsha512h2q_u64	library/sha512.c	/^static inline uint64x2_t vsha512h2q_u64(uint64x2_t x, uint64x2_t y, uint64x2_t z)$/;"	f	typeref:typename:uint64x2_t	file:
vsha512hq_u64	library/sha512.c	/^static inline uint64x2_t vsha512hq_u64(uint64x2_t x, uint64x2_t y, uint64x2_t z)$/;"	f	typeref:typename:uint64x2_t	file:
vsha512su0q_u64	library/sha512.c	/^static inline uint64x2_t vsha512su0q_u64(uint64x2_t x, uint64x2_t y)$/;"	f	typeref:typename:uint64x2_t	file:
vsha512su1q_u64	library/sha512.c	/^static inline uint64x2_t vsha512su1q_u64(uint64x2_t x, uint64x2_t y, uint64x2_t z)$/;"	f	typeref:typename:uint64x2_t	file:
wrap_data	programs/psa/key_ladder_demo.c	/^static psa_status_t wrap_data(const char *input_file_name,$/;"	f	typeref:typename:psa_status_t	file:
wrapper	tests/scripts/audit-validity-dates.py	/^        def wrapper(data: bytes):$/;"	f	member:X509Parser.__generate_parser	file:
write_and_get_response	programs/ssl/ssl_mail_client.c	/^static int write_and_get_response(mbedtls_net_context *sock_fd, unsigned char *buf, size_t len)$/;"	f	typeref:typename:int	file:
write_certificate	programs/x509/cert_write.c	/^int write_certificate(mbedtls_x509write_cert *crt, const char *output_file,$/;"	f	typeref:typename:int
write_certificate_request	programs/x509/cert_req.c	/^int write_certificate_request(mbedtls_x509write_csr *req, const char *output_file,$/;"	f	typeref:typename:int
write_data_file	scripts/mbedtls_dev/test_case.py	/^def write_data_file(filename: str,$/;"	f	typeref:typename:None
write_file	programs/util/pem2der.c	/^static int write_file(const char *path, unsigned char *buf, size_t n)$/;"	f	typeref:typename:int	file:
write_private_key	programs/pkey/gen_key.c	/^static int write_private_key(mbedtls_pk_context *key, const char *output_file)$/;"	f	typeref:typename:int	file:
write_private_key	programs/pkey/key_app_writer.c	/^static int write_private_key(mbedtls_pk_context *key, const char *output_file)$/;"	f	typeref:typename:int	file:
write_public_key	programs/pkey/key_app_writer.c	/^static int write_public_key(mbedtls_pk_context *key, const char *output_file)$/;"	f	typeref:typename:int	file:
write_ssl_and_get_response	programs/ssl/ssl_mail_client.c	/^static int write_ssl_and_get_response(mbedtls_ssl_context *ssl, unsigned char *buf, size_t len)$/;"	f	typeref:typename:int	file:
write_ssl_data	programs/ssl/ssl_mail_client.c	/^static int write_ssl_data(mbedtls_ssl_context *ssl, unsigned char *buf, size_t len)$/;"	f	typeref:typename:int	file:
x509_attr_descr_from_name	library/x509_create.c	/^static const x509_attr_descriptor_t *x509_attr_descr_from_name(const char *name, size_t name_len/;"	f	typeref:typename:const x509_attr_descriptor_t *	file:
x509_check_wildcard	library/x509_crt.c	/^static int x509_check_wildcard(const char *cn, const mbedtls_x509_buf *name)$/;"	f	typeref:typename:int	file:
x509_crl_get_version	library/x509_crl.c	/^static int x509_crl_get_version(unsigned char **p,$/;"	f	typeref:typename:int	file:
x509_crt_check_cn	library/x509_crt.c	/^static int x509_crt_check_cn(const mbedtls_x509_buf *name,$/;"	f	typeref:typename:int	file:
x509_crt_check_ee_locally_trusted	library/x509_crt.c	/^static int x509_crt_check_ee_locally_trusted($/;"	f	typeref:typename:int	file:
x509_crt_check_parent	library/x509_crt.c	/^static int x509_crt_check_parent(const mbedtls_x509_crt *child,$/;"	f	typeref:typename:int	file:
x509_crt_check_san	library/x509_crt.c	/^static int x509_crt_check_san(const mbedtls_x509_sequence *san,$/;"	f	typeref:typename:int	file:
x509_crt_check_san_ip	library/x509_crt.c	/^static int x509_crt_check_san_ip(const mbedtls_x509_sequence *san,$/;"	f	typeref:typename:int	file:
x509_crt_check_san_uri	library/x509_crt.c	/^static int x509_crt_check_san_uri(const mbedtls_x509_sequence *san,$/;"	f	typeref:typename:int	file:
x509_crt_check_signature	library/x509_crt.c	/^static int x509_crt_check_signature(const mbedtls_x509_crt *child,$/;"	f	typeref:typename:int	file:
x509_crt_find_parent	library/x509_crt.c	/^static int x509_crt_find_parent($/;"	f	typeref:typename:int	file:
x509_crt_find_parent_in	library/x509_crt.c	/^static int x509_crt_find_parent_in($/;"	f	typeref:typename:int	file:
x509_crt_merge_flags_with_cb	library/x509_crt.c	/^static int x509_crt_merge_flags_with_cb($/;"	f	typeref:typename:int	file:
x509_crt_parse_der_core	library/x509_crt.c	/^static int x509_crt_parse_der_core(mbedtls_x509_crt *crt,$/;"	f	typeref:typename:int	file:
x509_crt_verify_chain	library/x509_crt.c	/^static int x509_crt_verify_chain($/;"	f	typeref:typename:int	file:
x509_crt_verify_chain_reset	library/x509_crt.c	/^static void x509_crt_verify_chain_reset($/;"	f	typeref:typename:void	file:
x509_crt_verify_info	programs/ssl/ssl_test_common_source.c	/^int x509_crt_verify_info(char *buf, size_t size, const char *prefix,$/;"	f	typeref:typename:int
x509_crt_verify_name	library/x509_crt.c	/^static void x509_crt_verify_name(const mbedtls_x509_crt *crt,$/;"	f	typeref:typename:void	file:
x509_crt_verify_restartable_ca_cb	library/x509_crt.c	/^static int x509_crt_verify_restartable_ca_cb(mbedtls_x509_crt *crt,$/;"	f	typeref:typename:int	file:
x509_crt_verifycrl	library/x509_crt.c	/^static int x509_crt_verifycrl(mbedtls_x509_crt *crt, mbedtls_x509_crt *ca,$/;"	f	typeref:typename:int	file:
x509_csr_get_version	library/x509_csr.c	/^static int x509_csr_get_version(unsigned char **p,$/;"	f	typeref:typename:int	file:
x509_csr_parse_attributes	library/x509_csr.c	/^static int x509_csr_parse_attributes(mbedtls_x509_csr *csr,$/;"	f	typeref:typename:int	file:
x509_csr_parse_extensions	library/x509_csr.c	/^static int x509_csr_parse_extensions(mbedtls_x509_csr *csr,$/;"	f	typeref:typename:int	file:
x509_date_is_valid	library/x509.c	/^static int x509_date_is_valid(const mbedtls_x509_time *t)$/;"	f	typeref:typename:int	file:
x509_get_attr_type_value	library/x509.c	/^static int x509_get_attr_type_value(unsigned char **p,$/;"	f	typeref:typename:int	file:
x509_get_authority_key_id	library/x509_crt.c	/^static int x509_get_authority_key_id(unsigned char **p,$/;"	f	typeref:typename:int	file:
x509_get_basic_constraints	library/x509_crt.c	/^static int x509_get_basic_constraints(unsigned char **p,$/;"	f	typeref:typename:int	file:
x509_get_certificate_policies	library/x509_crt.c	/^static int x509_get_certificate_policies(unsigned char **p,$/;"	f	typeref:typename:int	file:
x509_get_crl_entry_ext	library/x509_crl.c	/^static int x509_get_crl_entry_ext(unsigned char **p,$/;"	f	typeref:typename:int	file:
x509_get_crl_ext	library/x509_crl.c	/^static int x509_get_crl_ext(unsigned char **p,$/;"	f	typeref:typename:int	file:
x509_get_crt_ext	library/x509_crt.c	/^static int x509_get_crt_ext(unsigned char **p,$/;"	f	typeref:typename:int	file:
x509_get_current_time	library/x509.c	/^static int x509_get_current_time(mbedtls_x509_time *now)$/;"	f	typeref:typename:int	file:
x509_get_dates	library/x509_crt.c	/^static int x509_get_dates(unsigned char **p,$/;"	f	typeref:typename:int	file:
x509_get_entries	library/x509_crl.c	/^static int x509_get_entries(unsigned char **p,$/;"	f	typeref:typename:int	file:
x509_get_ext_key_usage	library/x509_crt.c	/^static int x509_get_ext_key_usage(unsigned char **p,$/;"	f	typeref:typename:int	file:
x509_get_hash_alg	library/x509.c	/^static int x509_get_hash_alg(const mbedtls_x509_buf *alg, mbedtls_md_type_t *md_alg)$/;"	f	typeref:typename:int	file:
x509_get_other_name	library/x509.c	/^static int x509_get_other_name(const mbedtls_x509_buf *subject_alt_name,$/;"	f	typeref:typename:int	file:
x509_get_subject_key_id	library/x509_crt.c	/^static int x509_get_subject_key_id(unsigned char **p,$/;"	f	typeref:typename:int	file:
x509_get_uid	library/x509_crt.c	/^static int x509_get_uid(unsigned char **p,$/;"	f	typeref:typename:int	file:
x509_get_version	library/x509_crt.c	/^static int x509_get_version(unsigned char **p,$/;"	f	typeref:typename:int	file:
x509_inet_pton_ipv4	library/x509_crt.c	/^static int x509_inet_pton_ipv4(const char *src, void *dst)$/;"	f	typeref:typename:int	file:
x509_inet_pton_ipv6	library/x509_crt.c	/^static int x509_inet_pton_ipv6(const char *src, void *dst)$/;"	f	typeref:typename:int	file:
x509_info_cert_policies	library/x509_crt.c	/^static int x509_info_cert_policies(char **buf, size_t *size,$/;"	f	typeref:typename:int	file:
x509_info_ext_key_usage	library/x509_crt.c	/^static int x509_info_ext_key_usage(char **buf, size_t *size,$/;"	f	typeref:typename:int	file:
x509_memcasecmp	library/x509_crt.c	/^static int x509_memcasecmp(const void *s1, const void *s2, size_t len)$/;"	f	typeref:typename:int	file:
x509_name_cmp	library/x509_crt.c	/^static int x509_name_cmp(const mbedtls_x509_name *a, const mbedtls_x509_name *b)$/;"	f	typeref:typename:int	file:
x509_parse2_int	library/x509.c	/^static int x509_parse2_int(const unsigned char *p)$/;"	f	typeref:typename:int	file:
x509_parse_time	library/x509.c	/^static int x509_parse_time(const unsigned char *p, mbedtls_x509_time *tm,$/;"	f	typeref:typename:int	file:
x509_profile_check_key	library/x509_crt.c	/^static int x509_profile_check_key(const mbedtls_x509_crt_profile *profile,$/;"	f	typeref:typename:int	file:
x509_profile_check_md_alg	library/x509_crt.c	/^static int x509_profile_check_md_alg(const mbedtls_x509_crt_profile *profile,$/;"	f	typeref:typename:int	file:
x509_profile_check_pk_alg	library/x509_crt.c	/^static int x509_profile_check_pk_alg(const mbedtls_x509_crt_profile *profile,$/;"	f	typeref:typename:int	file:
x509_string_cmp	library/x509_crt.c	/^static int x509_string_cmp(const mbedtls_x509_buf *a, const mbedtls_x509_buf *b)$/;"	f	typeref:typename:int	file:
x509_write_extension	library/x509_create.c	/^static int x509_write_extension(unsigned char **p, unsigned char *start,$/;"	f	typeref:typename:int	file:
x509_write_name	library/x509_create.c	/^static int x509_write_name(unsigned char **p,$/;"	f	typeref:typename:int	file:
x509_write_time	library/x509write_crt.c	/^static int x509_write_time(unsigned char **p, unsigned char *start,$/;"	f	typeref:typename:int	file:
x509write_csr_der_internal	library/x509write_csr.c	/^static int x509write_csr_der_internal(mbedtls_x509write_csr *ctx,$/;"	f	typeref:typename:int	file:
xts_aes_ctx_alloc	library/cipher_wrap.c	/^static void *xts_aes_ctx_alloc(void)$/;"	f	typeref:typename:void *	file:
xts_aes_ctx_free	library/cipher_wrap.c	/^static void xts_aes_ctx_free(void *ctx)$/;"	f	typeref:typename:void	file:
xts_aes_setkey_dec_wrap	library/cipher_wrap.c	/^static int xts_aes_setkey_dec_wrap(void *ctx, const unsigned char *key,$/;"	f	typeref:typename:int	file:
xts_aes_setkey_enc_wrap	library/cipher_wrap.c	/^static int xts_aes_setkey_enc_wrap(void *ctx, const unsigned char *key,$/;"	f	typeref:typename:int	file:
zfill_match	scripts/mbedtls_dev/bignum_common.py	/^def zfill_match(reference: str, target: str) -> str:$/;"	f	typeref:typename:str
